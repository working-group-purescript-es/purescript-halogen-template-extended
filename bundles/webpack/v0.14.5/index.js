/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./bundles/purs/index.js":
/*!*******************************!*\
  !*** ./bundles/purs/index.js ***!
  \*******************************/
/***/ (() => {

eval("// Generated by purs bundle 0.14.5\nvar PS = {};\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Control.Monad.Trans.Class\"] = $PS[\"Control.Monad.Trans.Class\"] || {};\n  var exports = $PS[\"Control.Monad.Trans.Class\"];\n  var lift = function (dict) {\n      return dict.lift;\n  };\n  exports[\"lift\"] = lift;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Control.Semigroupoid\"] = $PS[\"Control.Semigroupoid\"] || {};\n  var exports = $PS[\"Control.Semigroupoid\"];\n  var semigroupoidFn = {\n      compose: function (f) {\n          return function (g) {\n              return function (x) {\n                  return f(g(x));\n              };\n          };\n      }\n  };\n  var compose = function (dict) {\n      return dict.compose;\n  };\n  exports[\"compose\"] = compose;\n  exports[\"semigroupoidFn\"] = semigroupoidFn;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Control.Category\"] = $PS[\"Control.Category\"] || {};\n  var exports = $PS[\"Control.Category\"];\n  var Control_Semigroupoid = $PS[\"Control.Semigroupoid\"];                \n  var identity = function (dict) {\n      return dict.identity;\n  };\n  var categoryFn = {\n      identity: function (x) {\n          return x;\n      },\n      Semigroupoid0: function () {\n          return Control_Semigroupoid.semigroupoidFn;\n      }\n  };\n  exports[\"identity\"] = identity;\n  exports[\"categoryFn\"] = categoryFn;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Function\"] = $PS[\"Data.Function\"] || {};\n  var exports = $PS[\"Data.Function\"];\n  var flip = function (f) {\n      return function (b) {\n          return function (a) {\n              return f(a)(b);\n          };\n      };\n  };\n  var $$const = function (a) {\n      return function (v) {\n          return a;\n      };\n  };\n  var applyFlipped = function (x) {\n      return function (f) {\n          return f(x);\n      };\n  };\n  exports[\"flip\"] = flip;\n  exports[\"const\"] = $$const;\n  exports[\"applyFlipped\"] = applyFlipped;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  exports.arrayMap = function (f) {\n    return function (arr) {\n      var l = arr.length;\n      var result = new Array(l);\n      for (var i = 0; i < l; i++) {\n        result[i] = f(arr[i]);\n      }\n      return result;\n    };\n  };\n})(PS[\"Data.Functor\"] = PS[\"Data.Functor\"] || {});\n(function(exports) {\n  \"use strict\";\n\n  exports.unit = {};\n})(PS[\"Data.Unit\"] = PS[\"Data.Unit\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Unit\"] = $PS[\"Data.Unit\"] || {};\n  var exports = $PS[\"Data.Unit\"];\n  var $foreign = $PS[\"Data.Unit\"];\n  exports[\"unit\"] = $foreign.unit;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Functor\"] = $PS[\"Data.Functor\"] || {};\n  var exports = $PS[\"Data.Functor\"];\n  var $foreign = $PS[\"Data.Functor\"];\n  var Control_Semigroupoid = $PS[\"Control.Semigroupoid\"];\n  var Data_Function = $PS[\"Data.Function\"];\n  var Data_Unit = $PS[\"Data.Unit\"];                  \n  var map = function (dict) {\n      return dict.map;\n  };\n  var $$void = function (dictFunctor) {\n      return map(dictFunctor)(Data_Function[\"const\"](Data_Unit.unit));\n  };\n  var voidLeft = function (dictFunctor) {\n      return function (f) {\n          return function (x) {\n              return map(dictFunctor)(Data_Function[\"const\"](x))(f);\n          };\n      };\n  };\n  var voidRight = function (dictFunctor) {\n      return function (x) {\n          return map(dictFunctor)(Data_Function[\"const\"](x));\n      };\n  };\n  var functorFn = {\n      map: Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn)\n  };\n  var functorArray = {\n      map: $foreign.arrayMap\n  };\n  exports[\"map\"] = map;\n  exports[\"void\"] = $$void;\n  exports[\"voidRight\"] = voidRight;\n  exports[\"voidLeft\"] = voidLeft;\n  exports[\"functorFn\"] = functorFn;\n  exports[\"functorArray\"] = functorArray;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Control.Apply\"] = $PS[\"Control.Apply\"] || {};\n  var exports = $PS[\"Control.Apply\"];\n  var Control_Category = $PS[\"Control.Category\"];\n  var Data_Function = $PS[\"Data.Function\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var applyFn = {\n      apply: function (f) {\n          return function (g) {\n              return function (x) {\n                  return f(x)(g(x));\n              };\n          };\n      },\n      Functor0: function () {\n          return Data_Functor.functorFn;\n      }\n  };\n  var apply = function (dict) {\n      return dict.apply;\n  };\n  var applyFirst = function (dictApply) {\n      return function (a) {\n          return function (b) {\n              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function[\"const\"])(a))(b);\n          };\n      };\n  };\n  var applySecond = function (dictApply) {\n      return function (a) {\n          return function (b) {\n              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function[\"const\"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);\n          };\n      };\n  };\n  exports[\"apply\"] = apply;\n  exports[\"applyFirst\"] = applyFirst;\n  exports[\"applySecond\"] = applySecond;\n  exports[\"applyFn\"] = applyFn;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Control.Applicative\"] = $PS[\"Control.Applicative\"] || {};\n  var exports = $PS[\"Control.Applicative\"];\n  var Control_Apply = $PS[\"Control.Apply\"];\n  var Data_Unit = $PS[\"Data.Unit\"];                  \n  var pure = function (dict) {\n      return dict.pure;\n  };\n  var unless = function (dictApplicative) {\n      return function (v) {\n          return function (v1) {\n              if (!v) {\n                  return v1;\n              };\n              if (v) {\n                  return pure(dictApplicative)(Data_Unit.unit);\n              };\n              throw new Error(\"Failed pattern match at Control.Applicative (line 66, column 1 - line 66, column 65): \" + [ v.constructor.name, v1.constructor.name ]);\n          };\n      };\n  };\n  var when = function (dictApplicative) {\n      return function (v) {\n          return function (v1) {\n              if (v) {\n                  return v1;\n              };\n              if (!v) {\n                  return pure(dictApplicative)(Data_Unit.unit);\n              };\n              throw new Error(\"Failed pattern match at Control.Applicative (line 61, column 1 - line 61, column 63): \" + [ v.constructor.name, v1.constructor.name ]);\n          };\n      };\n  };\n  var liftA1 = function (dictApplicative) {\n      return function (f) {\n          return function (a) {\n              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);\n          };\n      };\n  };\n  exports[\"pure\"] = pure;\n  exports[\"liftA1\"] = liftA1;\n  exports[\"unless\"] = unless;\n  exports[\"when\"] = when;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  var refEq = function (r1) {\n    return function (r2) {\n      return r1 === r2;\n    };\n  };\n\n  exports.eqBooleanImpl = refEq;\n  exports.eqIntImpl = refEq; \n  exports.eqStringImpl = refEq;\n\n  exports.eqArrayImpl = function (f) {\n    return function (xs) {\n      return function (ys) {\n        if (xs.length !== ys.length) return false;\n        for (var i = 0; i < xs.length; i++) {\n          if (!f(xs[i])(ys[i])) return false;\n        }\n        return true;\n      };\n    };\n  };\n})(PS[\"Data.Eq\"] = PS[\"Data.Eq\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Symbol\"] = $PS[\"Data.Symbol\"] || {};\n  var exports = $PS[\"Data.Symbol\"];\n  var reflectSymbol = function (dict) {\n      return dict.reflectSymbol;\n  };\n  exports[\"reflectSymbol\"] = reflectSymbol;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  exports.unsafeGet = function (label) {\n    return function (rec) {\n      return rec[label];\n    };\n  };\n})(PS[\"Record.Unsafe\"] = PS[\"Record.Unsafe\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Record.Unsafe\"] = $PS[\"Record.Unsafe\"] || {};\n  var exports = $PS[\"Record.Unsafe\"];\n  var $foreign = $PS[\"Record.Unsafe\"];\n  exports[\"unsafeGet\"] = $foreign.unsafeGet;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Type.Proxy\"] = $PS[\"Type.Proxy\"] || {};\n  var exports = $PS[\"Type.Proxy\"];\n  var $$Proxy = (function () {\n      function $$Proxy() {\n\n      };\n      $$Proxy.value = new $$Proxy();\n      return $$Proxy;\n  })();\n  exports[\"Proxy\"] = $$Proxy;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Eq\"] = $PS[\"Data.Eq\"] || {};\n  var exports = $PS[\"Data.Eq\"];\n  var $foreign = $PS[\"Data.Eq\"];\n  var Data_Symbol = $PS[\"Data.Symbol\"];\n  var Record_Unsafe = $PS[\"Record.Unsafe\"];\n  var Type_Proxy = $PS[\"Type.Proxy\"];\n  var eqUnit = {\n      eq: function (v) {\n          return function (v1) {\n              return true;\n          };\n      }\n  };\n  var eqString = {\n      eq: $foreign.eqStringImpl\n  };\n  var eqRowNil = {\n      eqRecord: function (v) {\n          return function (v1) {\n              return function (v2) {\n                  return true;\n              };\n          };\n      }\n  };\n  var eqRecord = function (dict) {\n      return dict.eqRecord;\n  };\n  var eqRec = function (dictRowToList) {\n      return function (dictEqRecord) {\n          return {\n              eq: eqRecord(dictEqRecord)(Type_Proxy[\"Proxy\"].value)\n          };\n      };\n  };\n  var eqInt = {\n      eq: $foreign.eqIntImpl\n  };\n  var eqBoolean = {\n      eq: $foreign.eqBooleanImpl\n  };\n  var eq = function (dict) {\n      return dict.eq;\n  };\n  var eqArray = function (dictEq) {\n      return {\n          eq: $foreign.eqArrayImpl(eq(dictEq))\n      };\n  };\n  var eqRowCons = function (dictEqRecord) {\n      return function (dictCons) {\n          return function (dictIsSymbol) {\n              return function (dictEq) {\n                  return {\n                      eqRecord: function (v) {\n                          return function (ra) {\n                              return function (rb) {\n                                  var tail = eqRecord(dictEqRecord)(Type_Proxy[\"Proxy\"].value)(ra)(rb);\n                                  var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy[\"Proxy\"].value);\n                                  var get = Record_Unsafe.unsafeGet(key);\n                                  return eq(dictEq)(get(ra))(get(rb)) && tail;\n                              };\n                          };\n                      }\n                  };\n              };\n          };\n      };\n  };\n  var notEq = function (dictEq) {\n      return function (x) {\n          return function (y) {\n              return eq(eqBoolean)(eq(dictEq)(x)(y))(false);\n          };\n      };\n  };\n  exports[\"eq\"] = eq;\n  exports[\"notEq\"] = notEq;\n  exports[\"eqInt\"] = eqInt;\n  exports[\"eqString\"] = eqString;\n  exports[\"eqUnit\"] = eqUnit;\n  exports[\"eqArray\"] = eqArray;\n  exports[\"eqRec\"] = eqRec;\n  exports[\"eqRowNil\"] = eqRowNil;\n  exports[\"eqRowCons\"] = eqRowCons;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Maybe\"] = $PS[\"Data.Maybe\"] || {};\n  var exports = $PS[\"Data.Maybe\"];\n  var Control_Category = $PS[\"Control.Category\"];\n  var Data_Eq = $PS[\"Data.Eq\"];\n  var Data_Function = $PS[\"Data.Function\"];\n  var Data_Functor = $PS[\"Data.Functor\"];          \n  var Nothing = (function () {\n      function Nothing() {\n\n      };\n      Nothing.value = new Nothing();\n      return Nothing;\n  })();\n  var Just = (function () {\n      function Just(value0) {\n          this.value0 = value0;\n      };\n      Just.create = function (value0) {\n          return new Just(value0);\n      };\n      return Just;\n  })();\n  var maybe = function (v) {\n      return function (v1) {\n          return function (v2) {\n              if (v2 instanceof Nothing) {\n                  return v;\n              };\n              if (v2 instanceof Just) {\n                  return v1(v2.value0);\n              };\n              throw new Error(\"Failed pattern match at Data.Maybe (line 230, column 1 - line 230, column 51): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n          };\n      };\n  };\n  var isNothing = maybe(true)(Data_Function[\"const\"](false));\n  var isJust = maybe(false)(Data_Function[\"const\"](true));\n  var functorMaybe = {\n      map: function (v) {\n          return function (v1) {\n              if (v1 instanceof Just) {\n                  return new Just(v(v1.value0));\n              };\n              return Nothing.value;\n          };\n      }\n  };\n  var fromMaybe = function (a) {\n      return maybe(a)(Control_Category.identity(Control_Category.categoryFn));\n  };\n  var fromJust = function (dictPartial) {\n      return function (v) {\n          if (v instanceof Just) {\n              return v.value0;\n          };\n          throw new Error(\"Failed pattern match at Data.Maybe (line 281, column 1 - line 281, column 46): \" + [ v.constructor.name ]);\n      };\n  };\n  var eqMaybe = function (dictEq) {\n      return {\n          eq: function (x) {\n              return function (y) {\n                  if (x instanceof Nothing && y instanceof Nothing) {\n                      return true;\n                  };\n                  if (x instanceof Just && y instanceof Just) {\n                      return Data_Eq.eq(dictEq)(x.value0)(y.value0);\n                  };\n                  return false;\n              };\n          }\n      };\n  };\n  var applyMaybe = {\n      apply: function (v) {\n          return function (v1) {\n              if (v instanceof Just) {\n                  return Data_Functor.map(functorMaybe)(v.value0)(v1);\n              };\n              if (v instanceof Nothing) {\n                  return Nothing.value;\n              };\n              throw new Error(\"Failed pattern match at Data.Maybe (line 68, column 1 - line 70, column 30): \" + [ v.constructor.name, v1.constructor.name ]);\n          };\n      },\n      Functor0: function () {\n          return functorMaybe;\n      }\n  };\n  var bindMaybe = {\n      bind: function (v) {\n          return function (v1) {\n              if (v instanceof Just) {\n                  return v1(v.value0);\n              };\n              if (v instanceof Nothing) {\n                  return Nothing.value;\n              };\n              throw new Error(\"Failed pattern match at Data.Maybe (line 126, column 1 - line 128, column 28): \" + [ v.constructor.name, v1.constructor.name ]);\n          };\n      },\n      Apply0: function () {\n          return applyMaybe;\n      }\n  };\n  exports[\"Nothing\"] = Nothing;\n  exports[\"Just\"] = Just;\n  exports[\"maybe\"] = maybe;\n  exports[\"fromMaybe\"] = fromMaybe;\n  exports[\"isJust\"] = isJust;\n  exports[\"isNothing\"] = isNothing;\n  exports[\"fromJust\"] = fromJust;\n  exports[\"functorMaybe\"] = functorMaybe;\n  exports[\"bindMaybe\"] = bindMaybe;\n  exports[\"eqMaybe\"] = eqMaybe;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Either\"] = $PS[\"Data.Either\"] || {};\n  var exports = $PS[\"Data.Either\"];\n  var Data_Function = $PS[\"Data.Function\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];              \n  var Left = (function () {\n      function Left(value0) {\n          this.value0 = value0;\n      };\n      Left.create = function (value0) {\n          return new Left(value0);\n      };\n      return Left;\n  })();\n  var Right = (function () {\n      function Right(value0) {\n          this.value0 = value0;\n      };\n      Right.create = function (value0) {\n          return new Right(value0);\n      };\n      return Right;\n  })();\n  var either = function (v) {\n      return function (v1) {\n          return function (v2) {\n              if (v2 instanceof Left) {\n                  return v(v2.value0);\n              };\n              if (v2 instanceof Right) {\n                  return v1(v2.value0);\n              };\n              throw new Error(\"Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n          };\n      };\n  };\n  var hush = either(Data_Function[\"const\"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);\n  exports[\"Left\"] = Left;\n  exports[\"Right\"] = Right;\n  exports[\"either\"] = either;\n  exports[\"hush\"] = hush;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  exports.foldrArray = function (f) {\n    return function (init) {\n      return function (xs) {\n        var acc = init;\n        var len = xs.length;\n        for (var i = len - 1; i >= 0; i--) {\n          acc = f(xs[i])(acc);\n        }\n        return acc;\n      };\n    };\n  };\n\n  exports.foldlArray = function (f) {\n    return function (init) {\n      return function (xs) {\n        var acc = init;\n        var len = xs.length;\n        for (var i = 0; i < len; i++) {\n          acc = f(acc)(xs[i]);\n        }\n        return acc;\n      };\n    };\n  };\n})(PS[\"Data.Foldable\"] = PS[\"Data.Foldable\"] || {});\n(function(exports) {\n  \"use strict\";\n\n  exports.boolConj = function (b1) {\n    return function (b2) {\n      return b1 && b2;\n    };\n  };\n\n  exports.boolDisj = function (b1) {\n    return function (b2) {\n      return b1 || b2;\n    };\n  };\n\n  exports.boolNot = function (b) {\n    return !b;\n  };\n})(PS[\"Data.HeytingAlgebra\"] = PS[\"Data.HeytingAlgebra\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.HeytingAlgebra\"] = $PS[\"Data.HeytingAlgebra\"] || {};\n  var exports = $PS[\"Data.HeytingAlgebra\"];\n  var $foreign = $PS[\"Data.HeytingAlgebra\"];\n  var tt = function (dict) {\n      return dict.tt;\n  };\n  var not = function (dict) {\n      return dict.not;\n  };\n  var implies = function (dict) {\n      return dict.implies;\n  };\n  var ff = function (dict) {\n      return dict.ff;\n  };\n  var disj = function (dict) {\n      return dict.disj;\n  };\n  var heytingAlgebraBoolean = {\n      ff: false,\n      tt: true,\n      implies: function (a) {\n          return function (b) {\n              return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);\n          };\n      },\n      conj: $foreign.boolConj,\n      disj: $foreign.boolDisj,\n      not: $foreign.boolNot\n  };\n  var conj = function (dict) {\n      return dict.conj;\n  };\n  var heytingAlgebraFunction = function (dictHeytingAlgebra) {\n      return {\n          ff: function (v) {\n              return ff(dictHeytingAlgebra);\n          },\n          tt: function (v) {\n              return tt(dictHeytingAlgebra);\n          },\n          implies: function (f) {\n              return function (g) {\n                  return function (a) {\n                      return implies(dictHeytingAlgebra)(f(a))(g(a));\n                  };\n              };\n          },\n          conj: function (f) {\n              return function (g) {\n                  return function (a) {\n                      return conj(dictHeytingAlgebra)(f(a))(g(a));\n                  };\n              };\n          },\n          disj: function (f) {\n              return function (g) {\n                  return function (a) {\n                      return disj(dictHeytingAlgebra)(f(a))(g(a));\n                  };\n              };\n          },\n          not: function (f) {\n              return function (a) {\n                  return not(dictHeytingAlgebra)(f(a));\n              };\n          }\n      };\n  };\n  exports[\"ff\"] = ff;\n  exports[\"disj\"] = disj;\n  exports[\"not\"] = not;\n  exports[\"heytingAlgebraBoolean\"] = heytingAlgebraBoolean;\n  exports[\"heytingAlgebraFunction\"] = heytingAlgebraFunction;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Monoid\"] = $PS[\"Data.Monoid\"] || {};\n  var exports = $PS[\"Data.Monoid\"];\n  var mempty = function (dict) {\n      return dict.mempty;\n  };\n  exports[\"mempty\"] = mempty;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Monoid.Disj\"] = $PS[\"Data.Monoid.Disj\"] || {};\n  var exports = $PS[\"Data.Monoid.Disj\"];\n  var Data_HeytingAlgebra = $PS[\"Data.HeytingAlgebra\"];\n  var Disj = function (x) {\n      return x;\n  };\n  var semigroupDisj = function (dictHeytingAlgebra) {\n      return {\n          append: function (v) {\n              return function (v1) {\n                  return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);\n              };\n          }\n      };\n  };\n  var monoidDisj = function (dictHeytingAlgebra) {\n      return {\n          mempty: Data_HeytingAlgebra.ff(dictHeytingAlgebra),\n          Semigroup0: function () {\n              return semigroupDisj(dictHeytingAlgebra);\n          }\n      };\n  };\n  exports[\"Disj\"] = Disj;\n  exports[\"monoidDisj\"] = monoidDisj;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  // module Unsafe.Coerce\n\n  exports.unsafeCoerce = function (x) {\n    return x;\n  };\n})(PS[\"Unsafe.Coerce\"] = PS[\"Unsafe.Coerce\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Unsafe.Coerce\"] = $PS[\"Unsafe.Coerce\"] || {};\n  var exports = $PS[\"Unsafe.Coerce\"];\n  var $foreign = $PS[\"Unsafe.Coerce\"];\n  exports[\"unsafeCoerce\"] = $foreign.unsafeCoerce;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Safe.Coerce\"] = $PS[\"Safe.Coerce\"] || {};\n  var exports = $PS[\"Safe.Coerce\"];\n  var Unsafe_Coerce = $PS[\"Unsafe.Coerce\"];                \n  var coerce = function (dictCoercible) {\n      return Unsafe_Coerce.unsafeCoerce;\n  };\n  exports[\"coerce\"] = coerce;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Newtype\"] = $PS[\"Data.Newtype\"] || {};\n  var exports = $PS[\"Data.Newtype\"];\n  var Safe_Coerce = $PS[\"Safe.Coerce\"];\n  var unwrap = function (dictNewtype) {\n      return Safe_Coerce.coerce();\n  };\n  var over = function (dictNewtype) {\n      return function (dictNewtype1) {\n          return function (v) {\n              return Safe_Coerce.coerce();\n          };\n      };\n  };\n  var alaF = function (dictCoercible) {\n      return function (dictCoercible1) {\n          return function (dictNewtype) {\n              return function (dictNewtype1) {\n                  return function (v) {\n                      return Safe_Coerce.coerce();\n                  };\n              };\n          };\n      };\n  };\n  exports[\"unwrap\"] = unwrap;\n  exports[\"alaF\"] = alaF;\n  exports[\"over\"] = over;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  exports.concatString = function (s1) {\n    return function (s2) {\n      return s1 + s2;\n    };\n  };\n\n  exports.concatArray = function (xs) {\n    return function (ys) {\n      if (xs.length === 0) return ys;\n      if (ys.length === 0) return xs;\n      return xs.concat(ys);\n    };\n  };\n})(PS[\"Data.Semigroup\"] = PS[\"Data.Semigroup\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Semigroup\"] = $PS[\"Data.Semigroup\"] || {};\n  var exports = $PS[\"Data.Semigroup\"];\n  var $foreign = $PS[\"Data.Semigroup\"];\n  var semigroupString = {\n      append: $foreign.concatString\n  };\n  var semigroupArray = {\n      append: $foreign.concatArray\n  };\n  var append = function (dict) {\n      return dict.append;\n  };\n  exports[\"append\"] = append;\n  exports[\"semigroupString\"] = semigroupString;\n  exports[\"semigroupArray\"] = semigroupArray;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Foldable\"] = $PS[\"Data.Foldable\"] || {};\n  var exports = $PS[\"Data.Foldable\"];\n  var $foreign = $PS[\"Data.Foldable\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Control_Apply = $PS[\"Control.Apply\"];\n  var Data_Either = $PS[\"Data.Either\"];\n  var Data_Eq = $PS[\"Data.Eq\"];\n  var Data_Function = $PS[\"Data.Function\"];\n  var Data_HeytingAlgebra = $PS[\"Data.HeytingAlgebra\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Data_Monoid = $PS[\"Data.Monoid\"];\n  var Data_Monoid_Disj = $PS[\"Data.Monoid.Disj\"];\n  var Data_Newtype = $PS[\"Data.Newtype\"];\n  var Data_Semigroup = $PS[\"Data.Semigroup\"];\n  var Data_Unit = $PS[\"Data.Unit\"];                \n  var foldr = function (dict) {\n      return dict.foldr;\n  };\n  var traverse_ = function (dictApplicative) {\n      return function (dictFoldable) {\n          return function (f) {\n              return foldr(dictFoldable)((function () {\n                  var $316 = Control_Apply.applySecond(dictApplicative.Apply0());\n                  return function ($317) {\n                      return $316(f($317));\n                  };\n              })())(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));\n          };\n      };\n  };\n  var for_ = function (dictApplicative) {\n      return function (dictFoldable) {\n          return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));\n      };\n  };\n  var foldl = function (dict) {\n      return dict.foldl;\n  };\n  var indexl = function (dictFoldable) {\n      return function (idx) {\n          var go = function (cursor) {\n              return function (a) {\n                  if (cursor.elem instanceof Data_Maybe.Just) {\n                      return cursor;\n                  };\n                  var $157 = cursor.pos === idx;\n                  if ($157) {\n                      return {\n                          elem: new Data_Maybe.Just(a),\n                          pos: cursor.pos\n                      };\n                  };\n                  return {\n                      pos: cursor.pos + 1 | 0,\n                      elem: cursor.elem\n                  };\n              };\n          };\n          var $318 = foldl(dictFoldable)(go)({\n              elem: Data_Maybe.Nothing.value,\n              pos: 0\n          });\n          return function ($319) {\n              return (function (v) {\n                  return v.elem;\n              })($318($319));\n          };\n      };\n  };\n  var foldableMaybe = {\n      foldr: function (v) {\n          return function (z) {\n              return function (v1) {\n                  if (v1 instanceof Data_Maybe.Nothing) {\n                      return z;\n                  };\n                  if (v1 instanceof Data_Maybe.Just) {\n                      return v(v1.value0)(z);\n                  };\n                  throw new Error(\"Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): \" + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);\n              };\n          };\n      },\n      foldl: function (v) {\n          return function (z) {\n              return function (v1) {\n                  if (v1 instanceof Data_Maybe.Nothing) {\n                      return z;\n                  };\n                  if (v1 instanceof Data_Maybe.Just) {\n                      return v(z)(v1.value0);\n                  };\n                  throw new Error(\"Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): \" + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);\n              };\n          };\n      },\n      foldMap: function (dictMonoid) {\n          return function (v) {\n              return function (v1) {\n                  if (v1 instanceof Data_Maybe.Nothing) {\n                      return Data_Monoid.mempty(dictMonoid);\n                  };\n                  if (v1 instanceof Data_Maybe.Just) {\n                      return v(v1.value0);\n                  };\n                  throw new Error(\"Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): \" + [ v.constructor.name, v1.constructor.name ]);\n              };\n          };\n      }\n  };\n  var foldableEither = {\n      foldr: function (v) {\n          return function (z) {\n              return function (v1) {\n                  if (v1 instanceof Data_Either.Left) {\n                      return z;\n                  };\n                  if (v1 instanceof Data_Either.Right) {\n                      return v(v1.value0)(z);\n                  };\n                  throw new Error(\"Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): \" + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);\n              };\n          };\n      },\n      foldl: function (v) {\n          return function (z) {\n              return function (v1) {\n                  if (v1 instanceof Data_Either.Left) {\n                      return z;\n                  };\n                  if (v1 instanceof Data_Either.Right) {\n                      return v(z)(v1.value0);\n                  };\n                  throw new Error(\"Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): \" + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);\n              };\n          };\n      },\n      foldMap: function (dictMonoid) {\n          return function (v) {\n              return function (v1) {\n                  if (v1 instanceof Data_Either.Left) {\n                      return Data_Monoid.mempty(dictMonoid);\n                  };\n                  if (v1 instanceof Data_Either.Right) {\n                      return v(v1.value0);\n                  };\n                  throw new Error(\"Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): \" + [ v.constructor.name, v1.constructor.name ]);\n              };\n          };\n      }\n  };\n  var foldMapDefaultR = function (dictFoldable) {\n      return function (dictMonoid) {\n          return function (f) {\n              return foldr(dictFoldable)(function (x) {\n                  return function (acc) {\n                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);\n                  };\n              })(Data_Monoid.mempty(dictMonoid));\n          };\n      };\n  };\n  var foldableArray = {\n      foldr: $foreign.foldrArray,\n      foldl: $foreign.foldlArray,\n      foldMap: function (dictMonoid) {\n          return foldMapDefaultR(foldableArray)(dictMonoid);\n      }\n  };\n  var foldMap = function (dict) {\n      return dict.foldMap;\n  };\n  var any = function (dictFoldable) {\n      return function (dictHeytingAlgebra) {\n          return Data_Newtype.alaF()()()()(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));\n      };\n  };\n  var elem = function (dictFoldable) {\n      return function (dictEq) {\n          var $326 = any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean);\n          var $327 = Data_Eq.eq(dictEq);\n          return function ($328) {\n              return $326($327($328));\n          };\n      };\n  };\n  exports[\"foldr\"] = foldr;\n  exports[\"foldl\"] = foldl;\n  exports[\"foldMap\"] = foldMap;\n  exports[\"traverse_\"] = traverse_;\n  exports[\"for_\"] = for_;\n  exports[\"indexl\"] = indexl;\n  exports[\"foldableArray\"] = foldableArray;\n  exports[\"foldableMaybe\"] = foldableMaybe;\n  exports[\"foldableEither\"] = foldableEither;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.List.Types\"] = $PS[\"Data.List.Types\"] || {};\n  var exports = $PS[\"Data.List.Types\"];\n  var Control_Apply = $PS[\"Control.Apply\"];\n  var Data_Foldable = $PS[\"Data.Foldable\"];\n  var Data_Function = $PS[\"Data.Function\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Data_Monoid = $PS[\"Data.Monoid\"];\n  var Data_Semigroup = $PS[\"Data.Semigroup\"];        \n  var Nil = (function () {\n      function Nil() {\n\n      };\n      Nil.value = new Nil();\n      return Nil;\n  })();\n  var Cons = (function () {\n      function Cons(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      Cons.create = function (value0) {\n          return function (value1) {\n              return new Cons(value0, value1);\n          };\n      };\n      return Cons;\n  })();\n  var NonEmptyList = function (x) {\n      return x;\n  };\n  var listMap = function (f) {\n      var chunkedRevMap = function ($copy_chunksAcc) {\n          return function ($copy_v) {\n              var $tco_var_chunksAcc = $copy_chunksAcc;\n              var $tco_done = false;\n              var $tco_result;\n              function $tco_loop(chunksAcc, v) {\n                  if (v instanceof Cons && (v.value1 instanceof Cons && v.value1.value1 instanceof Cons)) {\n                      $tco_var_chunksAcc = new Cons(v, chunksAcc);\n                      $copy_v = v.value1.value1.value1;\n                      return;\n                  };\n                  var unrolledMap = function (v1) {\n                      if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil)) {\n                          return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));\n                      };\n                      if (v1 instanceof Cons && v1.value1 instanceof Nil) {\n                          return new Cons(f(v1.value0), Nil.value);\n                      };\n                      return Nil.value;\n                  };\n                  var reverseUnrolledMap = function ($copy_v1) {\n                      return function ($copy_acc) {\n                          var $tco_var_v1 = $copy_v1;\n                          var $tco_done1 = false;\n                          var $tco_result;\n                          function $tco_loop(v1, acc) {\n                              if (v1 instanceof Cons && (v1.value0 instanceof Cons && (v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons))) {\n                                  $tco_var_v1 = v1.value1;\n                                  $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));\n                                  return;\n                              };\n                              $tco_done1 = true;\n                              return acc;\n                          };\n                          while (!$tco_done1) {\n                              $tco_result = $tco_loop($tco_var_v1, $copy_acc);\n                          };\n                          return $tco_result;\n                      };\n                  };\n                  $tco_done = true;\n                  return reverseUnrolledMap(chunksAcc)(unrolledMap(v));\n              };\n              while (!$tco_done) {\n                  $tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);\n              };\n              return $tco_result;\n          };\n      };\n      return chunkedRevMap(Nil.value);\n  };\n  var functorList = {\n      map: listMap\n  };                                                                   \n  var foldableList = {\n      foldr: function (f) {\n          return function (b) {\n              var rev = (function () {\n                  var go = function ($copy_acc) {\n                      return function ($copy_v) {\n                          var $tco_var_acc = $copy_acc;\n                          var $tco_done = false;\n                          var $tco_result;\n                          function $tco_loop(acc, v) {\n                              if (v instanceof Nil) {\n                                  $tco_done = true;\n                                  return acc;\n                              };\n                              if (v instanceof Cons) {\n                                  $tco_var_acc = new Cons(v.value0, acc);\n                                  $copy_v = v.value1;\n                                  return;\n                              };\n                              throw new Error(\"Failed pattern match at Data.List.Types (line 108, column 7 - line 108, column 23): \" + [ acc.constructor.name, v.constructor.name ]);\n                          };\n                          while (!$tco_done) {\n                              $tco_result = $tco_loop($tco_var_acc, $copy_v);\n                          };\n                          return $tco_result;\n                      };\n                  };\n                  return go(Nil.value);\n              })();\n              var $205 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);\n              return function ($206) {\n                  return $205(rev($206));\n              };\n          };\n      },\n      foldl: function (f) {\n          var go = function ($copy_b) {\n              return function ($copy_v) {\n                  var $tco_var_b = $copy_b;\n                  var $tco_done1 = false;\n                  var $tco_result;\n                  function $tco_loop(b, v) {\n                      if (v instanceof Nil) {\n                          $tco_done1 = true;\n                          return b;\n                      };\n                      if (v instanceof Cons) {\n                          $tco_var_b = f(b)(v.value0);\n                          $copy_v = v.value1;\n                          return;\n                      };\n                      throw new Error(\"Failed pattern match at Data.List.Types (line 112, column 12 - line 114, column 30): \" + [ v.constructor.name ]);\n                  };\n                  while (!$tco_done1) {\n                      $tco_result = $tco_loop($tco_var_b, $copy_v);\n                  };\n                  return $tco_result;\n              };\n          };\n          return go;\n      },\n      foldMap: function (dictMonoid) {\n          return function (f) {\n              return Data_Foldable.foldl(foldableList)(function (acc) {\n                  var $207 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);\n                  return function ($208) {\n                      return $207(f($208));\n                  };\n              })(Data_Monoid.mempty(dictMonoid));\n          };\n      }\n  };\n  var semigroupList = {\n      append: function (xs) {\n          return function (ys) {\n              return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);\n          };\n      }\n  };\n  var applyList = {\n      apply: function (v) {\n          return function (v1) {\n              if (v instanceof Nil) {\n                  return Nil.value;\n              };\n              if (v instanceof Cons) {\n                  return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));\n              };\n              throw new Error(\"Failed pattern match at Data.List.Types (line 158, column 1 - line 160, column 48): \" + [ v.constructor.name, v1.constructor.name ]);\n          };\n      },\n      Functor0: function () {\n          return functorList;\n      }\n  };\n  var applicativeList = {\n      pure: function (a) {\n          return new Cons(a, Nil.value);\n      },\n      Apply0: function () {\n          return applyList;\n      }\n  };\n  var altList = {\n      alt: Data_Semigroup.append(semigroupList),\n      Functor0: function () {\n          return functorList;\n      }\n  };\n  var plusList = {\n      empty: Nil.value,\n      Alt0: function () {\n          return altList;\n      }\n  };\n  exports[\"Nil\"] = Nil;\n  exports[\"Cons\"] = Cons;\n  exports[\"NonEmptyList\"] = NonEmptyList;\n  exports[\"semigroupList\"] = semigroupList;\n  exports[\"foldableList\"] = foldableList;\n  exports[\"applicativeList\"] = applicativeList;\n  exports[\"plusList\"] = plusList;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Control.Plus\"] = $PS[\"Control.Plus\"] || {};\n  var exports = $PS[\"Control.Plus\"];\n  var empty = function (dict) {\n      return dict.empty;\n  };\n  exports[\"empty\"] = empty;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.NonEmpty\"] = $PS[\"Data.NonEmpty\"] || {};\n  var exports = $PS[\"Data.NonEmpty\"];\n  var Control_Plus = $PS[\"Control.Plus\"];                      \n  var NonEmpty = (function () {\n      function NonEmpty(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      NonEmpty.create = function (value0) {\n          return function (value1) {\n              return new NonEmpty(value0, value1);\n          };\n      };\n      return NonEmpty;\n  })();\n  var singleton = function (dictPlus) {\n      return function (a) {\n          return new NonEmpty(a, Control_Plus.empty(dictPlus));\n      };\n  };\n  exports[\"NonEmpty\"] = NonEmpty;\n  exports[\"singleton\"] = singleton;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.List.NonEmpty\"] = $PS[\"Data.List.NonEmpty\"] || {};\n  var exports = $PS[\"Data.List.NonEmpty\"];\n  var Data_List_Types = $PS[\"Data.List.Types\"];\n  var Data_NonEmpty = $PS[\"Data.NonEmpty\"];\n  var singleton = (function () {\n      var $172 = Data_NonEmpty.singleton(Data_List_Types.plusList);\n      return function ($173) {\n          return Data_List_Types.NonEmptyList($172($173));\n      };\n  })();\n  var cons = function (y) {\n      return function (v) {\n          return new Data_NonEmpty.NonEmpty(y, new Data_List_Types.Cons(v.value0, v.value1));\n      };\n  };\n  exports[\"singleton\"] = singleton;\n  exports[\"cons\"] = cons;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  var unsafeCompareImpl = function (lt) {\n    return function (eq) {\n      return function (gt) {\n        return function (x) {\n          return function (y) {\n            return x < y ? lt : x === y ? eq : gt;\n          };\n        };\n      };\n    };\n  };                                         \n  exports.ordIntImpl = unsafeCompareImpl;   \n  exports.ordStringImpl = unsafeCompareImpl;\n})(PS[\"Data.Ord\"] = PS[\"Data.Ord\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Ordering\"] = $PS[\"Data.Ordering\"] || {};\n  var exports = $PS[\"Data.Ordering\"];\n  var LT = (function () {\n      function LT() {\n\n      };\n      LT.value = new LT();\n      return LT;\n  })();\n  var GT = (function () {\n      function GT() {\n\n      };\n      GT.value = new GT();\n      return GT;\n  })();\n  var EQ = (function () {\n      function EQ() {\n\n      };\n      EQ.value = new EQ();\n      return EQ;\n  })();\n  exports[\"LT\"] = LT;\n  exports[\"GT\"] = GT;\n  exports[\"EQ\"] = EQ;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Ord\"] = $PS[\"Data.Ord\"] || {};\n  var exports = $PS[\"Data.Ord\"];\n  var $foreign = $PS[\"Data.Ord\"];\n  var Data_Eq = $PS[\"Data.Eq\"];\n  var Data_Ordering = $PS[\"Data.Ordering\"];\n  var ordUnit = {\n      compare: function (v) {\n          return function (v1) {\n              return Data_Ordering.EQ.value;\n          };\n      },\n      Eq0: function () {\n          return Data_Eq.eqUnit;\n      }\n  };\n  var ordString = {\n      compare: $foreign.ordStringImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),\n      Eq0: function () {\n          return Data_Eq.eqString;\n      }\n  };\n  var ordInt = {\n      compare: $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),\n      Eq0: function () {\n          return Data_Eq.eqInt;\n      }\n  };\n  var compare = function (dict) {\n      return dict.compare;\n  };\n  exports[\"compare\"] = compare;\n  exports[\"ordInt\"] = ordInt;\n  exports[\"ordString\"] = ordString;\n  exports[\"ordUnit\"] = ordUnit;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Tuple\"] = $PS[\"Data.Tuple\"] || {};\n  var exports = $PS[\"Data.Tuple\"];\n  var Data_Eq = $PS[\"Data.Eq\"];\n  var Data_Ord = $PS[\"Data.Ord\"];\n  var Data_Ordering = $PS[\"Data.Ordering\"];        \n  var Tuple = (function () {\n      function Tuple(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      Tuple.create = function (value0) {\n          return function (value1) {\n              return new Tuple(value0, value1);\n          };\n      };\n      return Tuple;\n  })();\n  var uncurry = function (f) {\n      return function (v) {\n          return f(v.value0)(v.value1);\n      };\n  };\n  var snd = function (v) {\n      return v.value1;\n  };\n  var functorTuple = {\n      map: function (f) {\n          return function (m) {\n              return new Tuple(m.value0, f(m.value1));\n          };\n      }\n  };\n  var fst = function (v) {\n      return v.value0;\n  };\n  var eqTuple = function (dictEq) {\n      return function (dictEq1) {\n          return {\n              eq: function (x) {\n                  return function (y) {\n                      return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);\n                  };\n              }\n          };\n      };\n  };\n  var ordTuple = function (dictOrd) {\n      return function (dictOrd1) {\n          return {\n              compare: function (x) {\n                  return function (y) {\n                      var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);\n                      if (v instanceof Data_Ordering.LT) {\n                          return Data_Ordering.LT.value;\n                      };\n                      if (v instanceof Data_Ordering.GT) {\n                          return Data_Ordering.GT.value;\n                      };\n                      return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);\n                  };\n              },\n              Eq0: function () {\n                  return eqTuple(dictOrd.Eq0())(dictOrd1.Eq0());\n              }\n          };\n      };\n  };\n  exports[\"Tuple\"] = Tuple;\n  exports[\"fst\"] = fst;\n  exports[\"snd\"] = snd;\n  exports[\"uncurry\"] = uncurry;\n  exports[\"ordTuple\"] = ordTuple;\n  exports[\"functorTuple\"] = functorTuple;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Control.Applicative.Free\"] = $PS[\"Control.Applicative.Free\"] || {};\n  var exports = $PS[\"Control.Applicative.Free\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Control_Apply = $PS[\"Control.Apply\"];\n  var Control_Category = $PS[\"Control.Category\"];\n  var Data_Either = $PS[\"Data.Either\"];\n  var Data_List_NonEmpty = $PS[\"Data.List.NonEmpty\"];\n  var Data_List_Types = $PS[\"Data.List.Types\"];\n  var Data_NonEmpty = $PS[\"Data.NonEmpty\"];\n  var Data_Tuple = $PS[\"Data.Tuple\"];                \n  var Pure = (function () {\n      function Pure(value0) {\n          this.value0 = value0;\n      };\n      Pure.create = function (value0) {\n          return new Pure(value0);\n      };\n      return Pure;\n  })();\n  var Lift = (function () {\n      function Lift(value0) {\n          this.value0 = value0;\n      };\n      Lift.create = function (value0) {\n          return new Lift(value0);\n      };\n      return Lift;\n  })();\n  var Ap = (function () {\n      function Ap(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      Ap.create = function (value0) {\n          return function (value1) {\n              return new Ap(value0, value1);\n          };\n      };\n      return Ap;\n  })();\n  var mkAp = function (fba) {\n      return function (fb) {\n          return new Ap(fba, fb);\n      };\n  };\n  var liftFreeAp = Lift.create;\n  var goLeft = function ($copy_dictApplicative) {\n      return function ($copy_fStack) {\n          return function ($copy_valStack) {\n              return function ($copy_nat) {\n                  return function ($copy_func) {\n                      return function ($copy_count) {\n                          var $tco_var_dictApplicative = $copy_dictApplicative;\n                          var $tco_var_fStack = $copy_fStack;\n                          var $tco_var_valStack = $copy_valStack;\n                          var $tco_var_nat = $copy_nat;\n                          var $tco_var_func = $copy_func;\n                          var $tco_done = false;\n                          var $tco_result;\n                          function $tco_loop(dictApplicative, fStack, valStack, nat, func, count) {\n                              if (func instanceof Pure) {\n                                  $tco_done = true;\n                                  return new Data_Tuple.Tuple(new Data_List_Types.Cons({\n                                      func: Control_Applicative.pure(dictApplicative)(func.value0),\n                                      count: count\n                                  }, fStack), valStack);\n                              };\n                              if (func instanceof Lift) {\n                                  $tco_done = true;\n                                  return new Data_Tuple.Tuple(new Data_List_Types.Cons({\n                                      func: nat(func.value0),\n                                      count: count\n                                  }, fStack), valStack);\n                              };\n                              if (func instanceof Ap) {\n                                  $tco_var_dictApplicative = dictApplicative;\n                                  $tco_var_fStack = fStack;\n                                  $tco_var_valStack = Data_List_NonEmpty.cons(func.value1)(valStack);\n                                  $tco_var_nat = nat;\n                                  $tco_var_func = func.value0;\n                                  $copy_count = count + 1 | 0;\n                                  return;\n                              };\n                              throw new Error(\"Failed pattern match at Control.Applicative.Free (line 102, column 41 - line 105, column 81): \" + [ func.constructor.name ]);\n                          };\n                          while (!$tco_done) {\n                              $tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_valStack, $tco_var_nat, $tco_var_func, $copy_count);\n                          };\n                          return $tco_result;\n                      };\n                  };\n              };\n          };\n      };\n  };\n  var goApply = function ($copy_dictApplicative) {\n      return function ($copy_fStack) {\n          return function ($copy_vals) {\n              return function ($copy_gVal) {\n                  var $tco_var_dictApplicative = $copy_dictApplicative;\n                  var $tco_var_fStack = $copy_fStack;\n                  var $tco_var_vals = $copy_vals;\n                  var $tco_done = false;\n                  var $tco_result;\n                  function $tco_loop(dictApplicative, fStack, vals, gVal) {\n                      if (fStack instanceof Data_List_Types.Nil) {\n                          $tco_done = true;\n                          return new Data_Either.Left(gVal);\n                      };\n                      if (fStack instanceof Data_List_Types.Cons) {\n                          var gRes = Control_Apply.apply(dictApplicative.Apply0())(fStack.value0.func)(gVal);\n                          var $14 = fStack.value0.count === 1;\n                          if ($14) {\n                              if (fStack.value1 instanceof Data_List_Types.Nil) {\n                                  $tco_done = true;\n                                  return new Data_Either.Left(gRes);\n                              };\n                              $tco_var_dictApplicative = dictApplicative;\n                              $tco_var_fStack = fStack.value1;\n                              $tco_var_vals = vals;\n                              $copy_gVal = gRes;\n                              return;\n                          };\n                          if (vals instanceof Data_List_Types.Nil) {\n                              $tco_done = true;\n                              return new Data_Either.Left(gRes);\n                          };\n                          if (vals instanceof Data_List_Types.Cons) {\n                              $tco_done = true;\n                              return Data_Either.Right.create(new Data_Tuple.Tuple(new Data_List_Types.Cons({\n                                  func: gRes,\n                                  count: fStack.value0.count - 1 | 0\n                              }, fStack.value1), new Data_NonEmpty.NonEmpty(vals.value0, vals.value1)));\n                          };\n                          throw new Error(\"Failed pattern match at Control.Applicative.Free (line 83, column 11 - line 88, column 50): \" + [ vals.constructor.name ]);\n                      };\n                      throw new Error(\"Failed pattern match at Control.Applicative.Free (line 72, column 3 - line 88, column 50): \" + [ fStack.constructor.name ]);\n                  };\n                  while (!$tco_done) {\n                      $tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_vals, $copy_gVal);\n                  };\n                  return $tco_result;\n              };\n          };\n      };\n  };\n  var functorFreeAp = {\n      map: function (f) {\n          return function (x) {\n              return mkAp(new Pure(f))(x);\n          };\n      }\n  };\n  var foldFreeAp = function (dictApplicative) {\n      return function (nat) {\n          return function (z) {\n              var go = function ($copy_v) {\n                  var $tco_done = false;\n                  var $tco_result;\n                  function $tco_loop(v) {\n                      if (v.value1.value0 instanceof Pure) {\n                          var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(Control_Applicative.pure(dictApplicative)(v.value1.value0.value0));\n                          if (v1 instanceof Data_Either.Left) {\n                              $tco_done = true;\n                              return v1.value0;\n                          };\n                          if (v1 instanceof Data_Either.Right) {\n                              $copy_v = v1.value0;\n                              return;\n                          };\n                          throw new Error(\"Failed pattern match at Control.Applicative.Free (line 54, column 17 - line 56, column 24): \" + [ v1.constructor.name ]);\n                      };\n                      if (v.value1.value0 instanceof Lift) {\n                          var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(nat(v.value1.value0.value0));\n                          if (v1 instanceof Data_Either.Left) {\n                              $tco_done = true;\n                              return v1.value0;\n                          };\n                          if (v1 instanceof Data_Either.Right) {\n                              $copy_v = v1.value0;\n                              return;\n                          };\n                          throw new Error(\"Failed pattern match at Control.Applicative.Free (line 57, column 17 - line 59, column 24): \" + [ v1.constructor.name ]);\n                      };\n                      if (v.value1.value0 instanceof Ap) {\n                          var nextVals = new Data_NonEmpty.NonEmpty(v.value1.value0.value1, v.value1.value1);\n                          $copy_v = goLeft(dictApplicative)(v.value0)(nextVals)(nat)(v.value1.value0.value0)(1);\n                          return;\n                      };\n                      throw new Error(\"Failed pattern match at Control.Applicative.Free (line 53, column 5 - line 62, column 47): \" + [ v.value1.value0.constructor.name ]);\n                  };\n                  while (!$tco_done) {\n                      $tco_result = $tco_loop($copy_v);\n                  };\n                  return $tco_result;\n              };\n              return go(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_NonEmpty.singleton(z)));\n          };\n      };\n  };\n  var retractFreeAp = function (dictApplicative) {\n      return foldFreeAp(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));\n  };\n  var applyFreeAp = {\n      apply: function (fba) {\n          return function (fb) {\n              return mkAp(fba)(fb);\n          };\n      },\n      Functor0: function () {\n          return functorFreeAp;\n      }\n  };\n  var applicativeFreeAp = {\n      pure: Pure.create,\n      Apply0: function () {\n          return applyFreeAp;\n      }\n  };\n  var hoistFreeAp = function (f) {\n      return foldFreeAp(applicativeFreeAp)(function ($37) {\n          return liftFreeAp(f($37));\n      });\n  };\n  exports[\"retractFreeAp\"] = retractFreeAp;\n  exports[\"hoistFreeAp\"] = hoistFreeAp;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Control.Bind\"] = $PS[\"Control.Bind\"] || {};\n  var exports = $PS[\"Control.Bind\"];\n  var Control_Category = $PS[\"Control.Category\"];\n  var Data_Function = $PS[\"Data.Function\"];          \n  var discard = function (dict) {\n      return dict.discard;\n  };\n  var bind = function (dict) {\n      return dict.bind;\n  };\n  var bindFlipped = function (dictBind) {\n      return Data_Function.flip(bind(dictBind));\n  };\n  var composeKleisliFlipped = function (dictBind) {\n      return function (f) {\n          return function (g) {\n              return function (a) {\n                  return bindFlipped(dictBind)(f)(g(a));\n              };\n          };\n      };\n  };\n  var discardUnit = {\n      discard: function (dictBind) {\n          return bind(dictBind);\n      }\n  };\n  var join = function (dictBind) {\n      return function (m) {\n          return bind(dictBind)(m)(Control_Category.identity(Control_Category.categoryFn));\n      };\n  };\n  exports[\"bind\"] = bind;\n  exports[\"bindFlipped\"] = bindFlipped;\n  exports[\"discard\"] = discard;\n  exports[\"join\"] = join;\n  exports[\"composeKleisliFlipped\"] = composeKleisliFlipped;\n  exports[\"discardUnit\"] = discardUnit;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Control.Monad\"] = $PS[\"Control.Monad\"] || {};\n  var exports = $PS[\"Control.Monad\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Control_Bind = $PS[\"Control.Bind\"];\n  var unlessM = function (dictMonad) {\n      return function (mb) {\n          return function (m) {\n              return Control_Bind.bind(dictMonad.Bind1())(mb)(function (b) {\n                  return Control_Applicative.unless(dictMonad.Applicative0())(b)(m);\n              });\n          };\n      };\n  };\n  var ap = function (dictMonad) {\n      return function (f) {\n          return function (a) {\n              return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {\n                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {\n                      return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));\n                  });\n              });\n          };\n      };\n  };\n  exports[\"unlessM\"] = unlessM;\n  exports[\"ap\"] = ap;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  exports.pureE = function (a) {\n    return function () {\n      return a;\n    };\n  };\n\n  exports.bindE = function (a) {\n    return function (f) {\n      return function () {\n        return f(a())();\n      };\n    };\n  };\n})(PS[\"Effect\"] = PS[\"Effect\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Effect\"] = $PS[\"Effect\"] || {};\n  var exports = $PS[\"Effect\"];\n  var $foreign = $PS[\"Effect\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Control_Monad = $PS[\"Control.Monad\"];                  \n  var monadEffect = {\n      Applicative0: function () {\n          return applicativeEffect;\n      },\n      Bind1: function () {\n          return bindEffect;\n      }\n  };\n  var bindEffect = {\n      bind: $foreign.bindE,\n      Apply0: function () {\n          return applyEffect;\n      }\n  };\n  var applyEffect = {\n      apply: Control_Monad.ap(monadEffect),\n      Functor0: function () {\n          return functorEffect;\n      }\n  };\n  var applicativeEffect = {\n      pure: $foreign.pureE,\n      Apply0: function () {\n          return applyEffect;\n      }\n  };\n  var functorEffect = {\n      map: Control_Applicative.liftA1(applicativeEffect)\n  };\n  exports[\"functorEffect\"] = functorEffect;\n  exports[\"applyEffect\"] = applyEffect;\n  exports[\"applicativeEffect\"] = applicativeEffect;\n  exports[\"bindEffect\"] = bindEffect;\n  exports[\"monadEffect\"] = monadEffect;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  exports.new = function (val) {\n    return function () {\n      return { value: val };\n    };\n  };\n\n  exports.read = function (ref) {\n    return function () {\n      return ref.value;\n    };\n  };\n\n  exports.modifyImpl = function (f) {\n    return function (ref) {\n      return function () {\n        var t = f(ref.value);\n        ref.value = t.state;\n        return t.value;\n      };\n    };\n  };\n\n  exports.write = function (val) {\n    return function (ref) {\n      return function () {\n        ref.value = val;\n      };\n    };\n  };\n})(PS[\"Effect.Ref\"] = PS[\"Effect.Ref\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Effect.Ref\"] = $PS[\"Effect.Ref\"] || {};\n  var exports = $PS[\"Effect.Ref\"];\n  var $foreign = $PS[\"Effect.Ref\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Effect = $PS[\"Effect\"];                \n  var modify$prime = $foreign.modifyImpl;\n  var modify = function (f) {\n      return modify$prime(function (s) {\n          var s$prime = f(s);\n          return {\n              state: s$prime,\n              value: s$prime\n          };\n      });\n  };\n  var modify_ = function (f) {\n      return function (s) {\n          return Data_Functor[\"void\"](Effect.functorEffect)(modify(f)(s));\n      };\n  };\n  exports[\"modify'\"] = modify$prime;\n  exports[\"modify_\"] = modify_;\n  exports[\"new\"] = $foreign[\"new\"];\n  exports[\"read\"] = $foreign.read;\n  exports[\"write\"] = $foreign.write;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Control.Monad.Rec.Class\"] = $PS[\"Control.Monad.Rec.Class\"] || {};\n  var exports = $PS[\"Control.Monad.Rec.Class\"];\n  var Control_Bind = $PS[\"Control.Bind\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Effect = $PS[\"Effect\"];\n  var Effect_Ref = $PS[\"Effect.Ref\"];                \n  var Loop = (function () {\n      function Loop(value0) {\n          this.value0 = value0;\n      };\n      Loop.create = function (value0) {\n          return new Loop(value0);\n      };\n      return Loop;\n  })();\n  var Done = (function () {\n      function Done(value0) {\n          this.value0 = value0;\n      };\n      Done.create = function (value0) {\n          return new Done(value0);\n      };\n      return Done;\n  })();\n  var tailRecM = function (dict) {\n      return dict.tailRecM;\n  };\n  var monadRecEffect = {\n      tailRecM: function (f) {\n          return function (a) {\n              var fromDone = function (v) {\n                  if (v instanceof Done) {\n                      return v.value0;\n                  };\n                  throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 113, column 30 - line 113, column 44): \" + [ v.constructor.name ]);\n              };\n              return function __do() {\n                  var r = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref[\"new\"])(f(a))();\n                  (function () {\n                      while (!(function __do() {\n                          var v = Effect_Ref.read(r)();\n                          if (v instanceof Loop) {\n                              var e = f(v.value0)();\n                              Effect_Ref.write(e)(r)();\n                              return false;\n                          };\n                          if (v instanceof Done) {\n                              return true;\n                          };\n                          throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 104, column 22 - line 109, column 28): \" + [ v.constructor.name ]);\n                      })()) {\n\n                      };\n                      return {};\n                  })();\n                  return Data_Functor.map(Effect.functorEffect)(fromDone)(Effect_Ref.read(r))();\n              };\n          };\n      },\n      Monad0: function () {\n          return Effect.monadEffect;\n      }\n  };\n  exports[\"Loop\"] = Loop;\n  exports[\"Done\"] = Done;\n  exports[\"tailRecM\"] = tailRecM;\n  exports[\"monadRecEffect\"] = monadRecEffect;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.List\"] = $PS[\"Data.List\"] || {};\n  var exports = $PS[\"Data.List\"];\n  var Data_List_Types = $PS[\"Data.List.Types\"];\n  var reverse = (function () {\n      var go = function ($copy_acc) {\n          return function ($copy_v) {\n              var $tco_var_acc = $copy_acc;\n              var $tco_done = false;\n              var $tco_result;\n              function $tco_loop(acc, v) {\n                  if (v instanceof Data_List_Types.Nil) {\n                      $tco_done = true;\n                      return acc;\n                  };\n                  if (v instanceof Data_List_Types.Cons) {\n                      $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);\n                      $copy_v = v.value1;\n                      return;\n                  };\n                  throw new Error(\"Failed pattern match at Data.List (line 372, column 3 - line 372, column 19): \" + [ acc.constructor.name, v.constructor.name ]);\n              };\n              while (!$tco_done) {\n                  $tco_result = $tco_loop($tco_var_acc, $copy_v);\n              };\n              return $tco_result;\n          };\n      };\n      return go(Data_List_Types.Nil.value);\n  })();\n  var $$null = function (v) {\n      if (v instanceof Data_List_Types.Nil) {\n          return true;\n      };\n      return false;\n  };\n  exports[\"null\"] = $$null;\n  exports[\"reverse\"] = reverse;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.CatQueue\"] = $PS[\"Data.CatQueue\"] || {};\n  var exports = $PS[\"Data.CatQueue\"];\n  var Data_List = $PS[\"Data.List\"];\n  var Data_List_Types = $PS[\"Data.List.Types\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Data_Tuple = $PS[\"Data.Tuple\"];                \n  var CatQueue = (function () {\n      function CatQueue(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      CatQueue.create = function (value0) {\n          return function (value1) {\n              return new CatQueue(value0, value1);\n          };\n      };\n      return CatQueue;\n  })();\n  var uncons = function ($copy_v) {\n      var $tco_done = false;\n      var $tco_result;\n      function $tco_loop(v) {\n          if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {\n              $tco_done = true;\n              return Data_Maybe.Nothing.value;\n          };\n          if (v.value0 instanceof Data_List_Types.Nil) {\n              $copy_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);\n              return;\n          };\n          if (v.value0 instanceof Data_List_Types.Cons) {\n              $tco_done = true;\n              return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));\n          };\n          throw new Error(\"Failed pattern match at Data.CatQueue (line 83, column 1 - line 83, column 63): \" + [ v.constructor.name ]);\n      };\n      while (!$tco_done) {\n          $tco_result = $tco_loop($copy_v);\n      };\n      return $tco_result;\n  };\n  var snoc = function (v) {\n      return function (a) {\n          return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));\n      };\n  };\n  var $$null = function (v) {\n      if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {\n          return true;\n      };\n      return false;\n  };\n  var empty = new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);\n  exports[\"empty\"] = empty;\n  exports[\"null\"] = $$null;\n  exports[\"snoc\"] = snoc;\n  exports[\"uncons\"] = uncons;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.CatList\"] = $PS[\"Data.CatList\"] || {};\n  var exports = $PS[\"Data.CatList\"];\n  var Data_CatQueue = $PS[\"Data.CatQueue\"];\n  var Data_List_Types = $PS[\"Data.List.Types\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Data_Tuple = $PS[\"Data.Tuple\"];                \n  var CatNil = (function () {\n      function CatNil() {\n\n      };\n      CatNil.value = new CatNil();\n      return CatNil;\n  })();\n  var CatCons = (function () {\n      function CatCons(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      CatCons.create = function (value0) {\n          return function (value1) {\n              return new CatCons(value0, value1);\n          };\n      };\n      return CatCons;\n  })();\n  var link = function (v) {\n      return function (v1) {\n          if (v instanceof CatNil) {\n              return v1;\n          };\n          if (v1 instanceof CatNil) {\n              return v;\n          };\n          if (v instanceof CatCons) {\n              return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(v1));\n          };\n          throw new Error(\"Failed pattern match at Data.CatList (line 109, column 1 - line 109, column 54): \" + [ v.constructor.name, v1.constructor.name ]);\n      };\n  };\n  var foldr = function (k) {\n      return function (b) {\n          return function (q) {\n              var foldl = function ($copy_v) {\n                  return function ($copy_c) {\n                      return function ($copy_v1) {\n                          var $tco_var_v = $copy_v;\n                          var $tco_var_c = $copy_c;\n                          var $tco_done = false;\n                          var $tco_result;\n                          function $tco_loop(v, c, v1) {\n                              if (v1 instanceof Data_List_Types.Nil) {\n                                  $tco_done = true;\n                                  return c;\n                              };\n                              if (v1 instanceof Data_List_Types.Cons) {\n                                  $tco_var_v = v;\n                                  $tco_var_c = v(c)(v1.value0);\n                                  $copy_v1 = v1.value1;\n                                  return;\n                              };\n                              throw new Error(\"Failed pattern match at Data.CatList (line 125, column 3 - line 125, column 59): \" + [ v.constructor.name, c.constructor.name, v1.constructor.name ]);\n                          };\n                          while (!$tco_done) {\n                              $tco_result = $tco_loop($tco_var_v, $tco_var_c, $copy_v1);\n                          };\n                          return $tco_result;\n                      };\n                  };\n              };\n              var go = function ($copy_xs) {\n                  return function ($copy_ys) {\n                      var $tco_var_xs = $copy_xs;\n                      var $tco_done1 = false;\n                      var $tco_result;\n                      function $tco_loop(xs, ys) {\n                          var v = Data_CatQueue.uncons(xs);\n                          if (v instanceof Data_Maybe.Nothing) {\n                              $tco_done1 = true;\n                              return foldl(function (x) {\n                                  return function (i) {\n                                      return i(x);\n                                  };\n                              })(b)(ys);\n                          };\n                          if (v instanceof Data_Maybe.Just) {\n                              $tco_var_xs = v.value0.value1;\n                              $copy_ys = new Data_List_Types.Cons(k(v.value0.value0), ys);\n                              return;\n                          };\n                          throw new Error(\"Failed pattern match at Data.CatList (line 121, column 14 - line 123, column 67): \" + [ v.constructor.name ]);\n                      };\n                      while (!$tco_done1) {\n                          $tco_result = $tco_loop($tco_var_xs, $copy_ys);\n                      };\n                      return $tco_result;\n                  };\n              };\n              return go(q)(Data_List_Types.Nil.value);\n          };\n      };\n  };\n  var uncons = function (v) {\n      if (v instanceof CatNil) {\n          return Data_Maybe.Nothing.value;\n      };\n      if (v instanceof CatCons) {\n          return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, (function () {\n              var $45 = Data_CatQueue[\"null\"](v.value1);\n              if ($45) {\n                  return CatNil.value;\n              };\n              return foldr(link)(CatNil.value)(v.value1);\n          })()));\n      };\n      throw new Error(\"Failed pattern match at Data.CatList (line 100, column 1 - line 100, column 61): \" + [ v.constructor.name ]);\n  };\n  var empty = CatNil.value;\n  var append = link;\n  var semigroupCatList = {\n      append: append\n  };\n  var snoc = function (cat) {\n      return function (a) {\n          return append(cat)(new CatCons(a, Data_CatQueue.empty));\n      };\n  };\n  exports[\"empty\"] = empty;\n  exports[\"snoc\"] = snoc;\n  exports[\"uncons\"] = uncons;\n  exports[\"semigroupCatList\"] = semigroupCatList;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Control.Monad.Free\"] = $PS[\"Control.Monad.Free\"] || {};\n  var exports = $PS[\"Control.Monad.Free\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Control_Bind = $PS[\"Control.Bind\"];\n  var Control_Monad = $PS[\"Control.Monad\"];\n  var Control_Monad_Rec_Class = $PS[\"Control.Monad.Rec.Class\"];\n  var Data_CatList = $PS[\"Data.CatList\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Data_Semigroup = $PS[\"Data.Semigroup\"];\n  var Free = (function () {\n      function Free(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      Free.create = function (value0) {\n          return function (value1) {\n              return new Free(value0, value1);\n          };\n      };\n      return Free;\n  })();\n  var Return = (function () {\n      function Return(value0) {\n          this.value0 = value0;\n      };\n      Return.create = function (value0) {\n          return new Return(value0);\n      };\n      return Return;\n  })();\n  var Bind = (function () {\n      function Bind(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      Bind.create = function (value0) {\n          return function (value1) {\n              return new Bind(value0, value1);\n          };\n      };\n      return Bind;\n  })();\n  var toView = function ($copy_v) {\n      var $tco_done = false;\n      var $tco_result;\n      function $tco_loop(v) {\n          var runExpF = function (v2) {\n              return v2;\n          };\n          var concatF = function (v2) {\n              return function (r) {\n                  return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));\n              };\n          };\n          if (v.value0 instanceof Return) {\n              var v2 = Data_CatList.uncons(v.value1);\n              if (v2 instanceof Data_Maybe.Nothing) {\n                  $tco_done = true;\n                  return new Return(v.value0.value0);\n              };\n              if (v2 instanceof Data_Maybe.Just) {\n                  $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);\n                  return;\n              };\n              throw new Error(\"Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): \" + [ v2.constructor.name ]);\n          };\n          if (v.value0 instanceof Bind) {\n              $tco_done = true;\n              return new Bind(v.value0.value0, function (a) {\n                  return concatF(v.value0.value1(a))(v.value1);\n              });\n          };\n          throw new Error(\"Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): \" + [ v.value0.constructor.name ]);\n      };\n      while (!$tco_done) {\n          $tco_result = $tco_loop($copy_v);\n      };\n      return $tco_result;\n  };\n  var fromView = function (f) {\n      return new Free(f, Data_CatList.empty);\n  };\n  var freeMonad = {\n      Applicative0: function () {\n          return freeApplicative;\n      },\n      Bind1: function () {\n          return freeBind;\n      }\n  };\n  var freeFunctor = {\n      map: function (k) {\n          return function (f) {\n              return Control_Bind.bindFlipped(freeBind)((function () {\n                  var $119 = Control_Applicative.pure(freeApplicative);\n                  return function ($120) {\n                      return $119(k($120));\n                  };\n              })())(f);\n          };\n      }\n  };\n  var freeBind = {\n      bind: function (v) {\n          return function (k) {\n              return new Free(v.value0, Data_CatList.snoc(v.value1)(k));\n          };\n      },\n      Apply0: function () {\n          return freeApply;\n      }\n  };\n  var freeApply = {\n      apply: Control_Monad.ap(freeMonad),\n      Functor0: function () {\n          return freeFunctor;\n      }\n  };\n  var freeApplicative = {\n      pure: function ($121) {\n          return fromView(Return.create($121));\n      },\n      Apply0: function () {\n          return freeApply;\n      }\n  };\n  var liftF = function (f) {\n      return fromView(new Bind(f, (function () {\n          var $122 = Control_Applicative.pure(freeApplicative);\n          return function ($123) {\n              return $122($123);\n          };\n      })()));\n  };\n  var substFree = function (k) {\n      var go = function (f) {\n          var v = toView(f);\n          if (v instanceof Return) {\n              return Control_Applicative.pure(freeApplicative)(v.value0);\n          };\n          if (v instanceof Bind) {\n              return Control_Bind.bind(freeBind)(k(v.value0))(Data_Functor.map(Data_Functor.functorFn)(go)(v.value1));\n          };\n          throw new Error(\"Failed pattern match at Control.Monad.Free (line 168, column 10 - line 170, column 33): \" + [ v.constructor.name ]);\n      };\n      return go;\n  };\n  var hoistFree = function (k) {\n      return substFree(function ($124) {\n          return liftF(k($124));\n      });\n  };\n  var foldFree = function (dictMonadRec) {\n      return function (k) {\n          var go = function (f) {\n              var v = toView(f);\n              if (v instanceof Return) {\n                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(v.value0));\n              };\n              if (v instanceof Bind) {\n                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(function ($135) {\n                      return Control_Monad_Rec_Class.Loop.create(v.value1($135));\n                  })(k(v.value0));\n              };\n              throw new Error(\"Failed pattern match at Control.Monad.Free (line 158, column 10 - line 160, column 37): \" + [ v.constructor.name ]);\n          };\n          return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);\n      };\n  };\n  exports[\"liftF\"] = liftF;\n  exports[\"hoistFree\"] = hoistFree;\n  exports[\"foldFree\"] = foldFree;\n  exports[\"freeFunctor\"] = freeFunctor;\n  exports[\"freeBind\"] = freeBind;\n  exports[\"freeApplicative\"] = freeApplicative;\n  exports[\"freeMonad\"] = freeMonad;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Effect.Class\"] = $PS[\"Effect.Class\"] || {};\n  var exports = $PS[\"Effect.Class\"];\n  var Control_Category = $PS[\"Control.Category\"];\n  var Effect = $PS[\"Effect\"];                \n  var monadEffectEffect = {\n      liftEffect: Control_Category.identity(Control_Category.categoryFn),\n      Monad0: function () {\n          return Effect.monadEffect;\n      }\n  };\n  var liftEffect = function (dict) {\n      return dict.liftEffect;\n  };\n  exports[\"liftEffect\"] = liftEffect;\n  exports[\"monadEffectEffect\"] = monadEffectEffect;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Map.Internal\"] = $PS[\"Data.Map.Internal\"] || {};\n  var exports = $PS[\"Data.Map.Internal\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Data_Foldable = $PS[\"Data.Foldable\"];\n  var Data_List_Types = $PS[\"Data.List.Types\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Data_Ord = $PS[\"Data.Ord\"];\n  var Data_Ordering = $PS[\"Data.Ordering\"];\n  var Data_Semigroup = $PS[\"Data.Semigroup\"];\n  var Data_Tuple = $PS[\"Data.Tuple\"];                          \n  var Leaf = (function () {\n      function Leaf() {\n\n      };\n      Leaf.value = new Leaf();\n      return Leaf;\n  })();\n  var Two = (function () {\n      function Two(value0, value1, value2, value3) {\n          this.value0 = value0;\n          this.value1 = value1;\n          this.value2 = value2;\n          this.value3 = value3;\n      };\n      Two.create = function (value0) {\n          return function (value1) {\n              return function (value2) {\n                  return function (value3) {\n                      return new Two(value0, value1, value2, value3);\n                  };\n              };\n          };\n      };\n      return Two;\n  })();\n  var Three = (function () {\n      function Three(value0, value1, value2, value3, value4, value5, value6) {\n          this.value0 = value0;\n          this.value1 = value1;\n          this.value2 = value2;\n          this.value3 = value3;\n          this.value4 = value4;\n          this.value5 = value5;\n          this.value6 = value6;\n      };\n      Three.create = function (value0) {\n          return function (value1) {\n              return function (value2) {\n                  return function (value3) {\n                      return function (value4) {\n                          return function (value5) {\n                              return function (value6) {\n                                  return new Three(value0, value1, value2, value3, value4, value5, value6);\n                              };\n                          };\n                      };\n                  };\n              };\n          };\n      };\n      return Three;\n  })();\n  var TwoLeft = (function () {\n      function TwoLeft(value0, value1, value2) {\n          this.value0 = value0;\n          this.value1 = value1;\n          this.value2 = value2;\n      };\n      TwoLeft.create = function (value0) {\n          return function (value1) {\n              return function (value2) {\n                  return new TwoLeft(value0, value1, value2);\n              };\n          };\n      };\n      return TwoLeft;\n  })();\n  var TwoRight = (function () {\n      function TwoRight(value0, value1, value2) {\n          this.value0 = value0;\n          this.value1 = value1;\n          this.value2 = value2;\n      };\n      TwoRight.create = function (value0) {\n          return function (value1) {\n              return function (value2) {\n                  return new TwoRight(value0, value1, value2);\n              };\n          };\n      };\n      return TwoRight;\n  })();\n  var ThreeLeft = (function () {\n      function ThreeLeft(value0, value1, value2, value3, value4, value5) {\n          this.value0 = value0;\n          this.value1 = value1;\n          this.value2 = value2;\n          this.value3 = value3;\n          this.value4 = value4;\n          this.value5 = value5;\n      };\n      ThreeLeft.create = function (value0) {\n          return function (value1) {\n              return function (value2) {\n                  return function (value3) {\n                      return function (value4) {\n                          return function (value5) {\n                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);\n                          };\n                      };\n                  };\n              };\n          };\n      };\n      return ThreeLeft;\n  })();\n  var ThreeMiddle = (function () {\n      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {\n          this.value0 = value0;\n          this.value1 = value1;\n          this.value2 = value2;\n          this.value3 = value3;\n          this.value4 = value4;\n          this.value5 = value5;\n      };\n      ThreeMiddle.create = function (value0) {\n          return function (value1) {\n              return function (value2) {\n                  return function (value3) {\n                      return function (value4) {\n                          return function (value5) {\n                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);\n                          };\n                      };\n                  };\n              };\n          };\n      };\n      return ThreeMiddle;\n  })();\n  var ThreeRight = (function () {\n      function ThreeRight(value0, value1, value2, value3, value4, value5) {\n          this.value0 = value0;\n          this.value1 = value1;\n          this.value2 = value2;\n          this.value3 = value3;\n          this.value4 = value4;\n          this.value5 = value5;\n      };\n      ThreeRight.create = function (value0) {\n          return function (value1) {\n              return function (value2) {\n                  return function (value3) {\n                      return function (value4) {\n                          return function (value5) {\n                              return new ThreeRight(value0, value1, value2, value3, value4, value5);\n                          };\n                      };\n                  };\n              };\n          };\n      };\n      return ThreeRight;\n  })();\n  var KickUp = (function () {\n      function KickUp(value0, value1, value2, value3) {\n          this.value0 = value0;\n          this.value1 = value1;\n          this.value2 = value2;\n          this.value3 = value3;\n      };\n      KickUp.create = function (value0) {\n          return function (value1) {\n              return function (value2) {\n                  return function (value3) {\n                      return new KickUp(value0, value1, value2, value3);\n                  };\n              };\n          };\n      };\n      return KickUp;\n  })();\n  var values = function (v) {\n      if (v instanceof Leaf) {\n          return Data_List_Types.Nil.value;\n      };\n      if (v instanceof Two) {\n          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));\n      };\n      if (v instanceof Three) {\n          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));\n      };\n      throw new Error(\"Failed pattern match at Data.Map.Internal (line 626, column 1 - line 626, column 40): \" + [ v.constructor.name ]);\n  };\n  var lookup = function (dictOrd) {\n      return function (k) {\n          var comp = Data_Ord.compare(dictOrd);\n          var go = function ($copy_v) {\n              var $tco_done = false;\n              var $tco_result;\n              function $tco_loop(v) {\n                  if (v instanceof Leaf) {\n                      $tco_done = true;\n                      return Data_Maybe.Nothing.value;\n                  };\n                  if (v instanceof Two) {\n                      var v2 = comp(k)(v.value1);\n                      if (v2 instanceof Data_Ordering.EQ) {\n                          $tco_done = true;\n                          return new Data_Maybe.Just(v.value2);\n                      };\n                      if (v2 instanceof Data_Ordering.LT) {\n                          $copy_v = v.value0;\n                          return;\n                      };\n                      $copy_v = v.value3;\n                      return;\n                  };\n                  if (v instanceof Three) {\n                      var v3 = comp(k)(v.value1);\n                      if (v3 instanceof Data_Ordering.EQ) {\n                          $tco_done = true;\n                          return new Data_Maybe.Just(v.value2);\n                      };\n                      var v4 = comp(k)(v.value4);\n                      if (v4 instanceof Data_Ordering.EQ) {\n                          $tco_done = true;\n                          return new Data_Maybe.Just(v.value5);\n                      };\n                      if (v3 instanceof Data_Ordering.LT) {\n                          $copy_v = v.value0;\n                          return;\n                      };\n                      if (v4 instanceof Data_Ordering.GT) {\n                          $copy_v = v.value6;\n                          return;\n                      };\n                      $copy_v = v.value3;\n                      return;\n                  };\n                  throw new Error(\"Failed pattern match at Data.Map.Internal (line 211, column 5 - line 211, column 22): \" + [ v.constructor.name ]);\n              };\n              while (!$tco_done) {\n                  $tco_result = $tco_loop($copy_v);\n              };\n              return $tco_result;\n          };\n          return go;\n      };\n  };\n  var fromZipper = function ($copy_dictOrd) {\n      return function ($copy_v) {\n          return function ($copy_tree) {\n              var $tco_var_dictOrd = $copy_dictOrd;\n              var $tco_var_v = $copy_v;\n              var $tco_done = false;\n              var $tco_result;\n              function $tco_loop(dictOrd, v, tree) {\n                  if (v instanceof Data_List_Types.Nil) {\n                      $tco_done = true;\n                      return tree;\n                  };\n                  if (v instanceof Data_List_Types.Cons) {\n                      if (v.value0 instanceof TwoLeft) {\n                          $tco_var_dictOrd = dictOrd;\n                          $tco_var_v = v.value1;\n                          $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);\n                          return;\n                      };\n                      if (v.value0 instanceof TwoRight) {\n                          $tco_var_dictOrd = dictOrd;\n                          $tco_var_v = v.value1;\n                          $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);\n                          return;\n                      };\n                      if (v.value0 instanceof ThreeLeft) {\n                          $tco_var_dictOrd = dictOrd;\n                          $tco_var_v = v.value1;\n                          $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);\n                          return;\n                      };\n                      if (v.value0 instanceof ThreeMiddle) {\n                          $tco_var_dictOrd = dictOrd;\n                          $tco_var_v = v.value1;\n                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);\n                          return;\n                      };\n                      if (v.value0 instanceof ThreeRight) {\n                          $tco_var_dictOrd = dictOrd;\n                          $tco_var_v = v.value1;\n                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);\n                          return;\n                      };\n                      throw new Error(\"Failed pattern match at Data.Map.Internal (line 432, column 3 - line 437, column 88): \" + [ v.value0.constructor.name ]);\n                  };\n                  throw new Error(\"Failed pattern match at Data.Map.Internal (line 429, column 1 - line 429, column 80): \" + [ v.constructor.name, tree.constructor.name ]);\n              };\n              while (!$tco_done) {\n                  $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);\n              };\n              return $tco_result;\n          };\n      };\n  };\n  var insert = function (dictOrd) {\n      return function (k) {\n          return function (v) {\n              var up = function ($copy_v1) {\n                  return function ($copy_v2) {\n                      var $tco_var_v1 = $copy_v1;\n                      var $tco_done = false;\n                      var $tco_result;\n                      function $tco_loop(v1, v2) {\n                          if (v1 instanceof Data_List_Types.Nil) {\n                              $tco_done = true;\n                              return new Two(v2.value0, v2.value1, v2.value2, v2.value3);\n                          };\n                          if (v1 instanceof Data_List_Types.Cons) {\n                              if (v1.value0 instanceof TwoLeft) {\n                                  $tco_done = true;\n                                  return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));\n                              };\n                              if (v1.value0 instanceof TwoRight) {\n                                  $tco_done = true;\n                                  return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));\n                              };\n                              if (v1.value0 instanceof ThreeLeft) {\n                                  $tco_var_v1 = v1.value1;\n                                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));\n                                  return;\n                              };\n                              if (v1.value0 instanceof ThreeMiddle) {\n                                  $tco_var_v1 = v1.value1;\n                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));\n                                  return;\n                              };\n                              if (v1.value0 instanceof ThreeRight) {\n                                  $tco_var_v1 = v1.value1;\n                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));\n                                  return;\n                              };\n                              throw new Error(\"Failed pattern match at Data.Map.Internal (line 468, column 5 - line 473, column 108): \" + [ v1.value0.constructor.name, v2.constructor.name ]);\n                          };\n                          throw new Error(\"Failed pattern match at Data.Map.Internal (line 465, column 3 - line 465, column 56): \" + [ v1.constructor.name, v2.constructor.name ]);\n                      };\n                      while (!$tco_done) {\n                          $tco_result = $tco_loop($tco_var_v1, $copy_v2);\n                      };\n                      return $tco_result;\n                  };\n              };\n              var comp = Data_Ord.compare(dictOrd);\n              var down = function ($copy_ctx) {\n                  return function ($copy_v1) {\n                      var $tco_var_ctx = $copy_ctx;\n                      var $tco_done1 = false;\n                      var $tco_result;\n                      function $tco_loop(ctx, v1) {\n                          if (v1 instanceof Leaf) {\n                              $tco_done1 = true;\n                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));\n                          };\n                          if (v1 instanceof Two) {\n                              var v2 = comp(k)(v1.value1);\n                              if (v2 instanceof Data_Ordering.EQ) {\n                                  $tco_done1 = true;\n                                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));\n                              };\n                              if (v2 instanceof Data_Ordering.LT) {\n                                  $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);\n                                  $copy_v1 = v1.value0;\n                                  return;\n                              };\n                              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);\n                              $copy_v1 = v1.value3;\n                              return;\n                          };\n                          if (v1 instanceof Three) {\n                              var v3 = comp(k)(v1.value1);\n                              if (v3 instanceof Data_Ordering.EQ) {\n                                  $tco_done1 = true;\n                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));\n                              };\n                              var v4 = comp(k)(v1.value4);\n                              if (v4 instanceof Data_Ordering.EQ) {\n                                  $tco_done1 = true;\n                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));\n                              };\n                              if (v3 instanceof Data_Ordering.LT) {\n                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);\n                                  $copy_v1 = v1.value0;\n                                  return;\n                              };\n                              if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {\n                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);\n                                  $copy_v1 = v1.value3;\n                                  return;\n                              };\n                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);\n                              $copy_v1 = v1.value6;\n                              return;\n                          };\n                          throw new Error(\"Failed pattern match at Data.Map.Internal (line 448, column 3 - line 448, column 55): \" + [ ctx.constructor.name, v1.constructor.name ]);\n                      };\n                      while (!$tco_done1) {\n                          $tco_result = $tco_loop($tco_var_ctx, $copy_v1);\n                      };\n                      return $tco_result;\n                  };\n              };\n              return down(Data_List_Types.Nil.value);\n          };\n      };\n  };\n  var pop = function (dictOrd) {\n      return function (k) {\n          var up = function ($copy_ctxs) {\n              return function ($copy_tree) {\n                  var $tco_var_ctxs = $copy_ctxs;\n                  var $tco_done = false;\n                  var $tco_result;\n                  function $tco_loop(ctxs, tree) {\n                      if (ctxs instanceof Data_List_Types.Nil) {\n                          $tco_done = true;\n                          return tree;\n                      };\n                      if (ctxs instanceof Data_List_Types.Cons) {\n                          if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {\n                              $tco_done = true;\n                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));\n                          };\n                          if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {\n                              $tco_done = true;\n                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));\n                          };\n                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {\n                              $tco_var_ctxs = ctxs.value1;\n                              $copy_tree = new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);\n                              return;\n                          };\n                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {\n                              $tco_var_ctxs = ctxs.value1;\n                              $copy_tree = new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree);\n                              return;\n                          };\n                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {\n                              $tco_done = true;\n                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));\n                          };\n                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {\n                              $tco_done = true;\n                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));\n                          };\n                          if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {\n                              $tco_done = true;\n                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));\n                          };\n                          if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {\n                              $tco_done = true;\n                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));\n                          };\n                          if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {\n                              $tco_done = true;\n                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));\n                          };\n                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {\n                              $tco_done = true;\n                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));\n                          };\n                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {\n                              $tco_done = true;\n                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));\n                          };\n                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {\n                              $tco_done = true;\n                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));\n                          };\n                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {\n                              $tco_done = true;\n                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));\n                          };\n                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {\n                              $tco_done = true;\n                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));\n                          };\n                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {\n                              $tco_done = true;\n                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));\n                          };\n                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {\n                              $tco_done = true;\n                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));\n                          };\n                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {\n                              $tco_done = true;\n                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));\n                          };\n                          throw new Error(\"Failed pattern match at Data.Map.Internal (line 525, column 9 - line 542, column 136): \" + [ ctxs.value0.constructor.name, tree.constructor.name ]);\n                      };\n                      throw new Error(\"Failed pattern match at Data.Map.Internal (line 522, column 5 - line 542, column 136): \" + [ ctxs.constructor.name ]);\n                  };\n                  while (!$tco_done) {\n                      $tco_result = $tco_loop($tco_var_ctxs, $copy_tree);\n                  };\n                  return $tco_result;\n              };\n          };\n          var removeMaxNode = function ($copy_ctx) {\n              return function ($copy_m) {\n                  var $tco_var_ctx = $copy_ctx;\n                  var $tco_done1 = false;\n                  var $tco_result;\n                  function $tco_loop(ctx, m) {\n                      if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {\n                          $tco_done1 = true;\n                          return up(ctx)(Leaf.value);\n                      };\n                      if (m instanceof Two) {\n                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);\n                          $copy_m = m.value3;\n                          return;\n                      };\n                      if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {\n                          $tco_done1 = true;\n                          return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);\n                      };\n                      if (m instanceof Three) {\n                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);\n                          $copy_m = m.value6;\n                          return;\n                      };\n                      throw new Error(\"Failed pattern match at Data.Map.Internal (line 554, column 5 - line 558, column 107): \" + [ m.constructor.name ]);\n                  };\n                  while (!$tco_done1) {\n                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);\n                  };\n                  return $tco_result;\n              };\n          };\n          var maxNode = function ($copy_m) {\n              var $tco_done2 = false;\n              var $tco_result;\n              function $tco_loop(m) {\n                  if (m instanceof Two && m.value3 instanceof Leaf) {\n                      $tco_done2 = true;\n                      return {\n                          key: m.value1,\n                          value: m.value2\n                      };\n                  };\n                  if (m instanceof Two) {\n                      $copy_m = m.value3;\n                      return;\n                  };\n                  if (m instanceof Three && m.value6 instanceof Leaf) {\n                      $tco_done2 = true;\n                      return {\n                          key: m.value4,\n                          value: m.value5\n                      };\n                  };\n                  if (m instanceof Three) {\n                      $copy_m = m.value6;\n                      return;\n                  };\n                  throw new Error(\"Failed pattern match at Data.Map.Internal (line 545, column 33 - line 549, column 45): \" + [ m.constructor.name ]);\n              };\n              while (!$tco_done2) {\n                  $tco_result = $tco_loop($copy_m);\n              };\n              return $tco_result;\n          };\n          var comp = Data_Ord.compare(dictOrd);\n          var down = function ($copy_ctx) {\n              return function ($copy_m) {\n                  var $tco_var_ctx = $copy_ctx;\n                  var $tco_done3 = false;\n                  var $tco_result;\n                  function $tco_loop(ctx, m) {\n                      if (m instanceof Leaf) {\n                          $tco_done3 = true;\n                          return Data_Maybe.Nothing.value;\n                      };\n                      if (m instanceof Two) {\n                          var v = comp(k)(m.value1);\n                          if (m.value3 instanceof Leaf && v instanceof Data_Ordering.EQ) {\n                              $tco_done3 = true;\n                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));\n                          };\n                          if (v instanceof Data_Ordering.EQ) {\n                              var max = maxNode(m.value0);\n                              $tco_done3 = true;\n                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));\n                          };\n                          if (v instanceof Data_Ordering.LT) {\n                              $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);\n                              $copy_m = m.value0;\n                              return;\n                          };\n                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);\n                          $copy_m = m.value3;\n                          return;\n                      };\n                      if (m instanceof Three) {\n                          var leaves = (function () {\n                              if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {\n                                  return true;\n                              };\n                              return false;\n                          })();\n                          var v = comp(k)(m.value4);\n                          var v3 = comp(k)(m.value1);\n                          if (leaves && v3 instanceof Data_Ordering.EQ) {\n                              $tco_done3 = true;\n                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));\n                          };\n                          if (leaves && v instanceof Data_Ordering.EQ) {\n                              $tco_done3 = true;\n                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));\n                          };\n                          if (v3 instanceof Data_Ordering.EQ) {\n                              var max = maxNode(m.value0);\n                              $tco_done3 = true;\n                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));\n                          };\n                          if (v instanceof Data_Ordering.EQ) {\n                              var max = maxNode(m.value3);\n                              $tco_done3 = true;\n                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));\n                          };\n                          if (v3 instanceof Data_Ordering.LT) {\n                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);\n                              $copy_m = m.value0;\n                              return;\n                          };\n                          if (v3 instanceof Data_Ordering.GT && v instanceof Data_Ordering.LT) {\n                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);\n                              $copy_m = m.value3;\n                              return;\n                          };\n                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);\n                          $copy_m = m.value6;\n                          return;\n                      };\n                      throw new Error(\"Failed pattern match at Data.Map.Internal (line 495, column 34 - line 518, column 80): \" + [ m.constructor.name ]);\n                  };\n                  while (!$tco_done3) {\n                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);\n                  };\n                  return $tco_result;\n              };\n          };\n          return down(Data_List_Types.Nil.value);\n      };\n  };\n  var foldableMap = {\n      foldl: function (f) {\n          return function (z) {\n              return function (m) {\n                  return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(z)(values(m));\n              };\n          };\n      },\n      foldr: function (f) {\n          return function (z) {\n              return function (m) {\n                  return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(z)(values(m));\n              };\n          };\n      },\n      foldMap: function (dictMonoid) {\n          return function (f) {\n              return function (m) {\n                  return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(values(m));\n              };\n          };\n      }\n  };\n  var empty = Leaf.value;\n  var $$delete = function (dictOrd) {\n      return function (k) {\n          return function (m) {\n              return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));\n          };\n      };\n  };\n  var alter = function (dictOrd) {\n      return function (f) {\n          return function (k) {\n              return function (m) {\n                  var v = f(lookup(dictOrd)(k)(m));\n                  if (v instanceof Data_Maybe.Nothing) {\n                      return $$delete(dictOrd)(k)(m);\n                  };\n                  if (v instanceof Data_Maybe.Just) {\n                      return insert(dictOrd)(k)(v.value0)(m);\n                  };\n                  throw new Error(\"Failed pattern match at Data.Map.Internal (line 563, column 15 - line 565, column 25): \" + [ v.constructor.name ]);\n              };\n          };\n      };\n  };\n  exports[\"empty\"] = empty;\n  exports[\"insert\"] = insert;\n  exports[\"lookup\"] = lookup;\n  exports[\"delete\"] = $$delete;\n  exports[\"pop\"] = pop;\n  exports[\"alter\"] = alter;\n  exports[\"foldableMap\"] = foldableMap;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.Data.OrdBox\"] = $PS[\"Halogen.Data.OrdBox\"] || {};\n  var exports = $PS[\"Halogen.Data.OrdBox\"];\n  var Data_Eq = $PS[\"Data.Eq\"];\n  var Data_Ord = $PS[\"Data.Ord\"];                \n  var OrdBox = (function () {\n      function OrdBox(value0, value1, value2) {\n          this.value0 = value0;\n          this.value1 = value1;\n          this.value2 = value2;\n      };\n      OrdBox.create = function (value0) {\n          return function (value1) {\n              return function (value2) {\n                  return new OrdBox(value0, value1, value2);\n              };\n          };\n      };\n      return OrdBox;\n  })();\n  var mkOrdBox = function (dictOrd) {\n      return OrdBox.create(Data_Eq.eq(dictOrd.Eq0()))(Data_Ord.compare(dictOrd));\n  };\n  var eqOrdBox = {\n      eq: function (v) {\n          return function (v1) {\n              return v.value0(v.value2)(v1.value2);\n          };\n      }\n  };\n  var ordOrdBox = {\n      compare: function (v) {\n          return function (v1) {\n              return v.value1(v.value2)(v1.value2);\n          };\n      },\n      Eq0: function () {\n          return eqOrdBox;\n      }\n  };\n  exports[\"mkOrdBox\"] = mkOrdBox;\n  exports[\"ordOrdBox\"] = ordOrdBox;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.Data.Slot\"] = $PS[\"Halogen.Data.Slot\"] || {};\n  var exports = $PS[\"Halogen.Data.Slot\"];\n  var Data_Foldable = $PS[\"Data.Foldable\"];\n  var Data_Map_Internal = $PS[\"Data.Map.Internal\"];\n  var Data_Ord = $PS[\"Data.Ord\"];\n  var Data_Symbol = $PS[\"Data.Symbol\"];\n  var Data_Tuple = $PS[\"Data.Tuple\"];\n  var Halogen_Data_OrdBox = $PS[\"Halogen.Data.OrdBox\"];\n  var pop = function (dictCons) {\n      return function (dictIsSymbol) {\n          return function (dictOrd) {\n              return function (sym) {\n                  return function (key) {\n                      return function (v) {\n                          return Data_Map_Internal.pop(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(new Data_Tuple.Tuple(Data_Symbol.reflectSymbol(dictIsSymbol)(sym), Halogen_Data_OrdBox.mkOrdBox(dictOrd)(key)))(v);\n                      };\n                  };\n              };\n          };\n      };\n  };\n  var lookup = function (dictCons) {\n      return function (dictIsSymbol) {\n          return function (dictOrd) {\n              return function (sym) {\n                  return function (key) {\n                      return function (v) {\n                          return Data_Map_Internal.lookup(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(new Data_Tuple.Tuple(Data_Symbol.reflectSymbol(dictIsSymbol)(sym), Halogen_Data_OrdBox.mkOrdBox(dictOrd)(key)))(v);\n                      };\n                  };\n              };\n          };\n      };\n  };\n  var insert = function (dictCons) {\n      return function (dictIsSymbol) {\n          return function (dictOrd) {\n              return function (sym) {\n                  return function (key) {\n                      return function (val) {\n                          return function (v) {\n                              return Data_Map_Internal.insert(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(new Data_Tuple.Tuple(Data_Symbol.reflectSymbol(dictIsSymbol)(sym), Halogen_Data_OrdBox.mkOrdBox(dictOrd)(key)))(val)(v);\n                          };\n                      };\n                  };\n              };\n          };\n      };\n  };\n  var foreachSlot = function (dictApplicative) {\n      return function (v) {\n          return function (k) {\n              return Data_Foldable.traverse_(dictApplicative)(Data_Map_Internal.foldableMap)(function ($37) {\n                  return k($37);\n              })(v);\n          };\n      };\n  };\n  var empty = Data_Map_Internal.empty;\n  exports[\"empty\"] = empty;\n  exports[\"lookup\"] = lookup;\n  exports[\"insert\"] = insert;\n  exports[\"pop\"] = pop;\n  exports[\"foreachSlot\"] = foreachSlot;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.Query.ChildQuery\"] = $PS[\"Halogen.Query.ChildQuery\"] || {};\n  var exports = $PS[\"Halogen.Query.ChildQuery\"];\n  var Unsafe_Coerce = $PS[\"Unsafe.Coerce\"];                \n  var ChildQuery = (function () {\n      function ChildQuery(value0, value1, value2) {\n          this.value0 = value0;\n          this.value1 = value1;\n          this.value2 = value2;\n      };\n      ChildQuery.create = function (value0) {\n          return function (value1) {\n              return function (value2) {\n                  return new ChildQuery(value0, value1, value2);\n              };\n          };\n      };\n      return ChildQuery;\n  })();\n  var unChildQueryBox = Unsafe_Coerce.unsafeCoerce;\n  var mkChildQueryBox = Unsafe_Coerce.unsafeCoerce;\n  exports[\"ChildQuery\"] = ChildQuery;\n  exports[\"mkChildQueryBox\"] = mkChildQueryBox;\n  exports[\"unChildQueryBox\"] = unChildQueryBox;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.Query.HalogenM\"] = $PS[\"Halogen.Query.HalogenM\"] || {};\n  var exports = $PS[\"Halogen.Query.HalogenM\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Control_Applicative_Free = $PS[\"Control.Applicative.Free\"];\n  var Control_Category = $PS[\"Control.Category\"];\n  var Control_Monad_Free = $PS[\"Control.Monad.Free\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Data_Newtype = $PS[\"Data.Newtype\"];\n  var Data_Ord = $PS[\"Data.Ord\"];\n  var Data_Unit = $PS[\"Data.Unit\"];\n  var Effect_Class = $PS[\"Effect.Class\"];\n  var Halogen_Data_Slot = $PS[\"Halogen.Data.Slot\"];\n  var Halogen_Query_ChildQuery = $PS[\"Halogen.Query.ChildQuery\"];        \n  var SubscriptionId = function (x) {\n      return x;\n  };\n  var ForkId = function (x) {\n      return x;\n  };\n  var State = (function () {\n      function State(value0) {\n          this.value0 = value0;\n      };\n      State.create = function (value0) {\n          return new State(value0);\n      };\n      return State;\n  })();\n  var Subscribe = (function () {\n      function Subscribe(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      Subscribe.create = function (value0) {\n          return function (value1) {\n              return new Subscribe(value0, value1);\n          };\n      };\n      return Subscribe;\n  })();\n  var Unsubscribe = (function () {\n      function Unsubscribe(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      Unsubscribe.create = function (value0) {\n          return function (value1) {\n              return new Unsubscribe(value0, value1);\n          };\n      };\n      return Unsubscribe;\n  })();\n  var Lift = (function () {\n      function Lift(value0) {\n          this.value0 = value0;\n      };\n      Lift.create = function (value0) {\n          return new Lift(value0);\n      };\n      return Lift;\n  })();\n  var ChildQuery = (function () {\n      function ChildQuery(value0) {\n          this.value0 = value0;\n      };\n      ChildQuery.create = function (value0) {\n          return new ChildQuery(value0);\n      };\n      return ChildQuery;\n  })();\n  var Raise = (function () {\n      function Raise(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      Raise.create = function (value0) {\n          return function (value1) {\n              return new Raise(value0, value1);\n          };\n      };\n      return Raise;\n  })();\n  var Par = (function () {\n      function Par(value0) {\n          this.value0 = value0;\n      };\n      Par.create = function (value0) {\n          return new Par(value0);\n      };\n      return Par;\n  })();\n  var Fork = (function () {\n      function Fork(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      Fork.create = function (value0) {\n          return function (value1) {\n              return new Fork(value0, value1);\n          };\n      };\n      return Fork;\n  })();\n  var Kill = (function () {\n      function Kill(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      Kill.create = function (value0) {\n          return function (value1) {\n              return new Kill(value0, value1);\n          };\n      };\n      return Kill;\n  })();\n  var GetRef = (function () {\n      function GetRef(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      GetRef.create = function (value0) {\n          return function (value1) {\n              return new GetRef(value0, value1);\n          };\n      };\n      return GetRef;\n  })();\n  var HalogenAp = function (x) {\n      return x;\n  };\n  var HalogenM = function (x) {\n      return x;\n  };\n  var subscribe = function (es) {\n      return HalogenM(Control_Monad_Free.liftF(new Subscribe(function (v) {\n          return es;\n      }, Control_Category.identity(Control_Category.categoryFn))));\n  };\n  var raise = function (o) {\n      return HalogenM(Control_Monad_Free.liftF(new Raise(o, Data_Unit.unit)));\n  };\n  var query = function (dictCons) {\n      return function (dictIsSymbol) {\n          return function (dictOrd) {\n              return function (label) {\n                  return function (p) {\n                      return function (q) {\n                          return HalogenM(Control_Monad_Free.liftF(ChildQuery.create(Halogen_Query_ChildQuery.mkChildQueryBox(new Halogen_Query_ChildQuery.ChildQuery(function (dictApplicative) {\n                              return function (k) {\n                                  var $132 = Data_Maybe.maybe(Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value))(k);\n                                  var $133 = Halogen_Data_Slot.lookup()(dictIsSymbol)(dictOrd)(label)(p);\n                                  return function ($134) {\n                                      return $132($133($134));\n                                  };\n                              };\n                          }, q, Control_Category.identity(Control_Category.categoryFn))))));\n                      };\n                  };\n              };\n          };\n      };\n  };\n  var ordSubscriptionId = Data_Ord.ordInt;\n  var ordForkId = Data_Ord.ordInt;\n  var monadTransHalogenM = {\n      lift: function (dictMonad) {\n          return function ($135) {\n              return HalogenM(Control_Monad_Free.liftF(Lift.create($135)));\n          };\n      }\n  };\n  var monadHalogenM = Control_Monad_Free.freeMonad;\n  var monadStateHalogenM = {\n      state: function ($136) {\n          return HalogenM(Control_Monad_Free.liftF(State.create($136)));\n      },\n      Monad0: function () {\n          return monadHalogenM;\n      }\n  };\n  var monadEffectHalogenM = function (dictMonadEffect) {\n      return {\n          liftEffect: (function () {\n              var $141 = Effect_Class.liftEffect(dictMonadEffect);\n              return function ($142) {\n                  return HalogenM(Control_Monad_Free.liftF(Lift.create($141($142))));\n              };\n          })(),\n          Monad0: function () {\n              return monadHalogenM;\n          }\n      };\n  };\n  var hoist = function (dictFunctor) {\n      return function (nat) {\n          return function (v) {\n              var go = function (v1) {\n                  if (v1 instanceof State) {\n                      return new State(v1.value0);\n                  };\n                  if (v1 instanceof Subscribe) {\n                      return new Subscribe(v1.value0, v1.value1);\n                  };\n                  if (v1 instanceof Unsubscribe) {\n                      return new Unsubscribe(v1.value0, v1.value1);\n                  };\n                  if (v1 instanceof Lift) {\n                      return new Lift(nat(v1.value0));\n                  };\n                  if (v1 instanceof ChildQuery) {\n                      return new ChildQuery(v1.value0);\n                  };\n                  if (v1 instanceof Raise) {\n                      return new Raise(v1.value0, v1.value1);\n                  };\n                  if (v1 instanceof Par) {\n                      return new Par(Data_Newtype.over()()(HalogenAp)(Control_Applicative_Free.hoistFreeAp(hoist(dictFunctor)(nat)))(v1.value0));\n                  };\n                  if (v1 instanceof Fork) {\n                      return new Fork(hoist(dictFunctor)(nat)(v1.value0), v1.value1);\n                  };\n                  if (v1 instanceof Kill) {\n                      return new Kill(v1.value0, v1.value1);\n                  };\n                  if (v1 instanceof GetRef) {\n                      return new GetRef(v1.value0, v1.value1);\n                  };\n                  throw new Error(\"Failed pattern match at Halogen.Query.HalogenM (line 300, column 8 - line 310, column 29): \" + [ v1.constructor.name ]);\n              };\n              return Control_Monad_Free.hoistFree(go)(v);\n          };\n      };\n  };\n  var functorHalogenM = Control_Monad_Free.freeFunctor;\n  var bindHalogenM = Control_Monad_Free.freeBind;           \n  var applicativeHalogenM = Control_Monad_Free.freeApplicative;\n  exports[\"State\"] = State;\n  exports[\"Subscribe\"] = Subscribe;\n  exports[\"Unsubscribe\"] = Unsubscribe;\n  exports[\"Lift\"] = Lift;\n  exports[\"ChildQuery\"] = ChildQuery;\n  exports[\"Raise\"] = Raise;\n  exports[\"Par\"] = Par;\n  exports[\"Fork\"] = Fork;\n  exports[\"Kill\"] = Kill;\n  exports[\"GetRef\"] = GetRef;\n  exports[\"raise\"] = raise;\n  exports[\"query\"] = query;\n  exports[\"SubscriptionId\"] = SubscriptionId;\n  exports[\"subscribe\"] = subscribe;\n  exports[\"ForkId\"] = ForkId;\n  exports[\"hoist\"] = hoist;\n  exports[\"functorHalogenM\"] = functorHalogenM;\n  exports[\"applicativeHalogenM\"] = applicativeHalogenM;\n  exports[\"bindHalogenM\"] = bindHalogenM;\n  exports[\"monadHalogenM\"] = monadHalogenM;\n  exports[\"monadEffectHalogenM\"] = monadEffectHalogenM;\n  exports[\"monadTransHalogenM\"] = monadTransHalogenM;\n  exports[\"monadStateHalogenM\"] = monadStateHalogenM;\n  exports[\"ordSubscriptionId\"] = ordSubscriptionId;\n  exports[\"ordForkId\"] = ordForkId;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"App.Capability.Navigate\"] = $PS[\"App.Capability.Navigate\"] || {};\n  var exports = $PS[\"App.Capability.Navigate\"];\n  var Control_Monad_Trans_Class = $PS[\"Control.Monad.Trans.Class\"];\n  var Halogen_Query_HalogenM = $PS[\"Halogen.Query.HalogenM\"];                \n  var navigate = function (dict) {\n      return dict.navigate;\n  };\n  var logoutUser = function (dict) {\n      return dict.logoutUser;\n  };\n  var monadNavigateHalogenM = function (dictMonadNavigate) {\n      return {\n          navigate: (function () {\n              var $4 = Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)(dictMonadNavigate.Monad0());\n              var $5 = navigate(dictMonadNavigate);\n              return function ($6) {\n                  return $4($5($6));\n              };\n          })(),\n          logoutUser: Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)(dictMonadNavigate.Monad0())(logoutUser(dictMonadNavigate)),\n          Monad0: function () {\n              return Halogen_Query_HalogenM.monadHalogenM;\n          }\n      };\n  };\n  exports[\"logoutUser\"] = logoutUser;\n  exports[\"navigate\"] = navigate;\n  exports[\"monadNavigateHalogenM\"] = monadNavigateHalogenM;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Generic.Rep\"] = $PS[\"Data.Generic.Rep\"] || {};\n  var exports = $PS[\"Data.Generic.Rep\"];             \n  var Inl = (function () {\n      function Inl(value0) {\n          this.value0 = value0;\n      };\n      Inl.create = function (value0) {\n          return new Inl(value0);\n      };\n      return Inl;\n  })();\n  var Inr = (function () {\n      function Inr(value0) {\n          this.value0 = value0;\n      };\n      Inr.create = function (value0) {\n          return new Inr(value0);\n      };\n      return Inr;\n  })();\n  var NoArguments = (function () {\n      function NoArguments() {\n\n      };\n      NoArguments.value = new NoArguments();\n      return NoArguments;\n  })();\n  var Constructor = function (x) {\n      return x;\n  };\n  var to = function (dict) {\n      return dict.to;\n  };\n  var from = function (dict) {\n      return dict.from;\n  };\n  exports[\"to\"] = to;\n  exports[\"from\"] = from;\n  exports[\"NoArguments\"] = NoArguments;\n  exports[\"Inl\"] = Inl;\n  exports[\"Inr\"] = Inr;\n  exports[\"Constructor\"] = Constructor;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  exports.split = function (sep) {\n    return function (s) {\n      return s.split(sep);\n    };\n  };\n\n  exports.joinWith = function (s) {\n    return function (xs) {\n      return xs.join(s);\n    };\n  };\n})(PS[\"Data.String.Common\"] = PS[\"Data.String.Common\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.String.Common\"] = $PS[\"Data.String.Common\"] || {};\n  var exports = $PS[\"Data.String.Common\"];\n  var $foreign = $PS[\"Data.String.Common\"];\n  exports[\"split\"] = $foreign.split;\n  exports[\"joinWith\"] = $foreign.joinWith;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Control.Alt\"] = $PS[\"Control.Alt\"] || {};\n  var exports = $PS[\"Control.Alt\"];\n  var alt = function (dict) {\n      return dict.alt;\n  };\n  exports[\"alt\"] = alt;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  //------------------------------------------------------------------------------\n  // Array size ------------------------------------------------------------------\n  //------------------------------------------------------------------------------\n\n  exports.length = function (xs) {\n    return xs.length;\n  };\n\n  //------------------------------------------------------------------------------\n  // Non-indexed reads -----------------------------------------------------------\n  //------------------------------------------------------------------------------\n\n  exports.unconsImpl = function (empty) {\n    return function (next) {\n      return function (xs) {\n        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));\n      };\n    };\n  };\n\n  //------------------------------------------------------------------------------\n  // Indexed operations ----------------------------------------------------------\n  //------------------------------------------------------------------------------\n\n  exports.indexImpl = function (just) {\n    return function (nothing) {\n      return function (xs) {\n        return function (i) {\n          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);\n        };\n      };\n    };\n  };\n\n  exports.findIndexImpl = function (just) {\n    return function (nothing) {\n      return function (f) {\n        return function (xs) {\n          for (var i = 0, l = xs.length; i < l; i++) {\n            if (f(xs[i])) return just(i);\n          }\n          return nothing;\n        };\n      };\n    };\n  };\n\n  exports._deleteAt = function (just) {\n    return function (nothing) {\n      return function (i) {\n        return function (l) {\n          if (i < 0 || i >= l.length) return nothing;\n          var l1 = l.slice();\n          l1.splice(i, 1);\n          return just(l1);\n        };\n      };\n    };\n  };   \n\n  //------------------------------------------------------------------------------\n  // Subarrays -------------------------------------------------------------------\n  //------------------------------------------------------------------------------\n\n  exports.slice = function (s) {\n    return function (e) {\n      return function (l) {\n        return l.slice(s, e);\n      };\n    };\n  };\n})(PS[\"Data.Array\"] = PS[\"Data.Array\"] || {});\n(function(exports) {\n  \"use strict\";\n\n  exports.pushAll = function (as) {\n    return function (xs) {\n      return function () {\n        return xs.push.apply(xs, as);\n      };\n    };\n  };\n\n  exports.unsafeFreeze = function (xs) {\n    return function () {\n      return xs;\n    };\n  };\n\n  function copyImpl(xs) {\n    return function () {\n      return xs.slice();\n    };\n  }                         \n\n  exports.thaw = copyImpl;\n})(PS[\"Data.Array.ST\"] = PS[\"Data.Array.ST\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Array.ST\"] = $PS[\"Data.Array.ST\"] || {};\n  var exports = $PS[\"Data.Array.ST\"];\n  var $foreign = $PS[\"Data.Array.ST\"];                     \n  var withArray = function (f) {\n      return function (xs) {\n          return function __do() {\n              var result = $foreign.thaw(xs)();\n              f(result)();\n              return $foreign.unsafeFreeze(result)();\n          };\n      };\n  };\n  var push = function (a) {\n      return $foreign.pushAll([ a ]);\n  };\n  exports[\"withArray\"] = withArray;\n  exports[\"push\"] = push;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Boolean\"] = $PS[\"Data.Boolean\"] || {};\n  var exports = $PS[\"Data.Boolean\"];\n  var otherwise = true;\n  exports[\"otherwise\"] = otherwise;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Array\"] = $PS[\"Data.Array\"] || {};\n  var exports = $PS[\"Data.Array\"];\n  var $foreign = $PS[\"Data.Array\"];\n  var Data_Array_ST = $PS[\"Data.Array.ST\"];\n  var Data_Boolean = $PS[\"Data.Boolean\"];\n  var Data_Function = $PS[\"Data.Function\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Data_Semigroup = $PS[\"Data.Semigroup\"];\n  var uncons = $foreign.unconsImpl(Data_Function[\"const\"](Data_Maybe.Nothing.value))(function (x) {\n      return function (xs) {\n          return new Data_Maybe.Just({\n              head: x,\n              tail: xs\n          });\n      };\n  });\n  var take = function (n) {\n      return function (xs) {\n          var $67 = n < 1;\n          if ($67) {\n              return [  ];\n          };\n          return $foreign.slice(0)(n)(xs);\n      };\n  };\n  var tail = $foreign.unconsImpl(Data_Function[\"const\"](Data_Maybe.Nothing.value))(function (v) {\n      return function (xs) {\n          return new Data_Maybe.Just(xs);\n      };\n  });\n  var snoc = function (xs) {\n      return function (x) {\n          return Data_Array_ST.withArray(Data_Array_ST.push(x))(xs)();\n      };\n  };\n  var singleton = function (a) {\n      return [ a ];\n  };\n  var $$null = function (xs) {\n      return $foreign.length(xs) === 0;\n  };                                                                                     \n  var init = function (xs) {\n      if ($$null(xs)) {\n          return Data_Maybe.Nothing.value;\n      };\n      if (Data_Boolean.otherwise) {\n          return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1 | 0)(xs));\n      };\n      throw new Error(\"Failed pattern match at Data.Array (line 340, column 1 - line 340, column 45): \" + [ xs.constructor.name ]);\n  };\n  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n  var last = function (xs) {\n      return index(xs)($foreign.length(xs) - 1 | 0);\n  };\n  var head = function (xs) {\n      return index(xs)(0);\n  };\n  var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n  var drop = function (n) {\n      return function (xs) {\n          var $89 = n < 1;\n          if ($89) {\n              return xs;\n          };\n          return $foreign.slice(n)($foreign.length(xs))(xs);\n      };\n  };\n  var deleteAt = $foreign[\"_deleteAt\"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n  var deleteBy = function (v) {\n      return function (v1) {\n          return function (v2) {\n              if (v2.length === 0) {\n                  return [  ];\n              };\n              return Data_Maybe.maybe(v2)(function (i) {\n                  return Data_Maybe.fromJust()(deleteAt(i)(v2));\n              })(findIndex(v(v1))(v2));\n          };\n      };\n  };\n  var cons = function (x) {\n      return function (xs) {\n          return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ x ])(xs);\n      };\n  };\n  exports[\"singleton\"] = singleton;\n  exports[\"cons\"] = cons;\n  exports[\"snoc\"] = snoc;\n  exports[\"head\"] = head;\n  exports[\"last\"] = last;\n  exports[\"tail\"] = tail;\n  exports[\"init\"] = init;\n  exports[\"uncons\"] = uncons;\n  exports[\"take\"] = take;\n  exports[\"drop\"] = drop;\n  exports[\"deleteBy\"] = deleteBy;\n  exports[\"length\"] = $foreign.length;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Array.NonEmpty.Internal\"] = $PS[\"Data.Array.NonEmpty.Internal\"] || {};\n  var exports = $PS[\"Data.Array.NonEmpty.Internal\"];\n  var Data_Foldable = $PS[\"Data.Foldable\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Data_Semigroup = $PS[\"Data.Semigroup\"];                    \n  var NonEmptyArray = function (x) {\n      return x;\n  };\n  var semigroupNonEmptyArray = Data_Semigroup.semigroupArray;                     \n  var functorNonEmptyArray = Data_Functor.functorArray;                              \n  var foldableNonEmptyArray = Data_Foldable.foldableArray;\n  exports[\"NonEmptyArray\"] = NonEmptyArray;\n  exports[\"semigroupNonEmptyArray\"] = semigroupNonEmptyArray;\n  exports[\"functorNonEmptyArray\"] = functorNonEmptyArray;\n  exports[\"foldableNonEmptyArray\"] = foldableNonEmptyArray;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Array.NonEmpty\"] = $PS[\"Data.Array.NonEmpty\"] || {};\n  var exports = $PS[\"Data.Array.NonEmpty\"];\n  var Data_Array = $PS[\"Data.Array\"];\n  var Data_Array_NonEmpty_Internal = $PS[\"Data.Array.NonEmpty.Internal\"];\n  var Data_Boolean = $PS[\"Data.Boolean\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];               \n  var unsafeFromArray = Data_Array_NonEmpty_Internal.NonEmptyArray;\n  var toArray = function (v) {\n      return v;\n  };\n  var snoc$prime = function (xs) {\n      return function (x) {\n          return unsafeFromArray(Data_Array.snoc(xs)(x));\n      };\n  };\n  var snoc = function (xs) {\n      return function (x) {\n          return unsafeFromArray(Data_Array.snoc(toArray(xs))(x));\n      };\n  };\n  var singleton = function ($60) {\n      return unsafeFromArray(Data_Array.singleton($60));\n  };\n  var fromArray = function (xs) {\n      if (Data_Array.length(xs) > 0) {\n          return new Data_Maybe.Just(unsafeFromArray(xs));\n      };\n      if (Data_Boolean.otherwise) {\n          return Data_Maybe.Nothing.value;\n      };\n      throw new Error(\"Failed pattern match at Data.Array.NonEmpty (line 159, column 1 - line 159, column 58): \" + [ xs.constructor.name ]);\n  };\n  var cons$prime = function (x) {\n      return function (xs) {\n          return unsafeFromArray(Data_Array.cons(x)(xs));\n      };\n  };\n  var adaptMaybe = function (f) {\n      var $75 = Data_Maybe.fromJust();\n      return function ($76) {\n          return $75(f(toArray($76)));\n      };\n  };\n  var head = adaptMaybe(Data_Array.head);\n  var init = adaptMaybe(Data_Array.init);\n  var last = adaptMaybe(Data_Array.last);\n  var tail = adaptMaybe(Data_Array.tail);    \n  var adaptAny = function (f) {\n      return function ($78) {\n          return f(toArray($78));\n      };\n  };                                     \n  var length = adaptAny(Data_Array.length);\n  var unsafeAdapt = function (f) {\n      var $79 = adaptAny(f);\n      return function ($80) {\n          return unsafeFromArray($79($80));\n      };\n  };\n  var cons = function (x) {\n      return unsafeAdapt(Data_Array.cons(x));\n  };\n  exports[\"fromArray\"] = fromArray;\n  exports[\"singleton\"] = singleton;\n  exports[\"cons\"] = cons;\n  exports[\"cons'\"] = cons$prime;\n  exports[\"snoc\"] = snoc;\n  exports[\"snoc'\"] = snoc$prime;\n  exports[\"head\"] = head;\n  exports[\"last\"] = last;\n  exports[\"tail\"] = tail;\n  exports[\"init\"] = init;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Bifunctor\"] = $PS[\"Data.Bifunctor\"] || {};\n  var exports = $PS[\"Data.Bifunctor\"];\n  var Control_Category = $PS[\"Control.Category\"];\n  var Data_Tuple = $PS[\"Data.Tuple\"];                \n  var bimap = function (dict) {\n      return dict.bimap;\n  };\n  var lmap = function (dictBifunctor) {\n      return function (f) {\n          return bimap(dictBifunctor)(f)(Control_Category.identity(Control_Category.categoryFn));\n      };\n  };\n  var bifunctorTuple = {\n      bimap: function (f) {\n          return function (g) {\n              return function (v) {\n                  return new Data_Tuple.Tuple(f(v.value0), g(v.value1));\n              };\n          };\n      }\n  };\n  exports[\"bimap\"] = bimap;\n  exports[\"lmap\"] = lmap;\n  exports[\"bifunctorTuple\"] = bifunctorTuple;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  exports.length = function (s) {\n    return s.length;\n  };\n\n  exports._indexOf = function (just) {\n    return function (nothing) {\n      return function (x) {\n        return function (s) {\n          var i = s.indexOf(x);\n          return i === -1 ? nothing : just(i);\n        };\n      };\n    };\n  };\n\n  exports.take = function (n) {\n    return function (s) {\n      return s.substr(0, n);\n    };\n  };\n\n  exports.drop = function (n) {\n    return function (s) {\n      return s.substring(n);\n    };\n  };\n\n  exports.splitAt = function (i) {\n    return function (s) {\n      return { before: s.substring(0, i), after: s.substring(i) };\n    };\n  };\n})(PS[\"Data.String.CodeUnits\"] = PS[\"Data.String.CodeUnits\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.String.CodeUnits\"] = $PS[\"Data.String.CodeUnits\"] || {};\n  var exports = $PS[\"Data.String.CodeUnits\"];\n  var $foreign = $PS[\"Data.String.CodeUnits\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var stripPrefix = function (v) {\n      return function (str) {\n          var v1 = $foreign.splitAt($foreign.length(v))(str);\n          var $15 = v1.before === v;\n          if ($15) {\n              return new Data_Maybe.Just(v1.after);\n          };\n          return Data_Maybe.Nothing.value;\n      };\n  };                                                                                                   \n  var indexOf = $foreign[\"_indexOf\"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n  exports[\"stripPrefix\"] = stripPrefix;\n  exports[\"indexOf\"] = indexOf;\n  exports[\"length\"] = $foreign.length;\n  exports[\"take\"] = $foreign.take;\n  exports[\"drop\"] = $foreign.drop;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  // A helper which transforms the result ofencodeURIComponent to be compliant\n  // with RFC3896, as described in the MDN documentation here:\n  //\n  // https://web.archive.org/web/20201206001047/https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\n  function toRFC3896(input) {\n    return input.replace(/[!'()*]/g, function (c) {\n      return \"%\" + c.charCodeAt(0).toString(16);\n    });\n  }\n\n  exports._encodeURIComponent = function encode(fail, succeed, input) {\n    try {\n      return succeed(toRFC3896(encodeURIComponent(input)));\n    } catch (err) {\n      return fail(err);\n    }\n  };\n\n  function _decodeURIComponent(fail, succeed, input) {\n    try {\n      return succeed(decodeURIComponent(input));\n    } catch (err) {\n      return fail(err);\n    }\n  }\n\n  exports._decodeURIComponent = _decodeURIComponent;\n})(PS[\"JSURI\"] = PS[\"JSURI\"] || {});\n(function(exports) {\n  \"use strict\";\n\n  exports.runFn3 = function (fn) {\n    return function (a) {\n      return function (b) {\n        return function (c) {\n          return fn(a, b, c);\n        };\n      };\n    };\n  };\n\n  exports.runFn4 = function (fn) {\n    return function (a) {\n      return function (b) {\n        return function (c) {\n          return function (d) {\n            return fn(a, b, c, d);\n          };\n        };\n      };\n    };\n  };\n})(PS[\"Data.Function.Uncurried\"] = PS[\"Data.Function.Uncurried\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Function.Uncurried\"] = $PS[\"Data.Function.Uncurried\"] || {};\n  var exports = $PS[\"Data.Function.Uncurried\"];\n  var $foreign = $PS[\"Data.Function.Uncurried\"];\n  exports[\"runFn3\"] = $foreign.runFn3;\n  exports[\"runFn4\"] = $foreign.runFn4;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"JSURI\"] = $PS[\"JSURI\"] || {};\n  var exports = $PS[\"JSURI\"];\n  var $foreign = $PS[\"JSURI\"];\n  var Data_Function = $PS[\"Data.Function\"];\n  var Data_Function_Uncurried = $PS[\"Data.Function.Uncurried\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];                \n  var $$encodeURIComponent = Data_Function_Uncurried.runFn3($foreign[\"_encodeURIComponent\"])(Data_Function[\"const\"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);      \n  var $$decodeURIComponent = Data_Function_Uncurried.runFn3($foreign[\"_decodeURIComponent\"])(Data_Function[\"const\"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);\n  exports[\"encodeURIComponent\"] = $$encodeURIComponent;\n  exports[\"decodeURIComponent\"] = $$decodeURIComponent;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Routing.Duplex.Parser\"] = $PS[\"Routing.Duplex.Parser\"] || {};\n  var exports = $PS[\"Routing.Duplex.Parser\"];\n  var Control_Alt = $PS[\"Control.Alt\"];\n  var Data_Array = $PS[\"Data.Array\"];\n  var Data_Array_NonEmpty = $PS[\"Data.Array.NonEmpty\"];\n  var Data_Array_NonEmpty_Internal = $PS[\"Data.Array.NonEmpty.Internal\"];\n  var Data_Bifunctor = $PS[\"Data.Bifunctor\"];\n  var Data_Boolean = $PS[\"Data.Boolean\"];\n  var Data_Either = $PS[\"Data.Either\"];\n  var Data_Foldable = $PS[\"Data.Foldable\"];\n  var Data_Function = $PS[\"Data.Function\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Data_Semigroup = $PS[\"Data.Semigroup\"];\n  var Data_String_CodeUnits = $PS[\"Data.String.CodeUnits\"];\n  var Data_String_Common = $PS[\"Data.String.Common\"];\n  var Data_Tuple = $PS[\"Data.Tuple\"];\n  var Data_Unit = $PS[\"Data.Unit\"];\n  var JSURI = $PS[\"JSURI\"];                                              \n  var Expected = (function () {\n      function Expected(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      Expected.create = function (value0) {\n          return function (value1) {\n              return new Expected(value0, value1);\n          };\n      };\n      return Expected;\n  })();\n  var ExpectedEndOfPath = (function () {\n      function ExpectedEndOfPath(value0) {\n          this.value0 = value0;\n      };\n      ExpectedEndOfPath.create = function (value0) {\n          return new ExpectedEndOfPath(value0);\n      };\n      return ExpectedEndOfPath;\n  })();\n  var EndOfPath = (function () {\n      function EndOfPath() {\n\n      };\n      EndOfPath.value = new EndOfPath();\n      return EndOfPath;\n  })();\n  var Fail = (function () {\n      function Fail(value0) {\n          this.value0 = value0;\n      };\n      Fail.create = function (value0) {\n          return new Fail(value0);\n      };\n      return Fail;\n  })();\n  var Success = (function () {\n      function Success(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      Success.create = function (value0) {\n          return function (value1) {\n              return new Success(value0, value1);\n          };\n      };\n      return Success;\n  })();\n  var Alt = (function () {\n      function Alt(value0) {\n          this.value0 = value0;\n      };\n      Alt.create = function (value0) {\n          return new Alt(value0);\n      };\n      return Alt;\n  })();\n  var Chomp = (function () {\n      function Chomp(value0) {\n          this.value0 = value0;\n      };\n      Chomp.create = function (value0) {\n          return new Chomp(value0);\n      };\n      return Chomp;\n  })();\n  var Prefix = (function () {\n      function Prefix(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      Prefix.create = function (value0) {\n          return function (value1) {\n              return new Prefix(value0, value1);\n          };\n      };\n      return Prefix;\n  })();\n  var take = new Chomp(function (state) {\n      var v = Data_Array.uncons(state.segments);\n      if (v instanceof Data_Maybe.Just) {\n          return new Success({\n              segments: v.value0.tail,\n              params: state.params,\n              hash: state.hash\n          }, v.value0.head);\n      };\n      return new Fail(EndOfPath.value);\n  });\n  var prefix = Prefix.create;\n  var parsePath = (function () {\n      var unsafeDecodeURIComponent = (function () {\n          var $236 = Data_Maybe.fromJust();\n          return function ($237) {\n              return $236(JSURI[\"decodeURIComponent\"]($237));\n          };\n      })();\n      var toRouteState = function (v) {\n          return {\n              segments: v.value0.value0,\n              params: v.value0.value1,\n              hash: v.value1\n          };\n      };\n      var splitNonEmpty = function (v) {\n          return function (v1) {\n              if (v1 === \"\") {\n                  return [  ];\n              };\n              return Data_String_Common.split(v)(v1);\n          };\n      };\n      var splitSegments = (function () {\n          var $238 = splitNonEmpty(\"/\");\n          return function ($239) {\n              return (function (v) {\n                  if (v.length === 2 && (v[0] === \"\" && v[1] === \"\")) {\n                      return [ \"\" ];\n                  };\n                  return Data_Functor.map(Data_Functor.functorArray)(unsafeDecodeURIComponent)(v);\n              })($238($239));\n          };\n      })();\n      var splitAt = function (k) {\n          return function (p) {\n              return function (str) {\n                  var v = Data_String_CodeUnits.indexOf(p)(str);\n                  if (v instanceof Data_Maybe.Just) {\n                      return new Data_Tuple.Tuple(Data_String_CodeUnits.take(v.value0)(str), Data_String_CodeUnits.drop(v.value0 + Data_String_CodeUnits.length(p) | 0)(str));\n                  };\n                  if (v instanceof Data_Maybe.Nothing) {\n                      return k(str);\n                  };\n                  throw new Error(\"Failed pattern match at Routing.Duplex.Parser (line 185, column 5 - line 187, column 23): \" + [ v.constructor.name ]);\n              };\n          };\n      };\n      var splitKeyValue = (function () {\n          var $240 = Data_Bifunctor.bimap(Data_Bifunctor.bifunctorTuple)(unsafeDecodeURIComponent)(unsafeDecodeURIComponent);\n          var $241 = splitAt(Data_Function.flip(Data_Tuple.Tuple.create)(\"\"))(\"=\");\n          return function ($242) {\n              return $240($241($242));\n          };\n      })();\n      var splitParams = (function () {\n          var $243 = Data_Functor.map(Data_Functor.functorArray)(splitKeyValue);\n          var $244 = splitNonEmpty(\"&\");\n          return function ($245) {\n              return $243($244($245));\n          };\n      })();\n      var splitPath = (function () {\n          var $246 = Data_Bifunctor.bimap(Data_Bifunctor.bifunctorTuple)(splitSegments)(splitParams);\n          var $247 = splitAt(Data_Function.flip(Data_Tuple.Tuple.create)(\"\"))(\"?\");\n          return function ($248) {\n              return $246($247($248));\n          };\n      })();\n      var $249 = Data_Bifunctor.lmap(Data_Bifunctor.bifunctorTuple)(splitPath);\n      var $250 = splitAt(Data_Function.flip(Data_Tuple.Tuple.create)(\"\"))(\"#\");\n      return function ($251) {\n          return toRouteState($249($250($251)));\n      };\n  })();\n  var hash = new Chomp(function (state) {\n      return new Success(state, state.hash);\n  });\n  var functorRouteResult = {\n      map: function (f) {\n          return function (m) {\n              if (m instanceof Fail) {\n                  return new Fail(m.value0);\n              };\n              if (m instanceof Success) {\n                  return new Success(m.value0, f(m.value1));\n              };\n              throw new Error(\"Failed pattern match at Routing.Duplex.Parser (line 53, column 1 - line 53, column 58): \" + [ m.constructor.name ]);\n          };\n      }\n  };\n  var functorRouteParser = {\n      map: function (f) {\n          return function (m) {\n              if (m instanceof Alt) {\n                  return new Alt(Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(Data_Functor.map(functorRouteParser)(f))(m.value0));\n              };\n              if (m instanceof Chomp) {\n                  return new Chomp(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(functorRouteResult)(f))(m.value0));\n              };\n              if (m instanceof Prefix) {\n                  return new Prefix(m.value0, Data_Functor.map(functorRouteParser)(f)(m.value1));\n              };\n              throw new Error(\"Failed pattern match at Routing.Duplex.Parser (line 72, column 1 - line 72, column 58): \" + [ m.constructor.name ]);\n          };\n      }\n  };\n  var end = new Chomp(function (state) {\n      var v = Data_Array.head(state.segments);\n      if (v instanceof Data_Maybe.Nothing) {\n          return new Success(state, Data_Unit.unit);\n      };\n      if (v instanceof Data_Maybe.Just) {\n          return new Fail(new ExpectedEndOfPath(v.value0));\n      };\n      throw new Error(\"Failed pattern match at Routing.Duplex.Parser (line 256, column 3 - line 258, column 45): \" + [ v.constructor.name ]);\n  });\n  var chompPrefix = function (pre) {\n      return function (state) {\n          var v = Data_Array.head(state.segments);\n          if (v instanceof Data_Maybe.Just && pre === v.value0) {\n              return new Success({\n                  segments: Data_Array.drop(1)(state.segments),\n                  params: state.params,\n                  hash: state.hash\n              }, Data_Unit.unit);\n          };\n          if (v instanceof Data_Maybe.Just) {\n              return Fail.create(new Expected(pre, v.value0));\n          };\n          return Fail.create(EndOfPath.value);\n      };\n  };\n  var runRouteParser = (function () {\n      var goAlt = function (v) {\n          return function (v1) {\n              return function (v2) {\n                  if (v1 instanceof Fail) {\n                      return runRouteParser(v)(v2);\n                  };\n                  return v1;\n              };\n          };\n      };\n      var go = function ($copy_state) {\n          return function ($copy_v) {\n              var $tco_var_state = $copy_state;\n              var $tco_done = false;\n              var $tco_result;\n              function $tco_loop(state, v) {\n                  if (v instanceof Alt) {\n                      $tco_done = true;\n                      return Data_Foldable.foldl(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(goAlt(state))(new Fail(EndOfPath.value))(v.value0);\n                  };\n                  if (v instanceof Chomp) {\n                      $tco_done = true;\n                      return v.value0(state);\n                  };\n                  if (v instanceof Prefix) {\n                      var v1 = chompPrefix(v.value0)(state);\n                      if (v1 instanceof Fail) {\n                          $tco_done = true;\n                          return new Fail(v1.value0);\n                      };\n                      if (v1 instanceof Success) {\n                          $tco_var_state = v1.value0;\n                          $copy_v = v.value1;\n                          return;\n                      };\n                      throw new Error(\"Failed pattern match at Routing.Duplex.Parser (line 149, column 7 - line 151, column 40): \" + [ v1.constructor.name ]);\n                  };\n                  throw new Error(\"Failed pattern match at Routing.Duplex.Parser (line 145, column 14 - line 151, column 40): \" + [ v.constructor.name ]);\n              };\n              while (!$tco_done) {\n                  $tco_result = $tco_loop($tco_var_state, $copy_v);\n              };\n              return $tco_result;\n          };\n      };\n      return go;\n  })();\n  var run = function (p) {\n      var $254 = Data_Function.flip(runRouteParser)(p);\n      return function ($255) {\n          return (function (v) {\n              if (v instanceof Fail) {\n                  return new Data_Either.Left(v.value0);\n              };\n              if (v instanceof Success) {\n                  return new Data_Either.Right(v.value1);\n              };\n              throw new Error(\"Failed pattern match at Routing.Duplex.Parser (line 190, column 49 - line 192, column 29): \" + [ v.constructor.name ]);\n          })($254(parsePath($255)));\n      };\n  };\n  var applyRouteParser = {\n      apply: function (fx) {\n          return function (x) {\n              return new Chomp(function (state) {\n                  var v = runRouteParser(state)(fx);\n                  if (v instanceof Fail) {\n                      return new Fail(v.value0);\n                  };\n                  if (v instanceof Success) {\n                      return Data_Functor.map(functorRouteResult)(v.value1)(runRouteParser(v.value0)(x));\n                  };\n                  throw new Error(\"Failed pattern match at Routing.Duplex.Parser (line 76, column 5 - line 78, column 56): \" + [ v.constructor.name ]);\n              });\n          };\n      },\n      Functor0: function () {\n          return functorRouteParser;\n      }\n  };\n  var applicativeRouteParser = {\n      pure: (function () {\n          var $256 = Data_Function.flip(Success.create);\n          return function ($257) {\n              return Chomp.create($256($257));\n          };\n      })(),\n      Apply0: function () {\n          return applyRouteParser;\n      }\n  };\n  var altSnoc = function (ls) {\n      return function (v) {\n          var v1 = function (v2) {\n              return Data_Array_NonEmpty.snoc(ls)(v);\n          };\n          if (v instanceof Prefix) {\n              var $197 = Data_Array_NonEmpty.last(ls);\n              if ($197 instanceof Prefix) {\n                  var $198 = v.value0 === $197.value0;\n                  if ($198) {\n                      return Data_Array_NonEmpty[\"snoc'\"](Data_Array_NonEmpty.init(ls))(new Prefix(v.value0, Control_Alt.alt(altRouteParser)($197.value1)(v.value1)));\n                  };\n                  return v1(true);\n              };\n              return v1(true);\n          };\n          return v1(true);\n      };\n  };\n  var altRouteParser = {\n      alt: function (v) {\n          return function (v1) {\n              if (v instanceof Alt && v1 instanceof Alt) {\n                  return new Alt(altAppend(v.value0)(v1.value0));\n              };\n              if (v instanceof Alt) {\n                  return new Alt(altSnoc(v.value0)(v1));\n              };\n              if (v1 instanceof Alt) {\n                  return new Alt(altCons(v)(v1.value0));\n              };\n              if (v instanceof Prefix && (v1 instanceof Prefix && v.value0 === v1.value0)) {\n                  return new Prefix(v.value0, Control_Alt.alt(altRouteParser)(v.value1)(v1.value1));\n              };\n              return new Alt(Data_Array_NonEmpty.cons(v)(Data_Array_NonEmpty.singleton(v1)));\n          };\n      },\n      Functor0: function () {\n          return functorRouteParser;\n      }\n  };\n  var altCons = function (v) {\n      return function (rs) {\n          var v1 = function (v2) {\n              return Data_Array_NonEmpty.cons(v)(rs);\n          };\n          if (v instanceof Prefix) {\n              var $217 = Data_Array_NonEmpty.head(rs);\n              if ($217 instanceof Prefix) {\n                  var $218 = v.value0 === $217.value0;\n                  if ($218) {\n                      return Data_Array_NonEmpty[\"cons'\"](new Prefix(v.value0, Control_Alt.alt(altRouteParser)(v.value1)($217.value1)))(Data_Array_NonEmpty.tail(rs));\n                  };\n                  return v1(true);\n              };\n              return v1(true);\n          };\n          return v1(true);\n      };\n  };\n  var altAppend = function ($copy_ls) {\n      return function ($copy_rs) {\n          var $tco_var_ls = $copy_ls;\n          var $tco_done = false;\n          var $tco_result;\n          function $tco_loop(ls, rs) {\n              var v = function (v1) {\n                  if (Data_Boolean.otherwise) {\n                      return Data_Semigroup.append(Data_Array_NonEmpty_Internal.semigroupNonEmptyArray)(ls)(rs);\n                  };\n                  throw new Error(\"Failed pattern match at Routing.Duplex.Parser (line 98, column 1 - line 101, column 32): \" + [ ls.constructor.name, rs.constructor.name ]);\n              };\n              var $227 = Data_Array_NonEmpty.last(ls);\n              if ($227 instanceof Prefix) {\n                  var $228 = Data_Array_NonEmpty.head(rs);\n                  if ($228 instanceof Prefix) {\n                      var $229 = $227.value0 === $228.value0;\n                      if ($229) {\n                          var rs$prime = Data_Array_NonEmpty[\"cons'\"](new Prefix($227.value0, Control_Alt.alt(altRouteParser)($227.value1)($228.value1)))(Data_Array_NonEmpty.tail(rs));\n                          var v1 = Data_Array_NonEmpty.fromArray(Data_Array_NonEmpty.init(ls));\n                          if (v1 instanceof Data_Maybe.Just) {\n                              $tco_var_ls = v1.value0;\n                              $copy_rs = rs$prime;\n                              return;\n                          };\n                          if (v1 instanceof Data_Maybe.Nothing) {\n                              $tco_done = true;\n                              return rs$prime;\n                          };\n                          throw new Error(\"Failed pattern match at Routing.Duplex.Parser (line 110, column 9 - line 112, column 26): \" + [ v1.constructor.name ]);\n                      };\n                      $tco_done = true;\n                      return v(true);\n                  };\n                  $tco_done = true;\n                  return v(true);\n              };\n              $tco_done = true;\n              return v(true);\n          };\n          while (!$tco_done) {\n              $tco_result = $tco_loop($tco_var_ls, $copy_rs);\n          };\n          return $tco_result;\n      };\n  };\n  exports[\"run\"] = run;\n  exports[\"prefix\"] = prefix;\n  exports[\"end\"] = end;\n  exports[\"functorRouteParser\"] = functorRouteParser;\n  exports[\"applyRouteParser\"] = applyRouteParser;\n  exports[\"applicativeRouteParser\"] = applicativeRouteParser;\n  exports[\"altRouteParser\"] = altRouteParser;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Routing.Duplex.Types\"] = $PS[\"Routing.Duplex.Types\"] || {};\n  var exports = $PS[\"Routing.Duplex.Types\"];\n  var emptyRouteState = {\n      segments: [  ],\n      params: [  ],\n      hash: \"\"\n  };\n  exports[\"emptyRouteState\"] = emptyRouteState;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Routing.Duplex.Printer\"] = $PS[\"Routing.Duplex.Printer\"] || {};\n  var exports = $PS[\"Routing.Duplex.Printer\"];\n  var Control_Category = $PS[\"Control.Category\"];\n  var Data_Array = $PS[\"Data.Array\"];\n  var Data_Function = $PS[\"Data.Function\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Data_Newtype = $PS[\"Data.Newtype\"];\n  var Data_String_Common = $PS[\"Data.String.Common\"];\n  var Data_Tuple = $PS[\"Data.Tuple\"];\n  var JSURI = $PS[\"JSURI\"];\n  var Routing_Duplex_Types = $PS[\"Routing.Duplex.Types\"];\n  var semigroupRoutePrinter = {\n      append: function (v) {\n          return function (v1) {\n              return function ($25) {\n                  return v1(v($25));\n              };\n          };\n      }\n  };\n  var put = function (str) {\n      return function (state) {\n          return {\n              segments: Data_Array.snoc(state.segments)(str),\n              params: state.params,\n              hash: state.hash\n          };\n      };\n  };\n  var printPath = function (v) {\n      var unsafeEncodeURIComponent = (function () {\n          var $26 = Data_Maybe.fromJust();\n          return function ($27) {\n              return $26(JSURI[\"encodeURIComponent\"]($27));\n          };\n      })();\n      var printSegments = function (v1) {\n          if (v1.length === 1 && v1[0] === \"\") {\n              return \"/\";\n          };\n          return Data_String_Common.joinWith(\"/\")(Data_Functor.map(Data_Functor.functorArray)(unsafeEncodeURIComponent)(v1));\n      };\n      var printParam = function (key) {\n          return function (v1) {\n              if (v1 === \"\") {\n                  return unsafeEncodeURIComponent(key);\n              };\n              return unsafeEncodeURIComponent(key) + (\"=\" + unsafeEncodeURIComponent(v1));\n          };\n      };\n      var printParams = function (v1) {\n          if (v1.length === 0) {\n              return \"\";\n          };\n          return \"?\" + Data_String_Common.joinWith(\"&\")(Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.uncurry(printParam))(v1));\n      };\n      var printHash = function (v1) {\n          if (v1 === \"\") {\n              return \"\";\n          };\n          return \"#\" + v1;\n      };\n      return printSegments(v.segments) + (printParams(v.params) + printHash(v.hash));\n  };\n  var run = (function () {\n      var $28 = Data_Function.applyFlipped(Routing_Duplex_Types.emptyRouteState);\n      var $29 = Data_Newtype.unwrap();\n      return function ($30) {\n          return printPath($28($29($30)));\n      };\n  })();\n  var monoidRoutePRinter = {\n      mempty: Control_Category.identity(Control_Category.categoryFn),\n      Semigroup0: function () {\n          return semigroupRoutePrinter;\n      }\n  };\n  var hash = function (h) {\n      return function (v) {\n          return {\n              segments: v.segments,\n              params: v.params,\n              hash: h\n          };\n      };\n  };\n  exports[\"put\"] = put;\n  exports[\"run\"] = run;\n  exports[\"semigroupRoutePrinter\"] = semigroupRoutePrinter;\n  exports[\"monoidRoutePRinter\"] = monoidRoutePRinter;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Routing.Duplex\"] = $PS[\"Routing.Duplex\"] || {};\n  var exports = $PS[\"Routing.Duplex\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Control_Apply = $PS[\"Control.Apply\"];\n  var Data_Foldable = $PS[\"Data.Foldable\"];\n  var Data_Function = $PS[\"Data.Function\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Data_Monoid = $PS[\"Data.Monoid\"];\n  var Data_Semigroup = $PS[\"Data.Semigroup\"];\n  var Data_String_Common = $PS[\"Data.String.Common\"];\n  var Routing_Duplex_Parser = $PS[\"Routing.Duplex.Parser\"];\n  var Routing_Duplex_Printer = $PS[\"Routing.Duplex.Printer\"];\n  var RouteDuplex = (function () {\n      function RouteDuplex(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      RouteDuplex.create = function (value0) {\n          return function (value1) {\n              return new RouteDuplex(value0, value1);\n          };\n      };\n      return RouteDuplex;\n  })();\n  var profunctorRouteDuplex = {\n      dimap: function (f) {\n          return function (g) {\n              return function (v) {\n                  return new RouteDuplex(function ($103) {\n                      return v.value0(f($103));\n                  }, Data_Functor.map(Routing_Duplex_Parser.functorRouteParser)(g)(v.value1));\n              };\n          };\n      }\n  };\n  var print = function (v) {\n      return function ($104) {\n          return Routing_Duplex_Printer.run(v.value0($104));\n      };\n  };\n  var prefix = function (s) {\n      return function (v) {\n          return new RouteDuplex(function (a) {\n              return Data_Semigroup.append(Routing_Duplex_Printer.semigroupRoutePrinter)(Routing_Duplex_Printer.put(s))(v.value0(a));\n          }, Routing_Duplex_Parser.prefix(s)(v.value1));\n      };\n  };\n  var path = (function () {\n      var $105 = Data_Function.flip(Data_Foldable.foldr(Data_Foldable.foldableArray)(prefix));\n      var $106 = Data_String_Common.split(\"/\");\n      return function ($107) {\n          return $105($106($107));\n      };\n  })();\n  var root = path(\"\");\n  var parse = function (v) {\n      return Routing_Duplex_Parser.run(v.value1);\n  };\n  var functorRouteDuplex = {\n      map: function (f) {\n          return function (m) {\n              return new RouteDuplex(m.value0, Data_Functor.map(Routing_Duplex_Parser.functorRouteParser)(f)(m.value1));\n          };\n      }\n  };\n  var end = function (v) {\n      return new RouteDuplex(v.value0, Control_Apply.applyFirst(Routing_Duplex_Parser.applyRouteParser)(v.value1)(Routing_Duplex_Parser.end));\n  };                                                                              \n  var applyRouteDuplex = {\n      apply: function (v) {\n          return function (v1) {\n              return new RouteDuplex(Control_Apply.apply(Control_Apply.applyFn)(Data_Functor.map(Data_Functor.functorFn)(Data_Semigroup.append(Routing_Duplex_Printer.semigroupRoutePrinter))(v.value0))(v1.value0), Control_Apply.apply(Routing_Duplex_Parser.applyRouteParser)(v.value1)(v1.value1));\n          };\n      },\n      Functor0: function () {\n          return functorRouteDuplex;\n      }\n  };\n  var applicativeRouteDuplex = {\n      pure: (function () {\n          var $109 = RouteDuplex.create(Data_Function[\"const\"](Data_Monoid.mempty(Routing_Duplex_Printer.monoidRoutePRinter)));\n          var $110 = Control_Applicative.pure(Routing_Duplex_Parser.applicativeRouteParser);\n          return function ($111) {\n              return $109($110($111));\n          };\n      })(),\n      Apply0: function () {\n          return applyRouteDuplex;\n      }\n  };\n  exports[\"RouteDuplex\"] = RouteDuplex;\n  exports[\"parse\"] = parse;\n  exports[\"print\"] = print;\n  exports[\"prefix\"] = prefix;\n  exports[\"root\"] = root;\n  exports[\"end\"] = end;\n  exports[\"applicativeRouteDuplex\"] = applicativeRouteDuplex;\n  exports[\"profunctorRouteDuplex\"] = profunctorRouteDuplex;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Profunctor\"] = $PS[\"Data.Profunctor\"] || {};\n  var exports = $PS[\"Data.Profunctor\"];\n  var dimap = function (dict) {\n      return dict.dimap;\n  };\n  exports[\"dimap\"] = dimap;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Record\"] = $PS[\"Record\"] || {};\n  var exports = $PS[\"Record\"];\n  var Data_Symbol = $PS[\"Data.Symbol\"];\n  var Record_Unsafe = $PS[\"Record.Unsafe\"];\n  var get = function (dictIsSymbol) {\n      return function (dictCons) {\n          return function (l) {\n              return function (r) {\n                  return Record_Unsafe.unsafeGet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r);\n              };\n          };\n      };\n  };\n  exports[\"get\"] = get;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Routing.Duplex.Generic\"] = $PS[\"Routing.Duplex.Generic\"] || {};\n  var exports = $PS[\"Routing.Duplex.Generic\"];\n  var Control_Alt = $PS[\"Control.Alt\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Control_Category = $PS[\"Control.Category\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Data_Generic_Rep = $PS[\"Data.Generic.Rep\"];\n  var Data_Profunctor = $PS[\"Data.Profunctor\"];\n  var Record = $PS[\"Record\"];\n  var Routing_Duplex = $PS[\"Routing.Duplex\"];\n  var Routing_Duplex_Parser = $PS[\"Routing.Duplex.Parser\"];\n  var Type_Proxy = $PS[\"Type.Proxy\"];                \n  var noArgs = Control_Applicative.pure(Routing_Duplex.applicativeRouteDuplex)(Data_Generic_Rep.NoArguments.value);\n  var gRouteNoArguments = {\n      gRouteDuplexCtr: Control_Category.identity(Control_Category.categoryFn)\n  };\n  var gRouteDuplexCtr = function (dict) {\n      return dict.gRouteDuplexCtr;\n  };\n  var gRouteDuplex = function (dict) {\n      return dict.gRouteDuplex;\n  };\n  var gRouteSum = function (dictGRouteDuplex) {\n      return function (dictGRouteDuplex1) {\n          return {\n              gRouteDuplex: function (r) {\n                  var v = gRouteDuplex(dictGRouteDuplex)(r);\n                  var v1 = gRouteDuplex(dictGRouteDuplex1)(r);\n                  var enc = function (v2) {\n                      if (v2 instanceof Data_Generic_Rep.Inl) {\n                          return v.value0(v2.value0);\n                      };\n                      if (v2 instanceof Data_Generic_Rep.Inr) {\n                          return v1.value0(v2.value0);\n                      };\n                      throw new Error(\"Failed pattern match at Routing.Duplex.Generic (line 33, column 11 - line 35, column 22): \" + [ v2.constructor.name ]);\n                  };\n                  var dec = Control_Alt.alt(Routing_Duplex_Parser.altRouteParser)(Data_Functor.map(Routing_Duplex_Parser.functorRouteParser)(Data_Generic_Rep.Inl.create)(v.value1))(Data_Functor.map(Routing_Duplex_Parser.functorRouteParser)(Data_Generic_Rep.Inr.create)(v1.value1));\n                  return new Routing_Duplex.RouteDuplex(enc, dec);\n              }\n          };\n      };\n  };\n  var sum = function (dictGeneric) {\n      return function (dictGRouteDuplex) {\n          var $50 = Data_Profunctor.dimap(Routing_Duplex.profunctorRouteDuplex)(Data_Generic_Rep.from(dictGeneric))(Data_Generic_Rep.to(dictGeneric));\n          var $51 = gRouteDuplex(dictGRouteDuplex);\n          return function ($52) {\n              return $50($51($52));\n          };\n      };\n  };\n  var gRouteConstructor = function (dictIsSymbol) {\n      return function (dictCons) {\n          return function (dictGRouteDuplexCtr) {\n              return {\n                  gRouteDuplex: function (r) {\n                      var v = Routing_Duplex.end(gRouteDuplexCtr(dictGRouteDuplexCtr)(Record.get(dictIsSymbol)()(Type_Proxy[\"Proxy\"].value)(r)));\n                      var enc = function (v1) {\n                          return v.value0(v1);\n                      };\n                      var dec = Data_Functor.map(Routing_Duplex_Parser.functorRouteParser)(Data_Generic_Rep.Constructor)(v.value1);\n                      return new Routing_Duplex.RouteDuplex(enc, dec);\n                  }\n              };\n          };\n      };\n  };\n  exports[\"gRouteDuplexCtr\"] = gRouteDuplexCtr;\n  exports[\"sum\"] = sum;\n  exports[\"noArgs\"] = noArgs;\n  exports[\"gRouteSum\"] = gRouteSum;\n  exports[\"gRouteConstructor\"] = gRouteConstructor;\n  exports[\"gRouteNoArguments\"] = gRouteNoArguments;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Routing.Duplex.Generic.Syntax\"] = $PS[\"Routing.Duplex.Generic.Syntax\"] || {};\n  var exports = $PS[\"Routing.Duplex.Generic.Syntax\"];\n  var Routing_Duplex = $PS[\"Routing.Duplex\"];\n  var Routing_Duplex_Generic = $PS[\"Routing.Duplex.Generic\"];\n  var gsepStringRoute = function (dictGRouteDuplexCtr) {\n      return {\n          gsep: function (a) {\n              var $7 = Routing_Duplex.prefix(a);\n              var $8 = Routing_Duplex_Generic.gRouteDuplexCtr(dictGRouteDuplexCtr);\n              return function ($9) {\n                  return $7($8($9));\n              };\n          }\n      };\n  };\n  var gsep = function (dict) {\n      return dict.gsep;\n  };\n  exports[\"gsep\"] = gsep;\n  exports[\"gsepStringRoute\"] = gsepStringRoute;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"App.Data.Route\"] = $PS[\"App.Data.Route\"] || {};\n  var exports = $PS[\"App.Data.Route\"];\n  var Data_Generic_Rep = $PS[\"Data.Generic.Rep\"];\n  var Routing_Duplex = $PS[\"Routing.Duplex\"];\n  var Routing_Duplex_Generic = $PS[\"Routing.Duplex.Generic\"];\n  var Routing_Duplex_Generic_Syntax = $PS[\"Routing.Duplex.Generic.Syntax\"];                \n  var Home = (function () {\n      function Home() {\n\n      };\n      Home.value = new Home();\n      return Home;\n  })();\n  var Login = (function () {\n      function Login() {\n\n      };\n      Login.value = new Login();\n      return Login;\n  })();\n  var Secrets = (function () {\n      function Secrets() {\n\n      };\n      Secrets.value = new Secrets();\n      return Secrets;\n  })();\n  var genericRoute = {\n      to: function (x) {\n          if (x instanceof Data_Generic_Rep.Inl) {\n              return Home.value;\n          };\n          if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {\n              return Login.value;\n          };\n          if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {\n              return Secrets.value;\n          };\n          throw new Error(\"Failed pattern match at App.Data.Route (line 20, column 1 - line 20, column 48): \" + [ x.constructor.name ]);\n      },\n      from: function (x) {\n          if (x instanceof Home) {\n              return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);\n          };\n          if (x instanceof Login) {\n              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));\n          };\n          if (x instanceof Secrets) {\n              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value));\n          };\n          throw new Error(\"Failed pattern match at App.Data.Route (line 20, column 1 - line 20, column 48): \" + [ x.constructor.name ]);\n      }\n  };\n  var routeCodec = Routing_Duplex.root(Routing_Duplex_Generic.sum(genericRoute)(Routing_Duplex_Generic.gRouteSum(Routing_Duplex_Generic.gRouteConstructor({\n      reflectSymbol: function () {\n          return \"Home\";\n      }\n  })()(Routing_Duplex_Generic.gRouteNoArguments))(Routing_Duplex_Generic.gRouteSum(Routing_Duplex_Generic.gRouteConstructor({\n      reflectSymbol: function () {\n          return \"Login\";\n      }\n  })()(Routing_Duplex_Generic.gRouteNoArguments))(Routing_Duplex_Generic.gRouteConstructor({\n      reflectSymbol: function () {\n          return \"Secrets\";\n      }\n  })()(Routing_Duplex_Generic.gRouteNoArguments))))({\n      Home: Routing_Duplex_Generic.noArgs,\n      Login: Routing_Duplex_Generic_Syntax.gsep(Routing_Duplex_Generic_Syntax.gsepStringRoute(Routing_Duplex_Generic.gRouteNoArguments))(\"login\")(Routing_Duplex_Generic.noArgs),\n      Secrets: Routing_Duplex_Generic_Syntax.gsep(Routing_Duplex_Generic_Syntax.gsepStringRoute(Routing_Duplex_Generic.gRouteNoArguments))(\"secrets\")(Routing_Duplex_Generic.noArgs)\n  }));\n  var eqRoute = {\n      eq: function (x) {\n          return function (y) {\n              if (x instanceof Home && y instanceof Home) {\n                  return true;\n              };\n              if (x instanceof Login && y instanceof Login) {\n                  return true;\n              };\n              if (x instanceof Secrets && y instanceof Secrets) {\n                  return true;\n              };\n              return false;\n          };\n      }\n  };\n  exports[\"Home\"] = Home;\n  exports[\"Login\"] = Login;\n  exports[\"Secrets\"] = Secrets;\n  exports[\"routeCodec\"] = routeCodec;\n  exports[\"eqRoute\"] = eqRoute;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"App.Data.Username\"] = $PS[\"App.Data.Username\"] || {};\n  var exports = $PS[\"App.Data.Username\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var eqUsername = {\n      eq: function (x) {\n          return function (y) {\n              return x === y;\n          };\n      }\n  };\n  var toString = function (v) {\n      return v;\n  };\n  var parse = function (v) {\n      if (v === \"\") {\n          return Data_Maybe.Nothing.value;\n      };\n      return new Data_Maybe.Just(v);\n  };\n  exports[\"parse\"] = parse;\n  exports[\"toString\"] = toString;\n  exports[\"eqUsername\"] = eqUsername;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Control.Monad.State.Class\"] = $PS[\"Control.Monad.State.Class\"] || {};\n  var exports = $PS[\"Control.Monad.State.Class\"];\n  var Data_Tuple = $PS[\"Data.Tuple\"];\n  var Data_Unit = $PS[\"Data.Unit\"];                \n  var state = function (dict) {\n      return dict.state;\n  };\n  var modify_ = function (dictMonadState) {\n      return function (f) {\n          return state(dictMonadState)(function (s) {\n              return new Data_Tuple.Tuple(Data_Unit.unit, f(s));\n          });\n      };\n  };\n  var gets = function (dictMonadState) {\n      return function (f) {\n          return state(dictMonadState)(function (s) {\n              return new Data_Tuple.Tuple(f(s), s);\n          });\n      };\n  };\n  exports[\"gets\"] = gets;\n  exports[\"modify_\"] = modify_;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"App.Store\"] = $PS[\"App.Store\"] || {};\n  var exports = $PS[\"App.Store\"];\n  var App_Data_Username = $PS[\"App.Data.Username\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Control_Bind = $PS[\"Control.Bind\"];\n  var Control_Monad_State_Class = $PS[\"Control.Monad.State.Class\"];\n  var Data_Array = $PS[\"Data.Array\"];\n  var Data_Boolean = $PS[\"Data.Boolean\"];\n  var Data_Eq = $PS[\"Data.Eq\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];                \n  var LoginUser = (function () {\n      function LoginUser(value0) {\n          this.value0 = value0;\n      };\n      LoginUser.create = function (value0) {\n          return new LoginUser(value0);\n      };\n      return LoginUser;\n  })();\n  var LogoutUser = (function () {\n      function LogoutUser() {\n\n      };\n      LogoutUser.value = new LogoutUser();\n      return LogoutUser;\n  })();\n  var UpdateMessageLog = (function () {\n      function UpdateMessageLog(value0) {\n          this.value0 = value0;\n      };\n      UpdateMessageLog.create = function (value0) {\n          return new UpdateMessageLog(value0);\n      };\n      return UpdateMessageLog;\n  })();\n  var updateLocalState = function (dictMonadState) {\n      return function (v) {\n          return Control_Bind.bind((dictMonadState.Monad0()).Bind1())(Control_Monad_State_Class.gets(dictMonadState)(function (v1) {\n              return v1.currentUser;\n          }))(function (oldUser) {\n              return Control_Applicative.when((dictMonadState.Monad0()).Applicative0())(Data_Eq.notEq(Data_Maybe.eqMaybe(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({\n                  reflectSymbol: function () {\n                      return \"username\";\n                  }\n              })(App_Data_Username.eqUsername))))(oldUser)(v.context))(Control_Monad_State_Class.modify_(dictMonadState)(function (v1) {\n                  var $9 = {};\n                  for (var $10 in v1) {\n                      if ({}.hasOwnProperty.call(v1, $10)) {\n                          $9[$10] = v1[$10];\n                      };\n                  };\n                  $9.currentUser = v.context;\n                  return $9;\n              }));\n          });\n      };\n  };\n  var reduce = function (store) {\n      return function (v) {\n          if (v instanceof LoginUser) {\n              return {\n                  currentUser: new Data_Maybe.Just(v.value0),\n                  recentMessageLog: store.recentMessageLog\n              };\n          };\n          if (v instanceof LogoutUser) {\n              return {\n                  currentUser: Data_Maybe.Nothing.value,\n                  recentMessageLog: store.recentMessageLog\n              };\n          };\n          if (v instanceof UpdateMessageLog) {\n              var prependMessage = function (x) {\n                  return function (xs) {\n                      if (Data_Array.length(xs) < 10) {\n                          return Data_Array.cons(x)(xs);\n                      };\n                      if (Data_Boolean.otherwise) {\n                          return Data_Array.cons(x)(Data_Array.take(9)(xs));\n                      };\n                      throw new Error(\"Failed pattern match at App.Store (line 35, column 7 - line 35, column 63): \" + [ x.constructor.name, xs.constructor.name ]);\n                  };\n              };\n              return {\n                  currentUser: store.currentUser,\n                  recentMessageLog: prependMessage(v.value0)(store.recentMessageLog)\n              };\n          };\n          throw new Error(\"Failed pattern match at App.Store (line 25, column 16 - line 40, column 79): \" + [ v.constructor.name ]);\n      };\n  };\n  exports[\"LoginUser\"] = LoginUser;\n  exports[\"LogoutUser\"] = LogoutUser;\n  exports[\"UpdateMessageLog\"] = UpdateMessageLog;\n  exports[\"reduce\"] = reduce;\n  exports[\"updateLocalState\"] = updateLocalState;\n})(PS);\n(function(exports) {\n  /* globals setImmediate, clearImmediate, setTimeout, clearTimeout */\n  /* eslint-disable no-unused-vars, no-prototype-builtins, no-use-before-define, no-unused-labels, no-param-reassign */\n  \"use strict\";\n\n  var Aff = function () {\n    // A unique value for empty.\n    var EMPTY = {};\n\n    /*\n\n  An awkward approximation. We elide evidence we would otherwise need in PS for\n  efficiency sake.\n\n  data Aff eff a\n    = Pure a\n    | Throw Error\n    | Catch (Aff eff a) (Error -> Aff eff a)\n    | Sync (Eff eff a)\n    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))\n    | forall b. Bind (Aff eff b) (b -> Aff eff a)\n    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)\n    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)\n    | Sequential (ParAff aff a)\n\n  */  \n    var PURE    = \"Pure\";\n    var THROW   = \"Throw\";\n    var CATCH   = \"Catch\";\n    var SYNC    = \"Sync\";\n    var ASYNC   = \"Async\";\n    var BIND    = \"Bind\";\n    var BRACKET = \"Bracket\";\n    var FORK    = \"Fork\";\n    var SEQ     = \"Sequential\";\n\n    /*\n\n  data ParAff eff a\n    = forall b. Map (b -> a) (ParAff eff b)\n    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)\n    | Alt (ParAff eff a) (ParAff eff a)\n    | ?Par (Aff eff a)\n\n  */  \n    var MAP   = \"Map\";\n    var APPLY = \"Apply\";\n    var ALT   = \"Alt\";\n\n    // Various constructors used in interpretation\n    var CONS      = \"Cons\";      // Cons-list, for stacks\n    var RESUME    = \"Resume\";    // Continue indiscriminately\n    var RELEASE   = \"Release\";   // Continue with bracket finalizers\n    var FINALIZER = \"Finalizer\"; // A non-interruptible effect\n    var FINALIZED = \"Finalized\"; // Marker for finalization\n    var FORKED    = \"Forked\";    // Reference to a forked fiber, with resumption stack\n    var FIBER     = \"Fiber\";     // Actual fiber reference\n    var THUNK     = \"Thunk\";     // Primed effect, ready to invoke\n\n    function Aff(tag, _1, _2, _3) {\n      this.tag = tag;\n      this._1  = _1;\n      this._2  = _2;\n      this._3  = _3;\n    }\n\n    function AffCtr(tag) {\n      var fn = function (_1, _2, _3) {\n        return new Aff(tag, _1, _2, _3);\n      };\n      fn.tag = tag;\n      return fn;\n    }\n\n    function nonCanceler(error) {\n      return new Aff(PURE, void 0);\n    }\n\n    function runEff(eff) {\n      try {\n        eff();\n      } catch (error) {\n        setTimeout(function () {\n          throw error;\n        }, 0);\n      }\n    }\n\n    function runSync(left, right, eff) {\n      try {\n        return right(eff());\n      } catch (error) {\n        return left(error);\n      }\n    }\n\n    function runAsync(left, eff, k) {\n      try {\n        return eff(k)();\n      } catch (error) {\n        k(left(error))();\n        return nonCanceler;\n      }\n    }\n\n    var Scheduler = function () {\n      var limit    = 1024;\n      var size     = 0;\n      var ix       = 0;\n      var queue    = new Array(limit);\n      var draining = false;\n\n      function drain() {\n        var thunk;\n        draining = true;\n        while (size !== 0) {\n          size--;\n          thunk     = queue[ix];\n          queue[ix] = void 0;\n          ix        = (ix + 1) % limit;\n          thunk();\n        }\n        draining = false;\n      }\n\n      return {\n        isDraining: function () {\n          return draining;\n        },\n        enqueue: function (cb) {\n          var i, tmp;\n          if (size === limit) {\n            tmp = draining;\n            drain();\n            draining = tmp;\n          }\n\n          queue[(ix + size) % limit] = cb;\n          size++;\n\n          if (!draining) {\n            drain();\n          }\n        }\n      };\n    }();\n\n    function Supervisor(util) {\n      var fibers  = {};\n      var fiberId = 0;\n      var count   = 0;\n\n      return {\n        register: function (fiber) {\n          var fid = fiberId++;\n          fiber.onComplete({\n            rethrow: true,\n            handler: function (result) {\n              return function () {\n                count--;\n                delete fibers[fid];\n              };\n            }\n          })();\n          fibers[fid] = fiber;\n          count++;\n        },\n        isEmpty: function () {\n          return count === 0;\n        },\n        killAll: function (killError, cb) {\n          return function () {\n            if (count === 0) {\n              return cb();\n            }\n\n            var killCount = 0;\n            var kills     = {};\n\n            function kill(fid) {\n              kills[fid] = fibers[fid].kill(killError, function (result) {\n                return function () {\n                  delete kills[fid];\n                  killCount--;\n                  if (util.isLeft(result) && util.fromLeft(result)) {\n                    setTimeout(function () {\n                      throw util.fromLeft(result);\n                    }, 0);\n                  }\n                  if (killCount === 0) {\n                    cb();\n                  }\n                };\n              })();\n            }\n\n            for (var k in fibers) {\n              if (fibers.hasOwnProperty(k)) {\n                killCount++;\n                kill(k);\n              }\n            }\n\n            fibers  = {};\n            fiberId = 0;\n            count   = 0;\n\n            return function (error) {\n              return new Aff(SYNC, function () {\n                for (var k in kills) {\n                  if (kills.hasOwnProperty(k)) {\n                    kills[k]();\n                  }\n                }\n              });\n            };\n          };\n        }\n      };\n    }\n\n    // Fiber state machine\n    var SUSPENDED   = 0; // Suspended, pending a join.\n    var CONTINUE    = 1; // Interpret the next instruction.\n    var STEP_BIND   = 2; // Apply the next bind.\n    var STEP_RESULT = 3; // Handle potential failure from a result.\n    var PENDING     = 4; // An async effect is running.\n    var RETURN      = 5; // The current stack has returned.\n    var COMPLETED   = 6; // The entire fiber has completed.\n\n    function Fiber(util, supervisor, aff) {\n      // Monotonically increasing tick, increased on each asynchronous turn.\n      var runTick = 0;\n\n      // The current branch of the state machine.\n      var status = SUSPENDED;\n\n      // The current point of interest for the state machine branch.\n      var step      = aff;  // Successful step\n      var fail      = null; // Failure step\n      var interrupt = null; // Asynchronous interrupt\n\n      // Stack of continuations for the current fiber.\n      var bhead = null;\n      var btail = null;\n\n      // Stack of attempts and finalizers for error recovery. Every `Cons` is also\n      // tagged with current `interrupt` state. We use this to track which items\n      // should be ignored or evaluated as a result of a kill.\n      var attempts = null;\n\n      // A special state is needed for Bracket, because it cannot be killed. When\n      // we enter a bracket acquisition or finalizer, we increment the counter,\n      // and then decrement once complete.\n      var bracketCount = 0;\n\n      // Each join gets a new id so they can be revoked.\n      var joinId  = 0;\n      var joins   = null;\n      var rethrow = true;\n\n      // Each invocation of `run` requires a tick. When an asynchronous effect is\n      // resolved, we must check that the local tick coincides with the fiber\n      // tick before resuming. This prevents multiple async continuations from\n      // accidentally resuming the same fiber. A common example may be invoking\n      // the provided callback in `makeAff` more than once, but it may also be an\n      // async effect resuming after the fiber was already cancelled.\n      function run(localRunTick) {\n        var tmp, result, attempt;\n        while (true) {\n          tmp       = null;\n          result    = null;\n          attempt   = null;\n\n          switch (status) {\n          case STEP_BIND:\n            status = CONTINUE;\n            try {\n              step   = bhead(step);\n              if (btail === null) {\n                bhead = null;\n              } else {\n                bhead = btail._1;\n                btail = btail._2;\n              }\n            } catch (e) {\n              status = RETURN;\n              fail   = util.left(e);\n              step   = null;\n            }\n            break;\n\n          case STEP_RESULT:\n            if (util.isLeft(step)) {\n              status = RETURN;\n              fail   = step;\n              step   = null;\n            } else if (bhead === null) {\n              status = RETURN;\n            } else {\n              status = STEP_BIND;\n              step   = util.fromRight(step);\n            }\n            break;\n\n          case CONTINUE:\n            switch (step.tag) {\n            case BIND:\n              if (bhead) {\n                btail = new Aff(CONS, bhead, btail);\n              }\n              bhead  = step._2;\n              status = CONTINUE;\n              step   = step._1;\n              break;\n\n            case PURE:\n              if (bhead === null) {\n                status = RETURN;\n                step   = util.right(step._1);\n              } else {\n                status = STEP_BIND;\n                step   = step._1;\n              }\n              break;\n\n            case SYNC:\n              status = STEP_RESULT;\n              step   = runSync(util.left, util.right, step._1);\n              break;\n\n            case ASYNC:\n              status = PENDING;\n              step   = runAsync(util.left, step._1, function (result) {\n                return function () {\n                  if (runTick !== localRunTick) {\n                    return;\n                  }\n                  runTick++;\n                  Scheduler.enqueue(function () {\n                    // It's possible to interrupt the fiber between enqueuing and\n                    // resuming, so we need to check that the runTick is still\n                    // valid.\n                    if (runTick !== localRunTick + 1) {\n                      return;\n                    }\n                    status = STEP_RESULT;\n                    step   = result;\n                    run(runTick);\n                  });\n                };\n              });\n              return;\n\n            case THROW:\n              status = RETURN;\n              fail   = util.left(step._1);\n              step   = null;\n              break;\n\n            // Enqueue the Catch so that we can call the error handler later on\n            // in case of an exception.\n            case CATCH:\n              if (bhead === null) {\n                attempts = new Aff(CONS, step, attempts, interrupt);\n              } else {\n                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);\n              }\n              bhead    = null;\n              btail    = null;\n              status   = CONTINUE;\n              step     = step._1;\n              break;\n\n            // Enqueue the Bracket so that we can call the appropriate handlers\n            // after resource acquisition.\n            case BRACKET:\n              bracketCount++;\n              if (bhead === null) {\n                attempts = new Aff(CONS, step, attempts, interrupt);\n              } else {\n                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);\n              }\n              bhead  = null;\n              btail  = null;\n              status = CONTINUE;\n              step   = step._1;\n              break;\n\n            case FORK:\n              status = STEP_RESULT;\n              tmp    = Fiber(util, supervisor, step._2);\n              if (supervisor) {\n                supervisor.register(tmp);\n              }\n              if (step._1) {\n                tmp.run();\n              }\n              step = util.right(tmp);\n              break;\n\n            case SEQ:\n              status = CONTINUE;\n              step   = sequential(util, supervisor, step._1);\n              break;\n            }\n            break;\n\n          case RETURN:\n            bhead = null;\n            btail = null;\n            // If the current stack has returned, and we have no other stacks to\n            // resume or finalizers to run, the fiber has halted and we can\n            // invoke all join callbacks. Otherwise we need to resume.\n            if (attempts === null) {\n              status = COMPLETED;\n              step   = interrupt || fail || step;\n            } else {\n              // The interrupt status for the enqueued item.\n              tmp      = attempts._3;\n              attempt  = attempts._1;\n              attempts = attempts._2;\n\n              switch (attempt.tag) {\n              // We cannot recover from an unmasked interrupt. Otherwise we should\n              // continue stepping, or run the exception handler if an exception\n              // was raised.\n              case CATCH:\n                // We should compare the interrupt status as well because we\n                // only want it to apply if there has been an interrupt since\n                // enqueuing the catch.\n                if (interrupt && interrupt !== tmp && bracketCount === 0) {\n                  status = RETURN;\n                } else if (fail) {\n                  status = CONTINUE;\n                  step   = attempt._2(util.fromLeft(fail));\n                  fail   = null;\n                }\n                break;\n\n              // We cannot resume from an unmasked interrupt or exception.\n              case RESUME:\n                // As with Catch, we only want to ignore in the case of an\n                // interrupt since enqueing the item.\n                if (interrupt && interrupt !== tmp && bracketCount === 0 || fail) {\n                  status = RETURN;\n                } else {\n                  bhead  = attempt._1;\n                  btail  = attempt._2;\n                  status = STEP_BIND;\n                  step   = util.fromRight(step);\n                }\n                break;\n\n              // If we have a bracket, we should enqueue the handlers,\n              // and continue with the success branch only if the fiber has\n              // not been interrupted. If the bracket acquisition failed, we\n              // should not run either.\n              case BRACKET:\n                bracketCount--;\n                if (fail === null) {\n                  result   = util.fromRight(step);\n                  // We need to enqueue the Release with the same interrupt\n                  // status as the Bracket that is initiating it.\n                  attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp);\n                  // We should only coninue as long as the interrupt status has not changed or\n                  // we are currently within a non-interruptable finalizer.\n                  if (interrupt === tmp || bracketCount > 0) {\n                    status = CONTINUE;\n                    step   = attempt._3(result);\n                  }\n                }\n                break;\n\n              // Enqueue the appropriate handler. We increase the bracket count\n              // because it should not be cancelled.\n              case RELEASE:\n                attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);\n                status   = CONTINUE;\n                // It has only been killed if the interrupt status has changed\n                // since we enqueued the item, and the bracket count is 0. If the\n                // bracket count is non-zero then we are in a masked state so it's\n                // impossible to be killed.\n                if (interrupt && interrupt !== tmp && bracketCount === 0) {\n                  step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);\n                } else if (fail) {\n                  step = attempt._1.failed(util.fromLeft(fail))(attempt._2);\n                } else {\n                  step = attempt._1.completed(util.fromRight(step))(attempt._2);\n                }\n                fail = null;\n                bracketCount++;\n                break;\n\n              case FINALIZER:\n                bracketCount++;\n                attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);\n                status   = CONTINUE;\n                step     = attempt._1;\n                break;\n\n              case FINALIZED:\n                bracketCount--;\n                status = RETURN;\n                step   = attempt._1;\n                fail   = attempt._2;\n                break;\n              }\n            }\n            break;\n\n          case COMPLETED:\n            for (var k in joins) {\n              if (joins.hasOwnProperty(k)) {\n                rethrow = rethrow && joins[k].rethrow;\n                runEff(joins[k].handler(step));\n              }\n            }\n            joins = null;\n            // If we have an interrupt and a fail, then the thread threw while\n            // running finalizers. This should always rethrow in a fresh stack.\n            if (interrupt && fail) {\n              setTimeout(function () {\n                throw util.fromLeft(fail);\n              }, 0);\n            // If we have an unhandled exception, and no other fiber has joined\n            // then we need to throw the exception in a fresh stack.\n            } else if (util.isLeft(step) && rethrow) {\n              setTimeout(function () {\n                // Guard on reathrow because a completely synchronous fiber can\n                // still have an observer which was added after-the-fact.\n                if (rethrow) {\n                  throw util.fromLeft(step);\n                }\n              }, 0);\n            }\n            return;\n          case SUSPENDED:\n            status = CONTINUE;\n            break;\n          case PENDING: return;\n          }\n        }\n      }\n\n      function onComplete(join) {\n        return function () {\n          if (status === COMPLETED) {\n            rethrow = rethrow && join.rethrow;\n            join.handler(step)();\n            return function () {};\n          }\n\n          var jid    = joinId++;\n          joins      = joins || {};\n          joins[jid] = join;\n\n          return function() {\n            if (joins !== null) {\n              delete joins[jid];\n            }\n          };\n        };\n      }\n\n      function kill(error, cb) {\n        return function () {\n          if (status === COMPLETED) {\n            cb(util.right(void 0))();\n            return function () {};\n          }\n\n          var canceler = onComplete({\n            rethrow: false,\n            handler: function (/* unused */) {\n              return cb(util.right(void 0));\n            }\n          })();\n\n          switch (status) {\n          case SUSPENDED:\n            interrupt = util.left(error);\n            status    = COMPLETED;\n            step      = interrupt;\n            run(runTick);\n            break;\n          case PENDING:\n            if (interrupt === null) {\n              interrupt = util.left(error);\n            }\n            if (bracketCount === 0) {\n              if (status === PENDING) {\n                attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);\n              }\n              status   = RETURN;\n              step     = null;\n              fail     = null;\n              run(++runTick);\n            }\n            break;\n          default:\n            if (interrupt === null) {\n              interrupt = util.left(error);\n            }\n            if (bracketCount === 0) {\n              status = RETURN;\n              step   = null;\n              fail   = null;\n            }\n          }\n\n          return canceler;\n        };\n      }\n\n      function join(cb) {\n        return function () {\n          var canceler = onComplete({\n            rethrow: false,\n            handler: cb\n          })();\n          if (status === SUSPENDED) {\n            run(runTick);\n          }\n          return canceler;\n        };\n      }\n\n      return {\n        kill: kill,\n        join: join,\n        onComplete: onComplete,\n        isSuspended: function () {\n          return status === SUSPENDED;\n        },\n        run: function () {\n          if (status === SUSPENDED) {\n            if (!Scheduler.isDraining()) {\n              Scheduler.enqueue(function () {\n                run(runTick);\n              });\n            } else {\n              run(runTick);\n            }\n          }\n        }\n      };\n    }\n\n    function runPar(util, supervisor, par, cb) {\n      // Table of all forked fibers.\n      var fiberId   = 0;\n      var fibers    = {};\n\n      // Table of currently running cancelers, as a product of `Alt` behavior.\n      var killId    = 0;\n      var kills     = {};\n\n      // Error used for early cancelation on Alt branches.\n      var early     = new Error(\"[ParAff] Early exit\");\n\n      // Error used to kill the entire tree.\n      var interrupt = null;\n\n      // The root pointer of the tree.\n      var root      = EMPTY;\n\n      // Walks a tree, invoking all the cancelers. Returns the table of pending\n      // cancellation fibers.\n      function kill(error, par, cb) {\n        var step  = par;\n        var head  = null;\n        var tail  = null;\n        var count = 0;\n        var kills = {};\n        var tmp, kid;\n\n        loop: while (true) {\n          tmp = null;\n\n          switch (step.tag) {\n          case FORKED:\n            if (step._3 === EMPTY) {\n              tmp = fibers[step._1];\n              kills[count++] = tmp.kill(error, function (result) {\n                return function () {\n                  count--;\n                  if (count === 0) {\n                    cb(result)();\n                  }\n                };\n              });\n            }\n            // Terminal case.\n            if (head === null) {\n              break loop;\n            }\n            // Go down the right side of the tree.\n            step = head._2;\n            if (tail === null) {\n              head = null;\n            } else {\n              head = tail._1;\n              tail = tail._2;\n            }\n            break;\n          case MAP:\n            step = step._2;\n            break;\n          case APPLY:\n          case ALT:\n            if (head) {\n              tail = new Aff(CONS, head, tail);\n            }\n            head = step;\n            step = step._1;\n            break;\n          }\n        }\n\n        if (count === 0) {\n          cb(util.right(void 0))();\n        } else {\n          // Run the cancelation effects. We alias `count` because it's mutable.\n          kid = 0;\n          tmp = count;\n          for (; kid < tmp; kid++) {\n            kills[kid] = kills[kid]();\n          }\n        }\n\n        return kills;\n      }\n\n      // When a fiber resolves, we need to bubble back up the tree with the\n      // result, computing the applicative nodes.\n      function join(result, head, tail) {\n        var fail, step, lhs, rhs, tmp, kid;\n\n        if (util.isLeft(result)) {\n          fail = result;\n          step = null;\n        } else {\n          step = result;\n          fail = null;\n        }\n\n        loop: while (true) {\n          lhs = null;\n          rhs = null;\n          tmp = null;\n          kid = null;\n\n          // We should never continue if the entire tree has been interrupted.\n          if (interrupt !== null) {\n            return;\n          }\n\n          // We've made it all the way to the root of the tree, which means\n          // the tree has fully evaluated.\n          if (head === null) {\n            cb(fail || step)();\n            return;\n          }\n\n          // The tree has already been computed, so we shouldn't try to do it\n          // again. This should never happen.\n          // TODO: Remove this?\n          if (head._3 !== EMPTY) {\n            return;\n          }\n\n          switch (head.tag) {\n          case MAP:\n            if (fail === null) {\n              head._3 = util.right(head._1(util.fromRight(step)));\n              step    = head._3;\n            } else {\n              head._3 = fail;\n            }\n            break;\n          case APPLY:\n            lhs = head._1._3;\n            rhs = head._2._3;\n            // If we have a failure we should kill the other side because we\n            // can't possible yield a result anymore.\n            if (fail) {\n              head._3 = fail;\n              tmp     = true;\n              kid     = killId++;\n\n              kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function (/* unused */) {\n                return function () {\n                  delete kills[kid];\n                  if (tmp) {\n                    tmp = false;\n                  } else if (tail === null) {\n                    join(fail, null, null);\n                  } else {\n                    join(fail, tail._1, tail._2);\n                  }\n                };\n              });\n\n              if (tmp) {\n                tmp = false;\n                return;\n              }\n            } else if (lhs === EMPTY || rhs === EMPTY) {\n              // We can only proceed if both sides have resolved.\n              return;\n            } else {\n              step    = util.right(util.fromRight(lhs)(util.fromRight(rhs)));\n              head._3 = step;\n            }\n            break;\n          case ALT:\n            lhs = head._1._3;\n            rhs = head._2._3;\n            // We can only proceed if both have resolved or we have a success\n            if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {\n              return;\n            }\n            // If both sides resolve with an error, we should continue with the\n            // first error\n            if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {\n              fail    = step === lhs ? rhs : lhs;\n              step    = null;\n              head._3 = fail;\n            } else {\n              head._3 = step;\n              tmp     = true;\n              kid     = killId++;\n              // Once a side has resolved, we need to cancel the side that is still\n              // pending before we can continue.\n              kills[kid] = kill(early, step === lhs ? head._2 : head._1, function (/* unused */) {\n                return function () {\n                  delete kills[kid];\n                  if (tmp) {\n                    tmp = false;\n                  } else if (tail === null) {\n                    join(step, null, null);\n                  } else {\n                    join(step, tail._1, tail._2);\n                  }\n                };\n              });\n\n              if (tmp) {\n                tmp = false;\n                return;\n              }\n            }\n            break;\n          }\n\n          if (tail === null) {\n            head = null;\n          } else {\n            head = tail._1;\n            tail = tail._2;\n          }\n        }\n      }\n\n      function resolve(fiber) {\n        return function (result) {\n          return function () {\n            delete fibers[fiber._1];\n            fiber._3 = result;\n            join(result, fiber._2._1, fiber._2._2);\n          };\n        };\n      }\n\n      // Walks the applicative tree, substituting non-applicative nodes with\n      // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot\n      // as a mutable slot for memoization. In an unresolved state, the `_3`\n      // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk\n      // the left side first, because both operations are left-associative. As\n      // we `RETURN` from those branches, we then walk the right side.\n      function run() {\n        var status = CONTINUE;\n        var step   = par;\n        var head   = null;\n        var tail   = null;\n        var tmp, fid;\n\n        loop: while (true) {\n          tmp = null;\n          fid = null;\n\n          switch (status) {\n          case CONTINUE:\n            switch (step.tag) {\n            case MAP:\n              if (head) {\n                tail = new Aff(CONS, head, tail);\n              }\n              head = new Aff(MAP, step._1, EMPTY, EMPTY);\n              step = step._2;\n              break;\n            case APPLY:\n              if (head) {\n                tail = new Aff(CONS, head, tail);\n              }\n              head = new Aff(APPLY, EMPTY, step._2, EMPTY);\n              step = step._1;\n              break;\n            case ALT:\n              if (head) {\n                tail = new Aff(CONS, head, tail);\n              }\n              head = new Aff(ALT, EMPTY, step._2, EMPTY);\n              step = step._1;\n              break;\n            default:\n              // When we hit a leaf value, we suspend the stack in the `FORKED`.\n              // When the fiber resolves, it can bubble back up the tree.\n              fid    = fiberId++;\n              status = RETURN;\n              tmp    = step;\n              step   = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);\n              tmp    = Fiber(util, supervisor, tmp);\n              tmp.onComplete({\n                rethrow: false,\n                handler: resolve(step)\n              })();\n              fibers[fid] = tmp;\n              if (supervisor) {\n                supervisor.register(tmp);\n              }\n            }\n            break;\n          case RETURN:\n            // Terminal case, we are back at the root.\n            if (head === null) {\n              break loop;\n            }\n            // If we are done with the right side, we need to continue down the\n            // left. Otherwise we should continue up the stack.\n            if (head._1 === EMPTY) {\n              head._1 = step;\n              status  = CONTINUE;\n              step    = head._2;\n              head._2 = EMPTY;\n            } else {\n              head._2 = step;\n              step    = head;\n              if (tail === null) {\n                head  = null;\n              } else {\n                head  = tail._1;\n                tail  = tail._2;\n              }\n            }\n          }\n        }\n\n        // Keep a reference to the tree root so it can be cancelled.\n        root = step;\n\n        for (fid = 0; fid < fiberId; fid++) {\n          fibers[fid].run();\n        }\n      }\n\n      // Cancels the entire tree. If there are already subtrees being canceled,\n      // we need to first cancel those joins. We will then add fresh joins for\n      // all pending branches including those that were in the process of being\n      // canceled.\n      function cancel(error, cb) {\n        interrupt = util.left(error);\n        var innerKills;\n        for (var kid in kills) {\n          if (kills.hasOwnProperty(kid)) {\n            innerKills = kills[kid];\n            for (kid in innerKills) {\n              if (innerKills.hasOwnProperty(kid)) {\n                innerKills[kid]();\n              }\n            }\n          }\n        }\n\n        kills = null;\n        var newKills = kill(error, root, cb);\n\n        return function (killError) {\n          return new Aff(ASYNC, function (killCb) {\n            return function () {\n              for (var kid in newKills) {\n                if (newKills.hasOwnProperty(kid)) {\n                  newKills[kid]();\n                }\n              }\n              return nonCanceler;\n            };\n          });\n        };\n      }\n\n      run();\n\n      return function (killError) {\n        return new Aff(ASYNC, function (killCb) {\n          return function () {\n            return cancel(killError, killCb);\n          };\n        });\n      };\n    }\n\n    function sequential(util, supervisor, par) {\n      return new Aff(ASYNC, function (cb) {\n        return function () {\n          return runPar(util, supervisor, par, cb);\n        };\n      });\n    }\n\n    Aff.EMPTY       = EMPTY;\n    Aff.Pure        = AffCtr(PURE);\n    Aff.Throw       = AffCtr(THROW);\n    Aff.Catch       = AffCtr(CATCH);\n    Aff.Sync        = AffCtr(SYNC);\n    Aff.Async       = AffCtr(ASYNC);\n    Aff.Bind        = AffCtr(BIND);\n    Aff.Bracket     = AffCtr(BRACKET);\n    Aff.Fork        = AffCtr(FORK);\n    Aff.Seq         = AffCtr(SEQ);\n    Aff.ParMap      = AffCtr(MAP);\n    Aff.ParApply    = AffCtr(APPLY);\n    Aff.ParAlt      = AffCtr(ALT);\n    Aff.Fiber       = Fiber;\n    Aff.Supervisor  = Supervisor;\n    Aff.Scheduler   = Scheduler;\n    Aff.nonCanceler = nonCanceler;\n\n    return Aff;\n  }();\n\n  exports._pure = Aff.Pure;\n\n  exports._throwError = Aff.Throw;\n\n  exports._catchError = function (aff) {\n    return function (k) {\n      return Aff.Catch(aff, k);\n    };\n  };\n\n  exports._map = function (f) {\n    return function (aff) {\n      if (aff.tag === Aff.Pure.tag) {\n        return Aff.Pure(f(aff._1));\n      } else {\n        return Aff.Bind(aff, function (value) {\n          return Aff.Pure(f(value));\n        });\n      }\n    };\n  };\n\n  exports._bind = function (aff) {\n    return function (k) {\n      return Aff.Bind(aff, k);\n    };\n  };\n\n  exports._fork = function (immediate) {\n    return function (aff) {\n      return Aff.Fork(immediate, aff);\n    };\n  };\n\n  exports._liftEffect = Aff.Sync;\n\n  exports._parAffMap = function (f) {\n    return function (aff) {\n      return Aff.ParMap(f, aff);\n    };\n  };\n\n  exports._parAffApply = function (aff1) {\n    return function (aff2) {\n      return Aff.ParApply(aff1, aff2);\n    };\n  };\n\n  exports.makeAff = Aff.Async;\n\n  exports.generalBracket = function (acquire) {\n    return function (options) {\n      return function (k) {\n        return Aff.Bracket(acquire, options, k);\n      };\n    };\n  };\n\n  exports._makeFiber = function (util, aff) {\n    return function () {\n      return Aff.Fiber(util, null, aff);\n    };\n  };  \n\n  exports._sequential = Aff.Seq;\n})(PS[\"Effect.Aff\"] = PS[\"Effect.Aff\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Control.Monad.Error.Class\"] = $PS[\"Control.Monad.Error.Class\"] || {};\n  var exports = $PS[\"Control.Monad.Error.Class\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Data_Either = $PS[\"Data.Either\"];\n  var Data_Functor = $PS[\"Data.Functor\"];                        \n  var throwError = function (dict) {\n      return dict.throwError;\n  };\n  var catchError = function (dict) {\n      return dict.catchError;\n  };\n  var $$try = function (dictMonadError) {\n      return function (a) {\n          return catchError(dictMonadError)(Data_Functor.map(((((dictMonadError.MonadThrow0()).Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Right.create)(a))((function () {\n              var $21 = Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0());\n              return function ($22) {\n                  return $21(Data_Either.Left.create($22));\n              };\n          })());\n      };\n  };\n  exports[\"throwError\"] = throwError;\n  exports[\"try\"] = $$try;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Control.Parallel.Class\"] = $PS[\"Control.Parallel.Class\"] || {};\n  var exports = $PS[\"Control.Parallel.Class\"];\n  var sequential = function (dict) {\n      return dict.sequential;\n  };\n  var parallel = function (dict) {\n      return dict.parallel;\n  };\n  exports[\"parallel\"] = parallel;\n  exports[\"sequential\"] = sequential;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  exports.unsafePerformEffect = function (f) {\n    return f();\n  };\n})(PS[\"Effect.Unsafe\"] = PS[\"Effect.Unsafe\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Effect.Unsafe\"] = $PS[\"Effect.Unsafe\"] || {};\n  var exports = $PS[\"Effect.Unsafe\"];\n  var $foreign = $PS[\"Effect.Unsafe\"];\n  exports[\"unsafePerformEffect\"] = $foreign.unsafePerformEffect;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  // module Partial.Unsafe\n\n  exports._unsafePartial = function (f) {\n    return f();\n  };\n})(PS[\"Partial.Unsafe\"] = PS[\"Partial.Unsafe\"] || {});\n(function(exports) {\n  \"use strict\";\n\n  // module Partial\n\n  exports._crashWith = function (msg) {\n    throw new Error(msg);\n  };\n})(PS[\"Partial\"] = PS[\"Partial\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Partial\"] = $PS[\"Partial\"] || {};\n  var exports = $PS[\"Partial\"];\n  var $foreign = $PS[\"Partial\"];         \n  var crashWith = function (dictPartial) {\n      return $foreign[\"_crashWith\"];\n  };\n  exports[\"crashWith\"] = crashWith;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Partial.Unsafe\"] = $PS[\"Partial.Unsafe\"] || {};\n  var exports = $PS[\"Partial.Unsafe\"];\n  var $foreign = $PS[\"Partial.Unsafe\"];\n  var Partial = $PS[\"Partial\"];                \n  var unsafePartial = $foreign[\"_unsafePartial\"];\n  var unsafeCrashWith = function (msg) {\n      return unsafePartial(function (dictPartial) {\n          return Partial.crashWith()(msg);\n      });\n  };\n  exports[\"unsafeCrashWith\"] = unsafeCrashWith;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Effect.Aff\"] = $PS[\"Effect.Aff\"] || {};\n  var exports = $PS[\"Effect.Aff\"];\n  var $foreign = $PS[\"Effect.Aff\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Control_Bind = $PS[\"Control.Bind\"];\n  var Control_Monad = $PS[\"Control.Monad\"];\n  var Control_Monad_Error_Class = $PS[\"Control.Monad.Error.Class\"];\n  var Control_Monad_Rec_Class = $PS[\"Control.Monad.Rec.Class\"];\n  var Control_Parallel_Class = $PS[\"Control.Parallel.Class\"];\n  var Data_Either = $PS[\"Data.Either\"];\n  var Data_Function = $PS[\"Data.Function\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Data_Unit = $PS[\"Data.Unit\"];\n  var Effect = $PS[\"Effect\"];\n  var Effect_Class = $PS[\"Effect.Class\"];\n  var Effect_Unsafe = $PS[\"Effect.Unsafe\"];\n  var Partial_Unsafe = $PS[\"Partial.Unsafe\"];\n  var Unsafe_Coerce = $PS[\"Unsafe.Coerce\"];\n  var Canceler = function (x) {\n      return x;\n  };\n  var suspendAff = $foreign[\"_fork\"](false);\n  var functorParAff = {\n      map: $foreign[\"_parAffMap\"]\n  };\n  var functorAff = {\n      map: $foreign[\"_map\"]\n  };\n  var forkAff = $foreign[\"_fork\"](true);\n  var ffiUtil = (function () {\n      var unsafeFromRight = function (v) {\n          if (v instanceof Data_Either.Right) {\n              return v.value0;\n          };\n          if (v instanceof Data_Either.Left) {\n              return Partial_Unsafe.unsafeCrashWith(\"unsafeFromRight: Left\");\n          };\n          throw new Error(\"Failed pattern match at Effect.Aff (line 404, column 21 - line 406, column 54): \" + [ v.constructor.name ]);\n      };\n      var unsafeFromLeft = function (v) {\n          if (v instanceof Data_Either.Left) {\n              return v.value0;\n          };\n          if (v instanceof Data_Either.Right) {\n              return Partial_Unsafe.unsafeCrashWith(\"unsafeFromLeft: Right\");\n          };\n          throw new Error(\"Failed pattern match at Effect.Aff (line 399, column 20 - line 401, column 54): \" + [ v.constructor.name ]);\n      };\n      var isLeft = function (v) {\n          if (v instanceof Data_Either.Left) {\n              return true;\n          };\n          if (v instanceof Data_Either.Right) {\n              return false;\n          };\n          throw new Error(\"Failed pattern match at Effect.Aff (line 394, column 12 - line 396, column 20): \" + [ v.constructor.name ]);\n      };\n      return {\n          isLeft: isLeft,\n          fromLeft: unsafeFromLeft,\n          fromRight: unsafeFromRight,\n          left: Data_Either.Left.create,\n          right: Data_Either.Right.create\n      };\n  })();\n  var makeFiber = function (aff) {\n      return $foreign[\"_makeFiber\"](ffiUtil, aff);\n  };\n  var launchAff = function (aff) {\n      return function __do() {\n          var fiber = makeFiber(aff)();\n          fiber.run();\n          return fiber;\n      };\n  };\n  var launchAff_ = (function () {\n      var $40 = Data_Functor[\"void\"](Effect.functorEffect);\n      return function ($41) {\n          return $40(launchAff($41));\n      };\n  })();\n  var bracket = function (acquire) {\n      return function (completed) {\n          return $foreign.generalBracket(acquire)({\n              killed: Data_Function[\"const\"](completed),\n              failed: Data_Function[\"const\"](completed),\n              completed: Data_Function[\"const\"](completed)\n          });\n      };\n  };\n  var applyParAff = {\n      apply: $foreign[\"_parAffApply\"],\n      Functor0: function () {\n          return functorParAff;\n      }\n  };\n  var monadAff = {\n      Applicative0: function () {\n          return applicativeAff;\n      },\n      Bind1: function () {\n          return bindAff;\n      }\n  };\n  var bindAff = {\n      bind: $foreign[\"_bind\"],\n      Apply0: function () {\n          return applyAff;\n      }\n  };\n  var applyAff = {\n      apply: Control_Monad.ap(monadAff),\n      Functor0: function () {\n          return functorAff;\n      }\n  };\n  var applicativeAff = {\n      pure: $foreign[\"_pure\"],\n      Apply0: function () {\n          return applyAff;\n      }\n  };\n  var $$finally = function (fin) {\n      return function (a) {\n          return bracket(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))(Data_Function[\"const\"](fin))(Data_Function[\"const\"](a));\n      };\n  };\n  var monadEffectAff = {\n      liftEffect: $foreign[\"_liftEffect\"],\n      Monad0: function () {\n          return monadAff;\n      }\n  };\n  var effectCanceler = (function () {\n      var $42 = Effect_Class.liftEffect(monadEffectAff);\n      return function ($43) {\n          return Canceler(Data_Function[\"const\"]($42($43)));\n      };\n  })();\n  var joinFiber = function (v) {\n      return $foreign.makeAff(function (k) {\n          return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.join(k));\n      });\n  };\n  var functorFiber = {\n      map: function (f) {\n          return function (t) {\n              return Effect_Unsafe.unsafePerformEffect(makeFiber(Data_Functor.map(functorAff)(f)(joinFiber(t))));\n          };\n      }\n  };\n  var killFiber = function (e) {\n      return function (v) {\n          return Control_Bind.bind(bindAff)(Effect_Class.liftEffect(monadEffectAff)(v.isSuspended))(function (v1) {\n              if (v1) {\n                  return Effect_Class.liftEffect(monadEffectAff)(Data_Functor[\"void\"](Effect.functorEffect)(v.kill(e, Data_Function[\"const\"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)))));\n              };\n              return $foreign.makeAff(function (k) {\n                  return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.kill(e, k));\n              });\n          });\n      };\n  };   \n  var monadThrowAff = {\n      throwError: $foreign[\"_throwError\"],\n      Monad0: function () {\n          return monadAff;\n      }\n  };\n  var monadErrorAff = {\n      catchError: $foreign[\"_catchError\"],\n      MonadThrow0: function () {\n          return monadThrowAff;\n      }\n  };                                                            \n  var runAff = function (k) {\n      return function (aff) {\n          return launchAff(Control_Bind.bindFlipped(bindAff)((function () {\n              var $46 = Effect_Class.liftEffect(monadEffectAff);\n              return function ($47) {\n                  return $46(k($47));\n              };\n          })())(Control_Monad_Error_Class[\"try\"](monadErrorAff)(aff)));\n      };\n  };\n  var runAff_ = function (k) {\n      return function (aff) {\n          return Data_Functor[\"void\"](Effect.functorEffect)(runAff(k)(aff));\n      };\n  };\n  var parallelAff = {\n      parallel: Unsafe_Coerce.unsafeCoerce,\n      sequential: $foreign[\"_sequential\"],\n      Monad0: function () {\n          return monadAff;\n      },\n      Applicative1: function () {\n          return applicativeParAff;\n      }\n  };\n  var applicativeParAff = {\n      pure: (function () {\n          var $50 = Control_Parallel_Class.parallel(parallelAff);\n          var $51 = Control_Applicative.pure(applicativeAff);\n          return function ($52) {\n              return $50($51($52));\n          };\n      })(),\n      Apply0: function () {\n          return applyParAff;\n      }\n  };\n  var monadRecAff = {\n      tailRecM: function (k) {\n          var go = function (a) {\n              return Control_Bind.bind(bindAff)(k(a))(function (res) {\n                  if (res instanceof Control_Monad_Rec_Class.Done) {\n                      return Control_Applicative.pure(applicativeAff)(res.value0);\n                  };\n                  if (res instanceof Control_Monad_Rec_Class.Loop) {\n                      return go(res.value0);\n                  };\n                  throw new Error(\"Failed pattern match at Effect.Aff (line 102, column 7 - line 104, column 22): \" + [ res.constructor.name ]);\n              });\n          };\n          return go;\n      },\n      Monad0: function () {\n          return monadAff;\n      }\n  };\n  var nonCanceler = Data_Function[\"const\"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));\n  exports[\"launchAff_\"] = launchAff_;\n  exports[\"runAff_\"] = runAff_;\n  exports[\"forkAff\"] = forkAff;\n  exports[\"suspendAff\"] = suspendAff;\n  exports[\"finally\"] = $$finally;\n  exports[\"killFiber\"] = killFiber;\n  exports[\"joinFiber\"] = joinFiber;\n  exports[\"nonCanceler\"] = nonCanceler;\n  exports[\"effectCanceler\"] = effectCanceler;\n  exports[\"functorAff\"] = functorAff;\n  exports[\"applicativeAff\"] = applicativeAff;\n  exports[\"bindAff\"] = bindAff;\n  exports[\"monadAff\"] = monadAff;\n  exports[\"monadRecAff\"] = monadRecAff;\n  exports[\"monadThrowAff\"] = monadThrowAff;\n  exports[\"monadEffectAff\"] = monadEffectAff;\n  exports[\"applicativeParAff\"] = applicativeParAff;\n  exports[\"parallelAff\"] = parallelAff;\n  exports[\"functorFiber\"] = functorFiber;\n  exports[\"makeAff\"] = $foreign.makeAff;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Effect.Aff.Class\"] = $PS[\"Effect.Aff.Class\"] || {};\n  var exports = $PS[\"Effect.Aff.Class\"];\n  var Control_Category = $PS[\"Control.Category\"];\n  var Effect_Aff = $PS[\"Effect.Aff\"];                \n  var monadAffAff = {\n      liftAff: Control_Category.identity(Control_Category.categoryFn),\n      MonadEffect0: function () {\n          return Effect_Aff.monadEffectAff;\n      }\n  };\n  exports[\"monadAffAff\"] = monadAffAff;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Exists\"] = $PS[\"Data.Exists\"] || {};\n  var exports = $PS[\"Data.Exists\"];\n  var Unsafe_Coerce = $PS[\"Unsafe.Coerce\"];                \n  var runExists = Unsafe_Coerce.unsafeCoerce;\n  var mkExists = Unsafe_Coerce.unsafeCoerce;\n  exports[\"mkExists\"] = mkExists;\n  exports[\"runExists\"] = runExists;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Coyoneda\"] = $PS[\"Data.Coyoneda\"] || {};\n  var exports = $PS[\"Data.Coyoneda\"];\n  var Control_Category = $PS[\"Control.Category\"];\n  var Data_Exists = $PS[\"Data.Exists\"];                          \n  var CoyonedaF = (function () {\n      function CoyonedaF(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      CoyonedaF.create = function (value0) {\n          return function (value1) {\n              return new CoyonedaF(value0, value1);\n          };\n      };\n      return CoyonedaF;\n  })();\n  var Coyoneda = function (x) {\n      return x;\n  };\n  var unCoyoneda = function (f) {\n      return function (v) {\n          return Data_Exists.runExists(function (v1) {\n              return f(v1.value0)(v1.value1);\n          })(v);\n      };\n  };\n  var coyoneda = function (k) {\n      return function (fi) {\n          return Coyoneda(Data_Exists.mkExists(new CoyonedaF(k, fi)));\n      };\n  };\n  var functorCoyoneda = {\n      map: function (f) {\n          return function (v) {\n              return Data_Exists.runExists(function (v1) {\n                  return coyoneda(function ($84) {\n                      return f(v1.value0($84));\n                  })(v1.value1);\n              })(v);\n          };\n      }\n  };\n  var liftCoyoneda = coyoneda(Control_Category.identity(Control_Category.categoryFn));\n  exports[\"unCoyoneda\"] = unCoyoneda;\n  exports[\"liftCoyoneda\"] = liftCoyoneda;\n  exports[\"functorCoyoneda\"] = functorCoyoneda;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.Query.Input\"] = $PS[\"Halogen.Query.Input\"] || {};\n  var exports = $PS[\"Halogen.Query.Input\"];\n  var RefUpdate = (function () {\n      function RefUpdate(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      RefUpdate.create = function (value0) {\n          return function (value1) {\n              return new RefUpdate(value0, value1);\n          };\n      };\n      return RefUpdate;\n  })();\n  var Action = (function () {\n      function Action(value0) {\n          this.value0 = value0;\n      };\n      Action.create = function (value0) {\n          return new Action(value0);\n      };\n      return Action;\n  })();\n  var functorInput = {\n      map: function (f) {\n          return function (m) {\n              if (m instanceof RefUpdate) {\n                  return new RefUpdate(m.value0, m.value1);\n              };\n              if (m instanceof Action) {\n                  return new Action(f(m.value0));\n              };\n              throw new Error(\"Failed pattern match at Halogen.Query.Input (line 19, column 1 - line 19, column 46): \" + [ m.constructor.name ]);\n          };\n      }\n  };\n  exports[\"RefUpdate\"] = RefUpdate;\n  exports[\"Action\"] = Action;\n  exports[\"functorInput\"] = functorInput;\n})(PS);\n(function(exports) {\n  /* eslint-disable no-eq-null, eqeqeq */\n\n  \"use strict\";\n\n  exports[\"null\"] = null;\n\n  exports.nullable = function (a, r, f) {\n    return a == null ? r : f(a);\n  };\n\n  exports.notNull = function (x) {\n    return x;\n  };\n})(PS[\"Data.Nullable\"] = PS[\"Data.Nullable\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Data.Nullable\"] = $PS[\"Data.Nullable\"] || {};\n  var exports = $PS[\"Data.Nullable\"];\n  var $foreign = $PS[\"Data.Nullable\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];              \n  var toNullable = Data_Maybe.maybe($foreign[\"null\"])($foreign.notNull);\n  var toMaybe = function (n) {\n      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);\n  };\n  exports[\"toMaybe\"] = toMaybe;\n  exports[\"toNullable\"] = toNullable;\n  exports[\"null\"] = $foreign[\"null\"];\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  exports.typeOf = function (value) {\n    return typeof value;\n  };\n})(PS[\"Foreign\"] = PS[\"Foreign\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Foreign\"] = $PS[\"Foreign\"] || {};\n  var exports = $PS[\"Foreign\"];\n  var $foreign = $PS[\"Foreign\"];\n  exports[\"typeOf\"] = $foreign.typeOf;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  exports._lookup = function (no, yes, k, m) {\n    return k in m ? yes(m[k]) : no;\n  };\n})(PS[\"Foreign.Object\"] = PS[\"Foreign.Object\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Foreign.Object\"] = $PS[\"Foreign.Object\"] || {};\n  var exports = $PS[\"Foreign.Object\"];\n  var $foreign = $PS[\"Foreign.Object\"];\n  var Data_Function_Uncurried = $PS[\"Data.Function.Uncurried\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var lookup = Data_Function_Uncurried.runFn4($foreign[\"_lookup\"])(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);\n  exports[\"lookup\"] = lookup;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.VDom.Machine\"] = $PS[\"Halogen.VDom.Machine\"] || {};\n  var exports = $PS[\"Halogen.VDom.Machine\"];\n  var Unsafe_Coerce = $PS[\"Unsafe.Coerce\"];                \n  var Step = (function () {\n      function Step(value0, value1, value2, value3) {\n          this.value0 = value0;\n          this.value1 = value1;\n          this.value2 = value2;\n          this.value3 = value3;\n      };\n      Step.create = function (value0) {\n          return function (value1) {\n              return function (value2) {\n                  return function (value3) {\n                      return new Step(value0, value1, value2, value3);\n                  };\n              };\n          };\n      };\n      return Step;\n  })();\n  var unStep = Unsafe_Coerce.unsafeCoerce;\n  var step = function (v, a) {\n      return v.value2(v.value1, a);\n  };\n  var mkStep = Unsafe_Coerce.unsafeCoerce;\n  var halt = function (v) {\n      return v.value3(v.value1);\n  };\n  var extract = unStep(function (v) {\n      return v.value0;\n  });\n  exports[\"Step\"] = Step;\n  exports[\"mkStep\"] = mkStep;\n  exports[\"unStep\"] = unStep;\n  exports[\"extract\"] = extract;\n  exports[\"step\"] = step;\n  exports[\"halt\"] = halt;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  exports.unsafeGetAny = function (key, obj) {\n    return obj[key];\n  };\n\n  exports.unsafeHasAny = function (key, obj) {\n    return obj.hasOwnProperty(key);\n  };\n\n  exports.unsafeSetAny = function (key, val, obj) {\n      obj[key] = val;\n  };\n\n  exports.forE = function (a, f) {\n    var b = [];\n    for (var i = 0; i < a.length; i++) {\n      b.push(f(i, a[i]));\n    }\n    return b;\n  };\n\n  exports.forEachE = function (a, f) {\n    for (var i = 0; i < a.length; i++) {\n      f(a[i]);\n    }\n  };\n\n  exports.forInE = function (o, f) {\n    var ks = Object.keys(o);\n    for (var i = 0; i < ks.length; i++) {\n      var k = ks[i];\n      f(k, o[k]);\n    }\n  };\n\n  exports.diffWithIxE = function (a1, a2, f1, f2, f3) {\n    var a3 = [];\n    var l1 = a1.length;\n    var l2 = a2.length;\n    var i  = 0;\n    while (1) {\n      if (i < l1) {\n        if (i < l2) {\n          a3.push(f1(i, a1[i], a2[i]));\n        } else {\n          f2(i, a1[i]);\n        }\n      } else if (i < l2) {\n        a3.push(f3(i, a2[i]));\n      } else {\n        break;\n      }\n      i++;\n    }\n    return a3;\n  };\n\n  exports.strMapWithIxE = function (as, fk, f) {\n    var o = {};\n    for (var i = 0; i < as.length; i++) {\n      var a = as[i];\n      var k = fk(a);\n      o[k] = f(k, i, a);\n    }\n    return o;\n  };\n\n  exports.diffWithKeyAndIxE = function (o1, as, fk, f1, f2, f3) {\n    var o2 = {};\n    for (var i = 0; i < as.length; i++) {\n      var a = as[i];\n      var k = fk(a);\n      if (o1.hasOwnProperty(k)) {\n        o2[k] = f1(k, i, o1[k], a);\n      } else {\n        o2[k] = f3(k, i, a);\n      }\n    }\n    for (var k in o1) {\n      if (k in o2) {\n        continue;\n      }\n      f2(k, o1[k]);\n    }\n    return o2;\n  };\n\n  exports.refEq = function (a, b) {\n    return a === b;\n  };\n\n  exports.createTextNode = function (s, doc) {\n    return doc.createTextNode(s);\n  };\n\n  exports.setTextContent = function (s, n) {\n    n.textContent = s;\n  };\n\n  exports.createElement = function (ns, name, doc) {\n    if (ns != null) {\n      return doc.createElementNS(ns, name);\n    } else {\n      return doc.createElement(name)\n    }\n  };\n\n  exports.insertChildIx = function (i, a, b) {\n    var n = b.childNodes.item(i) || null;\n    if (n !== a) {\n      b.insertBefore(a, n);\n    }\n  };\n\n  exports.removeChild = function (a, b) {\n    if (b && a.parentNode === b) {\n      b.removeChild(a);\n    }\n  };\n\n  exports.parentNode = function (a) {\n    return a.parentNode;\n  };\n\n  exports.setAttribute = function (ns, attr, val, el) {\n    if (ns != null) {\n      el.setAttributeNS(ns, attr, val);\n    } else {\n      el.setAttribute(attr, val);\n    }\n  };\n\n  exports.removeAttribute = function (ns, attr, el) {\n    if (ns != null) {\n      el.removeAttributeNS(ns, attr);\n    } else {\n      el.removeAttribute(attr);\n    }\n  };\n\n  exports.hasAttribute = function (ns, attr, el) {\n    if (ns != null) {\n      return el.hasAttributeNS(ns, attr);\n    } else {\n      return el.hasAttribute(attr);\n    }\n  };\n\n  exports.addEventListener = function (ev, listener, el) {\n    el.addEventListener(ev, listener, false);\n  };\n\n  exports.removeEventListener = function (ev, listener, el) {\n    el.removeEventListener(ev, listener, false);\n  };\n\n  exports.jsUndefined = void 0;\n})(PS[\"Halogen.VDom.Util\"] = PS[\"Halogen.VDom.Util\"] || {});\n(function(exports) {\n  \"use strict\";\n\n  exports[\"new\"] = function () {\n    return {};\n  };\n})(PS[\"Foreign.Object.ST\"] = PS[\"Foreign.Object.ST\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Foreign.Object.ST\"] = $PS[\"Foreign.Object.ST\"] || {};\n  var exports = $PS[\"Foreign.Object.ST\"];\n  var $foreign = $PS[\"Foreign.Object.ST\"];\n  exports[\"new\"] = $foreign[\"new\"];\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.VDom.Util\"] = $PS[\"Halogen.VDom.Util\"] || {};\n  var exports = $PS[\"Halogen.VDom.Util\"];\n  var $foreign = $PS[\"Halogen.VDom.Util\"];\n  var Foreign_Object_ST = $PS[\"Foreign.Object.ST\"];\n  var Unsafe_Coerce = $PS[\"Unsafe.Coerce\"];                \n  var unsafeLookup = $foreign.unsafeGetAny;\n  var unsafeFreeze = Unsafe_Coerce.unsafeCoerce;\n  var pokeMutMap = $foreign.unsafeSetAny;\n  var newMutMap = Foreign_Object_ST[\"new\"];\n  exports[\"newMutMap\"] = newMutMap;\n  exports[\"pokeMutMap\"] = pokeMutMap;\n  exports[\"unsafeFreeze\"] = unsafeFreeze;\n  exports[\"unsafeLookup\"] = unsafeLookup;\n  exports[\"unsafeGetAny\"] = $foreign.unsafeGetAny;\n  exports[\"unsafeHasAny\"] = $foreign.unsafeHasAny;\n  exports[\"unsafeSetAny\"] = $foreign.unsafeSetAny;\n  exports[\"forE\"] = $foreign.forE;\n  exports[\"forEachE\"] = $foreign.forEachE;\n  exports[\"forInE\"] = $foreign.forInE;\n  exports[\"diffWithIxE\"] = $foreign.diffWithIxE;\n  exports[\"diffWithKeyAndIxE\"] = $foreign.diffWithKeyAndIxE;\n  exports[\"strMapWithIxE\"] = $foreign.strMapWithIxE;\n  exports[\"refEq\"] = $foreign.refEq;\n  exports[\"createTextNode\"] = $foreign.createTextNode;\n  exports[\"setTextContent\"] = $foreign.setTextContent;\n  exports[\"createElement\"] = $foreign.createElement;\n  exports[\"insertChildIx\"] = $foreign.insertChildIx;\n  exports[\"removeChild\"] = $foreign.removeChild;\n  exports[\"parentNode\"] = $foreign.parentNode;\n  exports[\"setAttribute\"] = $foreign.setAttribute;\n  exports[\"removeAttribute\"] = $foreign.removeAttribute;\n  exports[\"hasAttribute\"] = $foreign.hasAttribute;\n  exports[\"addEventListener\"] = $foreign.addEventListener;\n  exports[\"removeEventListener\"] = $foreign.removeEventListener;\n  exports[\"jsUndefined\"] = $foreign.jsUndefined;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  exports.eventListener = function (fn) {\n    return function () {\n      return function (event) {\n        return fn(event)();\n      };\n    };\n  };\n\n  exports.addEventListener = function (type) {\n    return function (listener) {\n      return function (useCapture) {\n        return function (target) {\n          return function () {\n            return target.addEventListener(type, listener, useCapture);\n          };\n        };\n      };\n    };\n  };\n\n  exports.removeEventListener = function (type) {\n    return function (listener) {\n      return function (useCapture) {\n        return function (target) {\n          return function () {\n            return target.removeEventListener(type, listener, useCapture);\n          };\n        };\n      };\n    };\n  };\n})(PS[\"Web.Event.EventTarget\"] = PS[\"Web.Event.EventTarget\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Web.Event.EventTarget\"] = $PS[\"Web.Event.EventTarget\"] || {};\n  var exports = $PS[\"Web.Event.EventTarget\"];\n  var $foreign = $PS[\"Web.Event.EventTarget\"];\n  exports[\"eventListener\"] = $foreign.eventListener;\n  exports[\"addEventListener\"] = $foreign.addEventListener;\n  exports[\"removeEventListener\"] = $foreign.removeEventListener;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.VDom.DOM.Prop\"] = $PS[\"Halogen.VDom.DOM.Prop\"] || {};\n  var exports = $PS[\"Halogen.VDom.DOM.Prop\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Data_Nullable = $PS[\"Data.Nullable\"];\n  var Data_Tuple = $PS[\"Data.Tuple\"];\n  var Data_Unit = $PS[\"Data.Unit\"];\n  var Effect_Ref = $PS[\"Effect.Ref\"];\n  var Foreign = $PS[\"Foreign\"];\n  var Foreign_Object = $PS[\"Foreign.Object\"];\n  var Halogen_VDom_Machine = $PS[\"Halogen.VDom.Machine\"];\n  var Halogen_VDom_Util = $PS[\"Halogen.VDom.Util\"];\n  var Unsafe_Coerce = $PS[\"Unsafe.Coerce\"];\n  var Web_Event_EventTarget = $PS[\"Web.Event.EventTarget\"];                \n  var Created = (function () {\n      function Created(value0) {\n          this.value0 = value0;\n      };\n      Created.create = function (value0) {\n          return new Created(value0);\n      };\n      return Created;\n  })();\n  var Removed = (function () {\n      function Removed(value0) {\n          this.value0 = value0;\n      };\n      Removed.create = function (value0) {\n          return new Removed(value0);\n      };\n      return Removed;\n  })();\n  var Attribute = (function () {\n      function Attribute(value0, value1, value2) {\n          this.value0 = value0;\n          this.value1 = value1;\n          this.value2 = value2;\n      };\n      Attribute.create = function (value0) {\n          return function (value1) {\n              return function (value2) {\n                  return new Attribute(value0, value1, value2);\n              };\n          };\n      };\n      return Attribute;\n  })();\n  var Property = (function () {\n      function Property(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      Property.create = function (value0) {\n          return function (value1) {\n              return new Property(value0, value1);\n          };\n      };\n      return Property;\n  })();\n  var Handler = (function () {\n      function Handler(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      Handler.create = function (value0) {\n          return function (value1) {\n              return new Handler(value0, value1);\n          };\n      };\n      return Handler;\n  })();\n  var Ref = (function () {\n      function Ref(value0) {\n          this.value0 = value0;\n      };\n      Ref.create = function (value0) {\n          return new Ref(value0);\n      };\n      return Ref;\n  })();\n  var unsafeGetProperty = Halogen_VDom_Util.unsafeGetAny;\n  var setProperty = Halogen_VDom_Util.unsafeSetAny;\n  var removeProperty = function (key, el) {\n      var v = Halogen_VDom_Util.hasAttribute(Data_Nullable[\"null\"], key, el);\n      if (v) {\n          return Halogen_VDom_Util.removeAttribute(Data_Nullable[\"null\"], key, el);\n      };\n      var v1 = Foreign.typeOf(Halogen_VDom_Util.unsafeGetAny(key, el));\n      if (v1 === \"string\") {\n          return Halogen_VDom_Util.unsafeSetAny(key, \"\", el);\n      };\n      if (key === \"rowSpan\") {\n          return Halogen_VDom_Util.unsafeSetAny(key, 1, el);\n      };\n      if (key === \"colSpan\") {\n          return Halogen_VDom_Util.unsafeSetAny(key, 1, el);\n      };\n      return Halogen_VDom_Util.unsafeSetAny(key, Halogen_VDom_Util.jsUndefined, el);\n  };\n  var propToStrKey = function (v) {\n      if (v instanceof Attribute && v.value0 instanceof Data_Maybe.Just) {\n          return \"attr/\" + (v.value0.value0 + (\":\" + v.value1));\n      };\n      if (v instanceof Attribute) {\n          return \"attr/:\" + v.value1;\n      };\n      if (v instanceof Property) {\n          return \"prop/\" + v.value0;\n      };\n      if (v instanceof Handler) {\n          return \"handler/\" + v.value0;\n      };\n      if (v instanceof Ref) {\n          return \"ref\";\n      };\n      throw new Error(\"Failed pattern match at Halogen.VDom.DOM.Prop (line 182, column 16 - line 187, column 16): \" + [ v.constructor.name ]);\n  };\n  var propFromString = Unsafe_Coerce.unsafeCoerce; \n  var functorProp = {\n      map: function (v) {\n          return function (v1) {\n              if (v1 instanceof Handler) {\n                  return new Handler(v1.value0, Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(v))(v1.value1));\n              };\n              if (v1 instanceof Ref) {\n                  return new Ref(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(v))(v1.value0));\n              };\n              return v1;\n          };\n      }\n  };\n  var buildProp = function (emit) {\n      return function (el) {\n          var removeProp = function (prevEvents) {\n              return function (v, v1) {\n                  if (v1 instanceof Attribute) {\n                      return Halogen_VDom_Util.removeAttribute(Data_Nullable.toNullable(v1.value0), v1.value1, el);\n                  };\n                  if (v1 instanceof Property) {\n                      return removeProperty(v1.value0, el);\n                  };\n                  if (v1 instanceof Handler) {\n                      var handler = Halogen_VDom_Util.unsafeLookup(v1.value0, prevEvents);\n                      return Halogen_VDom_Util.removeEventListener(v1.value0, Data_Tuple.fst(handler), el);\n                  };\n                  if (v1 instanceof Ref) {\n                      return Data_Unit.unit;\n                  };\n                  throw new Error(\"Failed pattern match at Halogen.VDom.DOM.Prop (line 169, column 5 - line 179, column 18): \" + [ v1.constructor.name ]);\n              };\n          };\n          var mbEmit = function (v) {\n              if (v instanceof Data_Maybe.Just) {\n                  return emit(v.value0)();\n              };\n              return Data_Unit.unit;\n          };\n          var haltProp = function (state) {\n              var v = Foreign_Object.lookup(\"ref\")(state.props);\n              if (v instanceof Data_Maybe.Just && v.value0 instanceof Ref) {\n                  return mbEmit(v.value0.value0(new Removed(el)));\n              };\n              return Data_Unit.unit;\n          };\n          var diffProp = function (prevEvents, events) {\n              return function (v, v1, v11, v2) {\n                  if (v11 instanceof Attribute && v2 instanceof Attribute) {\n                      var $57 = v11.value2 === v2.value2;\n                      if ($57) {\n                          return v2;\n                      };\n                      Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);\n                      return v2;\n                  };\n                  if (v11 instanceof Property && v2 instanceof Property) {\n                      var v4 = Halogen_VDom_Util.refEq(v11.value1, v2.value1);\n                      if (v4) {\n                          return v2;\n                      };\n                      if (v2.value0 === \"value\") {\n                          var elVal = unsafeGetProperty(\"value\", el);\n                          var $66 = Halogen_VDom_Util.refEq(elVal, v2.value1);\n                          if ($66) {\n                              return v2;\n                          };\n                          setProperty(v2.value0, v2.value1, el);\n                          return v2;\n                      };\n                      setProperty(v2.value0, v2.value1, el);\n                      return v2;\n                  };\n                  if (v11 instanceof Handler && v2 instanceof Handler) {\n                      var handler = Halogen_VDom_Util.unsafeLookup(v2.value0, prevEvents);\n                      Effect_Ref.write(v2.value1)(Data_Tuple.snd(handler))();\n                      Halogen_VDom_Util.pokeMutMap(v2.value0, handler, events);\n                      return v2;\n                  };\n                  return v2;\n              };\n          };\n          var applyProp = function (events) {\n              return function (v, v1, v2) {\n                  if (v2 instanceof Attribute) {\n                      Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);\n                      return v2;\n                  };\n                  if (v2 instanceof Property) {\n                      setProperty(v2.value0, v2.value1, el);\n                      return v2;\n                  };\n                  if (v2 instanceof Handler) {\n                      var v3 = Halogen_VDom_Util.unsafeGetAny(v2.value0, events);\n                      if (Halogen_VDom_Util.unsafeHasAny(v2.value0, events)) {\n                          Effect_Ref.write(v2.value1)(Data_Tuple.snd(v3))();\n                          return v2;\n                      };\n                      var ref = Effect_Ref[\"new\"](v2.value1)();\n                      var listener = Web_Event_EventTarget.eventListener(function (ev) {\n                          return function __do() {\n                              var f$prime = Effect_Ref.read(ref)();\n                              return mbEmit(f$prime(ev));\n                          };\n                      })();\n                      Halogen_VDom_Util.pokeMutMap(v2.value0, new Data_Tuple.Tuple(listener, ref), events);\n                      Halogen_VDom_Util.addEventListener(v2.value0, listener, el);\n                      return v2;\n                  };\n                  if (v2 instanceof Ref) {\n                      mbEmit(v2.value0(new Created(el)));\n                      return v2;\n                  };\n                  throw new Error(\"Failed pattern match at Halogen.VDom.DOM.Prop (line 113, column 5 - line 135, column 15): \" + [ v2.constructor.name ]);\n              };\n          };\n          var patchProp = function (state, ps2) {\n              var events = Halogen_VDom_Util.newMutMap();\n              var onThis = removeProp(state.events);\n              var onThese = diffProp(state.events, events);\n              var onThat = applyProp(events);\n              var props = Halogen_VDom_Util.diffWithKeyAndIxE(state.props, ps2, propToStrKey, onThese, onThis, onThat);\n              var nextState = {\n                  events: Halogen_VDom_Util.unsafeFreeze(events),\n                  props: props\n              };\n              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, nextState, patchProp, haltProp));\n          };\n          var renderProp = function (ps1) {\n              var events = Halogen_VDom_Util.newMutMap();\n              var ps1$prime = Halogen_VDom_Util.strMapWithIxE(ps1, propToStrKey, applyProp(events));\n              var state = {\n                  events: Halogen_VDom_Util.unsafeFreeze(events),\n                  props: ps1$prime\n              };\n              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, state, patchProp, haltProp));\n          };\n          return renderProp;\n      };\n  };\n  exports[\"Attribute\"] = Attribute;\n  exports[\"Property\"] = Property;\n  exports[\"Handler\"] = Handler;\n  exports[\"propFromString\"] = propFromString;\n  exports[\"buildProp\"] = buildProp;\n  exports[\"functorProp\"] = functorProp;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.VDom.Types\"] = $PS[\"Halogen.VDom.Types\"] || {};\n  var exports = $PS[\"Halogen.VDom.Types\"];\n  var Data_Bifunctor = $PS[\"Data.Bifunctor\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Data_Tuple = $PS[\"Data.Tuple\"];\n  var Unsafe_Coerce = $PS[\"Unsafe.Coerce\"];\n  var Text = (function () {\n      function Text(value0) {\n          this.value0 = value0;\n      };\n      Text.create = function (value0) {\n          return new Text(value0);\n      };\n      return Text;\n  })();\n  var Elem = (function () {\n      function Elem(value0, value1, value2, value3) {\n          this.value0 = value0;\n          this.value1 = value1;\n          this.value2 = value2;\n          this.value3 = value3;\n      };\n      Elem.create = function (value0) {\n          return function (value1) {\n              return function (value2) {\n                  return function (value3) {\n                      return new Elem(value0, value1, value2, value3);\n                  };\n              };\n          };\n      };\n      return Elem;\n  })();\n  var Keyed = (function () {\n      function Keyed(value0, value1, value2, value3) {\n          this.value0 = value0;\n          this.value1 = value1;\n          this.value2 = value2;\n          this.value3 = value3;\n      };\n      Keyed.create = function (value0) {\n          return function (value1) {\n              return function (value2) {\n                  return function (value3) {\n                      return new Keyed(value0, value1, value2, value3);\n                  };\n              };\n          };\n      };\n      return Keyed;\n  })();\n  var Widget = (function () {\n      function Widget(value0) {\n          this.value0 = value0;\n      };\n      Widget.create = function (value0) {\n          return new Widget(value0);\n      };\n      return Widget;\n  })();\n  var Grafted = (function () {\n      function Grafted(value0) {\n          this.value0 = value0;\n      };\n      Grafted.create = function (value0) {\n          return new Grafted(value0);\n      };\n      return Grafted;\n  })();\n  var Graft = (function () {\n      function Graft(value0, value1, value2) {\n          this.value0 = value0;\n          this.value1 = value1;\n          this.value2 = value2;\n      };\n      Graft.create = function (value0) {\n          return function (value1) {\n              return function (value2) {\n                  return new Graft(value0, value1, value2);\n              };\n          };\n      };\n      return Graft;\n  })();\n  var unGraft = function (f) {\n      return function ($55) {\n          return f($55);\n      };\n  };\n  var graft = Unsafe_Coerce.unsafeCoerce;\n  var bifunctorGraft = {\n      bimap: function (f) {\n          return function (g) {\n              return unGraft(function (v) {\n                  return graft(new Graft(function ($57) {\n                      return f(v.value0($57));\n                  }, function ($58) {\n                      return g(v.value1($58));\n                  }, v.value2));\n              });\n          };\n      }\n  };\n  var bifunctorVDom = {\n      bimap: function (v) {\n          return function (v1) {\n              return function (v2) {\n                  if (v2 instanceof Text) {\n                      return new Text(v2.value0);\n                  };\n                  if (v2 instanceof Grafted) {\n                      return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(v)(v1)(v2.value0));\n                  };\n                  return new Grafted(graft(new Graft(v, v1, v2)));\n              };\n          };\n      }\n  };\n  var runGraft = unGraft(function (v) {\n      var go = function (v2) {\n          if (v2 instanceof Text) {\n              return new Text(v2.value0);\n          };\n          if (v2 instanceof Elem) {\n              return new Elem(v2.value0, v2.value1, v.value0(v2.value2), Data_Functor.map(Data_Functor.functorArray)(go)(v2.value3));\n          };\n          if (v2 instanceof Keyed) {\n              return new Keyed(v2.value0, v2.value1, v.value0(v2.value2), Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(go))(v2.value3));\n          };\n          if (v2 instanceof Widget) {\n              return new Widget(v.value1(v2.value0));\n          };\n          if (v2 instanceof Grafted) {\n              return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(v.value0)(v.value1)(v2.value0));\n          };\n          throw new Error(\"Failed pattern match at Halogen.VDom.Types (line 86, column 7 - line 86, column 27): \" + [ v2.constructor.name ]);\n      };\n      return go(v.value2);\n  });\n  exports[\"Text\"] = Text;\n  exports[\"Elem\"] = Elem;\n  exports[\"Keyed\"] = Keyed;\n  exports[\"Widget\"] = Widget;\n  exports[\"Grafted\"] = Grafted;\n  exports[\"runGraft\"] = runGraft;\n  exports[\"bifunctorVDom\"] = bifunctorVDom;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.HTML.Core\"] = $PS[\"Halogen.HTML.Core\"] || {};\n  var exports = $PS[\"Halogen.HTML.Core\"];\n  var Data_Bifunctor = $PS[\"Data.Bifunctor\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Halogen_Query_Input = $PS[\"Halogen.Query.Input\"];\n  var Halogen_VDom_DOM_Prop = $PS[\"Halogen.VDom.DOM.Prop\"];\n  var Halogen_VDom_Types = $PS[\"Halogen.VDom.Types\"];          \n  var HTML = function (x) {\n      return x;\n  };\n  var widget = function ($19) {\n      return HTML(Halogen_VDom_Types.Widget.create($19));\n  };\n  var toPropValue = function (dict) {\n      return dict.toPropValue;\n  };\n  var text = function ($20) {\n      return HTML(Halogen_VDom_Types.Text.create($20));\n  };\n  var prop = function (dictIsProp) {\n      return function (v) {\n          var $22 = Halogen_VDom_DOM_Prop.Property.create(v);\n          var $23 = toPropValue(dictIsProp);\n          return function ($24) {\n              return $22($23($24));\n          };\n      };\n  };\n  var isPropString = {\n      toPropValue: Halogen_VDom_DOM_Prop.propFromString\n  };\n  var handler = Halogen_VDom_DOM_Prop.Handler.create;\n  var element = function (ns) {\n      return function (name) {\n          return function (props) {\n              return function (children) {\n                  return new Halogen_VDom_Types.Elem(ns, name, props, children);\n              };\n          };\n      };\n  };\n  var bifunctorHTML = {\n      bimap: function (f) {\n          return function (g) {\n              return function (v) {\n                  return Data_Bifunctor.bimap(Halogen_VDom_Types.bifunctorVDom)(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp)(Data_Functor.map(Halogen_Query_Input.functorInput)(g))))(f)(v);\n              };\n          };\n      }\n  };\n  var attr = function (ns) {\n      return function (v) {\n          return Halogen_VDom_DOM_Prop.Attribute.create(ns)(v);\n      };\n  };\n  exports[\"widget\"] = widget;\n  exports[\"text\"] = text;\n  exports[\"element\"] = element;\n  exports[\"prop\"] = prop;\n  exports[\"attr\"] = attr;\n  exports[\"handler\"] = handler;\n  exports[\"bifunctorHTML\"] = bifunctorHTML;\n  exports[\"isPropString\"] = isPropString;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.Query.HalogenQ\"] = $PS[\"Halogen.Query.HalogenQ\"] || {};\n  var exports = $PS[\"Halogen.Query.HalogenQ\"];           \n  var Initialize = (function () {\n      function Initialize(value0) {\n          this.value0 = value0;\n      };\n      Initialize.create = function (value0) {\n          return new Initialize(value0);\n      };\n      return Initialize;\n  })();\n  var Finalize = (function () {\n      function Finalize(value0) {\n          this.value0 = value0;\n      };\n      Finalize.create = function (value0) {\n          return new Finalize(value0);\n      };\n      return Finalize;\n  })();\n  var Receive = (function () {\n      function Receive(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      Receive.create = function (value0) {\n          return function (value1) {\n              return new Receive(value0, value1);\n          };\n      };\n      return Receive;\n  })();\n  var Action = (function () {\n      function Action(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      Action.create = function (value0) {\n          return function (value1) {\n              return new Action(value0, value1);\n          };\n      };\n      return Action;\n  })();\n  var Query = (function () {\n      function Query(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      Query.create = function (value0) {\n          return function (value1) {\n              return new Query(value0, value1);\n          };\n      };\n      return Query;\n  })();\n  exports[\"Initialize\"] = Initialize;\n  exports[\"Finalize\"] = Finalize;\n  exports[\"Receive\"] = Receive;\n  exports[\"Action\"] = Action;\n  exports[\"Query\"] = Query;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Web.DOM.Element\"] = $PS[\"Web.DOM.Element\"] || {};\n  var exports = $PS[\"Web.DOM.Element\"];\n  var Unsafe_Coerce = $PS[\"Unsafe.Coerce\"];                   \n  var toNode = Unsafe_Coerce.unsafeCoerce;\n  exports[\"toNode\"] = toNode;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.VDom.DOM\"] = $PS[\"Halogen.VDom.DOM\"] || {};\n  var exports = $PS[\"Halogen.VDom.DOM\"];\n  var Data_Array = $PS[\"Data.Array\"];\n  var Data_Boolean = $PS[\"Data.Boolean\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Data_Nullable = $PS[\"Data.Nullable\"];\n  var Data_Tuple = $PS[\"Data.Tuple\"];\n  var Halogen_VDom_Machine = $PS[\"Halogen.VDom.Machine\"];\n  var Halogen_VDom_Types = $PS[\"Halogen.VDom.Types\"];\n  var Halogen_VDom_Util = $PS[\"Halogen.VDom.Util\"];\n  var Web_DOM_Element = $PS[\"Web.DOM.Element\"];\n  var haltWidget = function (v) {\n      return Halogen_VDom_Machine.halt(v.widget);\n  };\n  var patchWidget = function (state, vdom) {\n      if (vdom instanceof Halogen_VDom_Types.Grafted) {\n          return patchWidget(state, Halogen_VDom_Types.runGraft(vdom.value0));\n      };\n      if (vdom instanceof Halogen_VDom_Types.Widget) {\n          var res = Halogen_VDom_Machine.step(state.widget, vdom.value0);\n          var res$prime = Halogen_VDom_Machine.unStep(function (v) {\n              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v.value0, {\n                  build: state.build,\n                  widget: res\n              }, patchWidget, haltWidget));\n          })(res);\n          return res$prime;\n      };\n      haltWidget(state);\n      return state.build(vdom);\n  };\n  var haltText = function (v) {\n      var parent = Halogen_VDom_Util.parentNode(v.node);\n      return Halogen_VDom_Util.removeChild(v.node, parent);\n  };\n  var patchText = function (state, vdom) {\n      if (vdom instanceof Halogen_VDom_Types.Grafted) {\n          return patchText(state, Halogen_VDom_Types.runGraft(vdom.value0));\n      };\n      if (vdom instanceof Halogen_VDom_Types.Text) {\n          if (state.value === vdom.value0) {\n              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, state, patchText, haltText));\n          };\n          if (Data_Boolean.otherwise) {\n              var nextState = {\n                  build: state.build,\n                  node: state.node,\n                  value: vdom.value0\n              };\n              Halogen_VDom_Util.setTextContent(vdom.value0, state.node);\n              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchText, haltText));\n          };\n      };\n      haltText(state);\n      return state.build(vdom);\n  };\n  var haltKeyed = function (v) {\n      var parent = Halogen_VDom_Util.parentNode(v.node);\n      Halogen_VDom_Util.removeChild(v.node, parent);\n      Halogen_VDom_Util.forInE(v.children, function (v1, s) {\n          return Halogen_VDom_Machine.halt(s);\n      });\n      return Halogen_VDom_Machine.halt(v.attrs);\n  };\n  var haltElem = function (v) {\n      var parent = Halogen_VDom_Util.parentNode(v.node);\n      Halogen_VDom_Util.removeChild(v.node, parent);\n      Halogen_VDom_Util.forEachE(v.children, Halogen_VDom_Machine.halt);\n      return Halogen_VDom_Machine.halt(v.attrs);\n  };\n  var eqElemSpec = function (ns1, v, ns2, v1) {\n      var $58 = v === v1;\n      if ($58) {\n          if (ns1 instanceof Data_Maybe.Just && (ns2 instanceof Data_Maybe.Just && ns1.value0 === ns2.value0)) {\n              return true;\n          };\n          if (ns1 instanceof Data_Maybe.Nothing && ns2 instanceof Data_Maybe.Nothing) {\n              return true;\n          };\n          return false;\n      };\n      return false;\n  };\n  var patchElem = function (state, vdom) {\n      if (vdom instanceof Halogen_VDom_Types.Grafted) {\n          return patchElem(state, Halogen_VDom_Types.runGraft(vdom.value0));\n      };\n      if (vdom instanceof Halogen_VDom_Types.Elem && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {\n          var v = Data_Array.length(vdom.value3);\n          var v1 = Data_Array.length(state.children);\n          if (v1 === 0 && v === 0) {\n              var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);\n              var nextState = {\n                  build: state.build,\n                  node: state.node,\n                  attrs: attrs2,\n                  ns: vdom.value0,\n                  name: vdom.value1,\n                  children: state.children\n              };\n              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchElem, haltElem));\n          };\n          var onThis = function (v2, s) {\n              return Halogen_VDom_Machine.halt(s);\n          };\n          var onThese = function (ix, s, v2) {\n              var res = Halogen_VDom_Machine.step(s, v2);\n              Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);\n              return res;\n          };\n          var onThat = function (ix, v2) {\n              var res = state.build(v2);\n              Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);\n              return res;\n          };\n          var children2 = Halogen_VDom_Util.diffWithIxE(state.children, vdom.value3, onThese, onThis, onThat);\n          var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);\n          var nextState = {\n              build: state.build,\n              node: state.node,\n              attrs: attrs2,\n              ns: vdom.value0,\n              name: vdom.value1,\n              children: children2\n          };\n          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchElem, haltElem));\n      };\n      haltElem(state);\n      return state.build(vdom);\n  };\n  var patchKeyed = function (state, vdom) {\n      if (vdom instanceof Halogen_VDom_Types.Grafted) {\n          return patchKeyed(state, Halogen_VDom_Types.runGraft(vdom.value0));\n      };\n      if (vdom instanceof Halogen_VDom_Types.Keyed && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {\n          var v = Data_Array.length(vdom.value3);\n          if (state.length === 0 && v === 0) {\n              var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);\n              var nextState = {\n                  build: state.build,\n                  node: state.node,\n                  attrs: attrs2,\n                  ns: vdom.value0,\n                  name: vdom.value1,\n                  children: state.children,\n                  length: 0\n              };\n              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchKeyed, haltKeyed));\n          };\n          var onThis = function (v2, s) {\n              return Halogen_VDom_Machine.halt(s);\n          };\n          var onThese = function (v2, ix$prime, s, v3) {\n              var res = Halogen_VDom_Machine.step(s, v3.value1);\n              Halogen_VDom_Util.insertChildIx(ix$prime, Halogen_VDom_Machine.extract(res), state.node);\n              return res;\n          };\n          var onThat = function (v2, ix, v3) {\n              var res = state.build(v3.value1);\n              Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);\n              return res;\n          };\n          var children2 = Halogen_VDom_Util.diffWithKeyAndIxE(state.children, vdom.value3, Data_Tuple.fst, onThese, onThis, onThat);\n          var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);\n          var nextState = {\n              build: state.build,\n              node: state.node,\n              attrs: attrs2,\n              ns: vdom.value0,\n              name: vdom.value1,\n              children: children2,\n              length: v\n          };\n          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchKeyed, haltKeyed));\n      };\n      haltKeyed(state);\n      return state.build(vdom);\n  };\n  var buildWidget = function (v, build, w) {\n      var res = v.buildWidget(v)(w);\n      var res$prime = Halogen_VDom_Machine.unStep(function (v1) {\n          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v1.value0, {\n              build: build,\n              widget: res\n          }, patchWidget, haltWidget));\n      })(res);\n      return res$prime;\n  };\n  var buildText = function (v, build, s) {\n      var node = Halogen_VDom_Util.createTextNode(s, v.document);\n      var state = {\n          build: build,\n          node: node,\n          value: s\n      };\n      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchText, haltText));\n  };\n  var buildKeyed = function (v, build, ns1, name1, as1, ch1) {\n      var el = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);\n      var node = Web_DOM_Element.toNode(el);\n      var onChild = function (v1, ix, v2) {\n          var res = build(v2.value1);\n          Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), node);\n          return res;\n      };\n      var children = Halogen_VDom_Util.strMapWithIxE(ch1, Data_Tuple.fst, onChild);\n      var attrs = v.buildAttributes(el)(as1);\n      var state = {\n          build: build,\n          node: node,\n          attrs: attrs,\n          ns: ns1,\n          name: name1,\n          children: children,\n          length: Data_Array.length(ch1)\n      };\n      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchKeyed, haltKeyed));\n  };\n  var buildElem = function (v, build, ns1, name1, as1, ch1) {\n      var el = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);\n      var node = Web_DOM_Element.toNode(el);\n      var onChild = function (ix, child) {\n          var res = build(child);\n          Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), node);\n          return res;\n      };\n      var children = Halogen_VDom_Util.forE(ch1, onChild);\n      var attrs = v.buildAttributes(el)(as1);\n      var state = {\n          build: build,\n          node: node,\n          attrs: attrs,\n          ns: ns1,\n          name: name1,\n          children: children\n      };\n      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchElem, haltElem));\n  };\n  var buildVDom = function (spec) {\n      var build = function (v) {\n          if (v instanceof Halogen_VDom_Types.Text) {\n              return buildText(spec, build, v.value0);\n          };\n          if (v instanceof Halogen_VDom_Types.Elem) {\n              return buildElem(spec, build, v.value0, v.value1, v.value2, v.value3);\n          };\n          if (v instanceof Halogen_VDom_Types.Keyed) {\n              return buildKeyed(spec, build, v.value0, v.value1, v.value2, v.value3);\n          };\n          if (v instanceof Halogen_VDom_Types.Widget) {\n              return buildWidget(spec, build, v.value0);\n          };\n          if (v instanceof Halogen_VDom_Types.Grafted) {\n              return build(Halogen_VDom_Types.runGraft(v.value0));\n          };\n          throw new Error(\"Failed pattern match at Halogen.VDom.DOM (line 58, column 27 - line 63, column 52): \" + [ v.constructor.name ]);\n      };\n      return build;\n  };\n  exports[\"buildVDom\"] = buildVDom;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.VDom.Thunk\"] = $PS[\"Halogen.VDom.Thunk\"] || {};\n  var exports = $PS[\"Halogen.VDom.Thunk\"];\n  var Halogen_VDom_DOM = $PS[\"Halogen.VDom.DOM\"];\n  var Halogen_VDom_Machine = $PS[\"Halogen.VDom.Machine\"];\n  var Halogen_VDom_Util = $PS[\"Halogen.VDom.Util\"];        \n  var Thunk = (function () {\n      function Thunk(value0, value1, value2, value3) {\n          this.value0 = value0;\n          this.value1 = value1;\n          this.value2 = value2;\n          this.value3 = value3;\n      };\n      Thunk.create = function (value0) {\n          return function (value1) {\n              return function (value2) {\n                  return function (value3) {\n                      return new Thunk(value0, value1, value2, value3);\n                  };\n              };\n          };\n      };\n      return Thunk;\n  })();                                          \n  var unsafeEqThunk = function (v, v1) {\n      return Halogen_VDom_Util.refEq(v.value0, v1.value0) && (Halogen_VDom_Util.refEq(v.value1, v1.value1) && v.value1(v.value3, v1.value3));\n  };\n  var thunk = function (tid, eqFn, f, a) {\n      return new Thunk(tid, eqFn, f, a);\n  };\n  var runThunk = function (v) {\n      return v.value2(v.value3);\n  };\n  var mapThunk = function (k) {\n      return function (v) {\n          return new Thunk(v.value0, v.value1, function ($46) {\n              return k(v.value2($46));\n          }, v.value3);\n      };\n  };\n  var hoist = mapThunk;\n  var buildThunk = function (toVDom) {\n      var haltThunk = function (state) {\n          return Halogen_VDom_Machine.halt(state.vdom);\n      };\n      var patchThunk = function (state, t2) {\n          var $43 = unsafeEqThunk(state.thunk, t2);\n          if ($43) {\n              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(state.vdom), state, patchThunk, haltThunk));\n          };\n          var vdom = Halogen_VDom_Machine.step(state.vdom, toVDom(runThunk(t2)));\n          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(vdom), {\n              vdom: vdom,\n              thunk: t2\n          }, patchThunk, haltThunk));\n      };\n      var renderThunk = function (spec) {\n          return function (t) {\n              var vdom = Halogen_VDom_DOM.buildVDom(spec)(toVDom(runThunk(t)));\n              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(vdom), {\n                  thunk: t,\n                  vdom: vdom\n              }, patchThunk, haltThunk));\n          };\n      };\n      return renderThunk;\n  };\n  exports[\"buildThunk\"] = buildThunk;\n  exports[\"hoist\"] = hoist;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.Component\"] = $PS[\"Halogen.Component\"] || {};\n  var exports = $PS[\"Halogen.Component\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Data_Bifunctor = $PS[\"Data.Bifunctor\"];\n  var Data_Coyoneda = $PS[\"Data.Coyoneda\"];\n  var Data_Foldable = $PS[\"Data.Foldable\"];\n  var Data_Function = $PS[\"Data.Function\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Data_Unit = $PS[\"Data.Unit\"];\n  var Halogen_Data_Slot = $PS[\"Halogen.Data.Slot\"];\n  var Halogen_HTML_Core = $PS[\"Halogen.HTML.Core\"];\n  var Halogen_Query_HalogenM = $PS[\"Halogen.Query.HalogenM\"];\n  var Halogen_Query_HalogenQ = $PS[\"Halogen.Query.HalogenQ\"];\n  var Halogen_VDom_Thunk = $PS[\"Halogen.VDom.Thunk\"];\n  var Unsafe_Coerce = $PS[\"Unsafe.Coerce\"];                \n  var ComponentSlot = (function () {\n      function ComponentSlot(value0) {\n          this.value0 = value0;\n      };\n      ComponentSlot.create = function (value0) {\n          return new ComponentSlot(value0);\n      };\n      return ComponentSlot;\n  })();\n  var ThunkSlot = (function () {\n      function ThunkSlot(value0) {\n          this.value0 = value0;\n      };\n      ThunkSlot.create = function (value0) {\n          return new ThunkSlot(value0);\n      };\n      return ThunkSlot;\n  })();\n  var unComponentSlot = Unsafe_Coerce.unsafeCoerce;\n  var unComponent = Unsafe_Coerce.unsafeCoerce;\n  var mkEval = function (args) {\n      return function (v) {\n          if (v instanceof Halogen_Query_HalogenQ.Initialize) {\n              return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.initialize))(v.value0);\n          };\n          if (v instanceof Halogen_Query_HalogenQ.Finalize) {\n              return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.finalize))(v.value0);\n          };\n          if (v instanceof Halogen_Query_HalogenQ.Receive) {\n              return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.receive(v.value0)))(v.value1);\n          };\n          if (v instanceof Halogen_Query_HalogenQ.Action) {\n              return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(args.handleAction(v.value0))(v.value1);\n          };\n          if (v instanceof Halogen_Query_HalogenQ.Query) {\n              return Data_Coyoneda.unCoyoneda(function (g) {\n                  var $25 = Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Maybe.maybe(v.value1(Data_Unit.unit))(g));\n                  return function ($26) {\n                      return $25(args.handleQuery($26));\n                  };\n              })(v.value0);\n          };\n          throw new Error(\"Failed pattern match at Halogen.Component (line 182, column 15 - line 192, column 70): \" + [ v.constructor.name ]);\n      };\n  };\n  var mkComponentSlot = Unsafe_Coerce.unsafeCoerce;\n  var mkComponent = Unsafe_Coerce.unsafeCoerce;\n  var hoistSlot = function (dictFunctor) {\n      return function (nat) {\n          return function (v) {\n              if (v instanceof ComponentSlot) {\n                  return unComponentSlot(function (slot) {\n                      return ComponentSlot.create(mkComponentSlot({\n                          get: slot.get,\n                          pop: slot.pop,\n                          set: slot.set,\n                          component: hoist(dictFunctor)(nat)(slot.component),\n                          input: slot.input,\n                          output: slot.output\n                      }));\n                  })(v.value0);\n              };\n              if (v instanceof ThunkSlot) {\n                  return ThunkSlot.create(Halogen_VDom_Thunk.hoist(Data_Bifunctor.lmap(Halogen_HTML_Core.bifunctorHTML)(hoistSlot(dictFunctor)(nat)))(v.value0));\n              };\n              throw new Error(\"Failed pattern match at Halogen.Component (line 279, column 17 - line 284, column 53): \" + [ v.constructor.name ]);\n          };\n      };\n  };\n  var hoist = function (dictFunctor) {\n      return function (nat) {\n          return unComponent(function (c) {\n              return mkComponent({\n                  initialState: c.initialState,\n                  render: (function () {\n                      var $27 = Data_Bifunctor.lmap(Halogen_HTML_Core.bifunctorHTML)(hoistSlot(dictFunctor)(nat));\n                      return function ($28) {\n                          return $27(c.render($28));\n                      };\n                  })(),\n                  \"eval\": (function () {\n                      var $29 = Halogen_Query_HalogenM.hoist(dictFunctor)(nat);\n                      return function ($30) {\n                          return $29(c[\"eval\"]($30));\n                      };\n                  })()\n              });\n          });\n      };\n  };\n  var defaultEval = {\n      handleAction: Data_Function[\"const\"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)),\n      handleQuery: Data_Function[\"const\"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value)),\n      receive: Data_Function[\"const\"](Data_Maybe.Nothing.value),\n      initialize: Data_Maybe.Nothing.value,\n      finalize: Data_Maybe.Nothing.value\n  };\n  var componentSlot = function (dictCons) {\n      return function (dictIsSymbol) {\n          return function (dictOrd) {\n              return function (label) {\n                  return function (p) {\n                      return function (comp) {\n                          return function (input) {\n                              return function (output) {\n                                  return mkComponentSlot({\n                                      get: Halogen_Data_Slot.lookup()(dictIsSymbol)(dictOrd)(label)(p),\n                                      pop: Halogen_Data_Slot.pop()(dictIsSymbol)(dictOrd)(label)(p),\n                                      set: Halogen_Data_Slot.insert()(dictIsSymbol)(dictOrd)(label)(p),\n                                      component: comp,\n                                      input: input,\n                                      output: output\n                                  });\n                              };\n                          };\n                      };\n                  };\n              };\n          };\n      };\n  };\n  exports[\"mkComponent\"] = mkComponent;\n  exports[\"unComponent\"] = unComponent;\n  exports[\"hoist\"] = hoist;\n  exports[\"mkEval\"] = mkEval;\n  exports[\"defaultEval\"] = defaultEval;\n  exports[\"ComponentSlot\"] = ComponentSlot;\n  exports[\"ThunkSlot\"] = ThunkSlot;\n  exports[\"componentSlot\"] = componentSlot;\n  exports[\"unComponentSlot\"] = unComponentSlot;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Control.Monad.Reader.Class\"] = $PS[\"Control.Monad.Reader.Class\"] || {};\n  var exports = $PS[\"Control.Monad.Reader.Class\"];\n  var ask = function (dict) {\n      return dict.ask;\n  };\n  exports[\"ask\"] = ask;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Control.Monad.Reader.Trans\"] = $PS[\"Control.Monad.Reader.Trans\"] || {};\n  var exports = $PS[\"Control.Monad.Reader.Trans\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Control_Apply = $PS[\"Control.Apply\"];\n  var Control_Bind = $PS[\"Control.Bind\"];\n  var Control_Monad_Trans_Class = $PS[\"Control.Monad.Trans.Class\"];\n  var Data_Function = $PS[\"Data.Function\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Effect_Class = $PS[\"Effect.Class\"];                \n  var ReaderT = function (x) {\n      return x;\n  };\n  var runReaderT = function (v) {\n      return v;\n  };\n  var monadTransReaderT = {\n      lift: function (dictMonad) {\n          return function ($64) {\n              return ReaderT(Data_Function[\"const\"]($64));\n          };\n      }\n  };\n  var mapReaderT = function (f) {\n      return function (v) {\n          return function ($65) {\n              return f(v($65));\n          };\n      };\n  };\n  var functorReaderT = function (dictFunctor) {\n      return {\n          map: (function () {\n              var $66 = Data_Functor.map(dictFunctor);\n              return function ($67) {\n                  return mapReaderT($66($67));\n              };\n          })()\n      };\n  };\n  var applyReaderT = function (dictApply) {\n      return {\n          apply: function (v) {\n              return function (v1) {\n                  return function (r) {\n                      return Control_Apply.apply(dictApply)(v(r))(v1(r));\n                  };\n              };\n          },\n          Functor0: function () {\n              return functorReaderT(dictApply.Functor0());\n          }\n      };\n  };\n  var bindReaderT = function (dictBind) {\n      return {\n          bind: function (v) {\n              return function (k) {\n                  return function (r) {\n                      return Control_Bind.bind(dictBind)(v(r))(function (a) {\n                          var v1 = k(a);\n                          return v1(r);\n                      });\n                  };\n              };\n          },\n          Apply0: function () {\n              return applyReaderT(dictBind.Apply0());\n          }\n      };\n  };\n  var applicativeReaderT = function (dictApplicative) {\n      return {\n          pure: (function () {\n              var $71 = Control_Applicative.pure(dictApplicative);\n              return function ($72) {\n                  return ReaderT(Data_Function[\"const\"]($71($72)));\n              };\n          })(),\n          Apply0: function () {\n              return applyReaderT(dictApplicative.Apply0());\n          }\n      };\n  };\n  var monadReaderT = function (dictMonad) {\n      return {\n          Applicative0: function () {\n              return applicativeReaderT(dictMonad.Applicative0());\n          },\n          Bind1: function () {\n              return bindReaderT(dictMonad.Bind1());\n          }\n      };\n  };\n  var monadAskReaderT = function (dictMonad) {\n      return {\n          ask: Control_Applicative.pure(dictMonad.Applicative0()),\n          Monad0: function () {\n              return monadReaderT(dictMonad);\n          }\n      };\n  };\n  var monadEffectReader = function (dictMonadEffect) {\n      return {\n          liftEffect: (function () {\n              var $74 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadEffect.Monad0());\n              var $75 = Effect_Class.liftEffect(dictMonadEffect);\n              return function ($76) {\n                  return $74($75($76));\n              };\n          })(),\n          Monad0: function () {\n              return monadReaderT(dictMonadEffect.Monad0());\n          }\n      };\n  };\n  exports[\"runReaderT\"] = runReaderT;\n  exports[\"functorReaderT\"] = functorReaderT;\n  exports[\"applicativeReaderT\"] = applicativeReaderT;\n  exports[\"bindReaderT\"] = bindReaderT;\n  exports[\"monadReaderT\"] = monadReaderT;\n  exports[\"monadEffectReader\"] = monadEffectReader;\n  exports[\"monadAskReaderT\"] = monadAskReaderT;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  exports.reallyUnsafeRefEq = function (a) {\n    return function (b) {\n      return a === b;\n    };\n  };\n})(PS[\"Unsafe.Reference\"] = PS[\"Unsafe.Reference\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Unsafe.Reference\"] = $PS[\"Unsafe.Reference\"] || {};\n  var exports = $PS[\"Unsafe.Reference\"];\n  var $foreign = $PS[\"Unsafe.Reference\"];\n  var unsafeRefEq = $foreign.reallyUnsafeRefEq;\n  exports[\"unsafeRefEq\"] = unsafeRefEq;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.Subscription\"] = $PS[\"Halogen.Subscription\"] || {};\n  var exports = $PS[\"Halogen.Subscription\"];\n  var Control_Bind = $PS[\"Control.Bind\"];\n  var Data_Array = $PS[\"Data.Array\"];\n  var Data_Foldable = $PS[\"Data.Foldable\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Data_Semigroup = $PS[\"Data.Semigroup\"];\n  var Effect = $PS[\"Effect\"];\n  var Effect_Ref = $PS[\"Effect.Ref\"];\n  var Safe_Coerce = $PS[\"Safe.Coerce\"];\n  var Unsafe_Reference = $PS[\"Unsafe.Reference\"];\n  var unsubscribe = function (v) {\n      return v;\n  };\n  var subscribe = function (v) {\n      return function (k) {\n          return v((function () {\n              var $55 = Data_Functor[\"void\"](Effect.functorEffect);\n              return function ($56) {\n                  return $55(k($56));\n              };\n          })());\n      };\n  };                                                                               \n  var notify = function (v) {\n      return function (a) {\n          return v(a);\n      };\n  };                                                                   \n  var makeEmitter = Safe_Coerce.coerce();\n  var functorEmitter = {\n      map: function (f) {\n          return function (v) {\n              return function (k) {\n                  return v(function ($57) {\n                      return k(f($57));\n                  });\n              };\n          };\n      }\n  };\n  var create = function __do() {\n      var subscribers = Effect_Ref[\"new\"]([  ])();\n      return {\n          emitter: function (k) {\n              return function __do() {\n                  Effect_Ref.modify_(function (v) {\n                      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)([ k ]);\n                  })(subscribers)();\n                  return Effect_Ref.modify_(Data_Array.deleteBy(Unsafe_Reference.unsafeRefEq)(k))(subscribers);\n              };\n          },\n          listener: function (a) {\n              return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(subscribers))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableArray)(function (k) {\n                  return k(a);\n              }));\n          }\n      };\n  };\n  exports[\"create\"] = create;\n  exports[\"notify\"] = notify;\n  exports[\"makeEmitter\"] = makeEmitter;\n  exports[\"subscribe\"] = subscribe;\n  exports[\"unsubscribe\"] = unsubscribe;\n  exports[\"functorEmitter\"] = functorEmitter;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.Store.Monad\"] = $PS[\"Halogen.Store.Monad\"] || {};\n  var exports = $PS[\"Halogen.Store.Monad\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Control_Bind = $PS[\"Control.Bind\"];\n  var Control_Monad_Reader_Class = $PS[\"Control.Monad.Reader.Class\"];\n  var Control_Monad_Reader_Trans = $PS[\"Control.Monad.Reader.Trans\"];\n  var Control_Monad_Trans_Class = $PS[\"Control.Monad.Trans.Class\"];\n  var Data_Foldable = $PS[\"Data.Foldable\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Effect = $PS[\"Effect\"];\n  var Effect_Aff = $PS[\"Effect.Aff\"];\n  var Effect_Class = $PS[\"Effect.Class\"];\n  var Effect_Ref = $PS[\"Effect.Ref\"];\n  var Halogen_Component = $PS[\"Halogen.Component\"];\n  var Halogen_Query_HalogenM = $PS[\"Halogen.Query.HalogenM\"];\n  var Halogen_Subscription = $PS[\"Halogen.Subscription\"];\n  var updateStore = function (dict) {\n      return dict.updateStore;\n  };\n  var runStoreT = function (dictMonad) {\n      return function (initialStore) {\n          return function (reducer) {\n              return function (component) {\n                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {\n                      var value = Effect_Ref[\"new\"](initialStore)();\n                      var v = Halogen_Subscription.create();\n                      return {\n                          value: value,\n                          emitter: v.emitter,\n                          listener: v.listener,\n                          reducer: reducer\n                      };\n                  }))(function (hs) {\n                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(Halogen_Component.hoist(((dictMonad.Bind1()).Apply0()).Functor0())(function (v) {\n                          return Control_Monad_Reader_Trans.runReaderT(v)(hs);\n                      })(component));\n                  });\n              };\n          };\n      };\n  };\n  var monadStoreT = function (dictMonad) {\n      return Control_Monad_Reader_Trans.monadReaderT(dictMonad);\n  };\n  var monadEffectStoreT = function (dictMonadEffect) {\n      return Control_Monad_Reader_Trans.monadEffectReader(dictMonadEffect);\n  };\n  var monadStoreStoreT = function (dictMonadAff) {\n      return {\n          getStore: Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(((dictMonadAff.MonadEffect0()).Monad0()).Bind1()))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT((dictMonadAff.MonadEffect0()).Monad0())))(function (store) {\n              return Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(dictMonadAff.MonadEffect0()))(Effect_Ref.read(store.value));\n          }),\n          updateStore: function (action) {\n              return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(((dictMonadAff.MonadEffect0()).Monad0()).Bind1()))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT((dictMonadAff.MonadEffect0()).Monad0())))(function (store) {\n                  return Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(dictMonadAff.MonadEffect0()))(function __do() {\n                      var current = Effect_Ref.read(store.value)();\n                      var newStore = store.reducer(current)(action);\n                      Effect_Ref.write(newStore)(store.value)();\n                      return Halogen_Subscription.notify(store.listener)(newStore)();\n                  });\n              });\n          },\n          emitSelected: function (v) {\n              var filterEmitter = function (emitter) {\n                  return function (predicate) {\n                      return Halogen_Subscription.makeEmitter(function (k) {\n                          return emitter(function (a) {\n                              return Control_Bind.bind(Effect.bindEffect)(predicate(a))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(k));\n                          });\n                      });\n                  };\n              };\n              return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(((dictMonadAff.MonadEffect0()).Monad0()).Bind1()))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT((dictMonadAff.MonadEffect0()).Monad0())))(function (store) {\n                  return Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(dictMonadAff.MonadEffect0()))(function __do() {\n                      var init = Effect_Ref.read(store.value)();\n                      var prevRef = Effect_Ref[\"new\"](v.select(init))();\n                      return filterEmitter(store.emitter)(function ($$new) {\n                          return function __do() {\n                              var prevDerived = Effect_Ref.read(prevRef)();\n                              var newDerived = v.select($$new);\n                              var $23 = v.eq(prevDerived)(newDerived);\n                              if ($23) {\n                                  return Data_Maybe.Nothing.value;\n                              };\n                              Effect_Class.liftEffect(Effect_Class.monadEffectEffect)(Effect_Ref.write(newDerived)(prevRef))();\n                              return new Data_Maybe.Just(newDerived);\n                          };\n                      });\n                  });\n              });\n          },\n          MonadEffect0: function () {\n              return monadEffectStoreT(dictMonadAff.MonadEffect0());\n          }\n      };\n  };\n  var getStore = function (dict) {\n      return dict.getStore;\n  };\n  var functorStoreT = function (dictFunctor) {\n      return Control_Monad_Reader_Trans.functorReaderT(dictFunctor);\n  };\n  var emitSelected = function (dict) {\n      return dict.emitSelected;\n  };\n  var monadStoreHalogenM = function (dictMonadStore) {\n      return {\n          getStore: Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)((dictMonadStore.MonadEffect0()).Monad0())(getStore(dictMonadStore)),\n          updateStore: (function () {\n              var $26 = Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)((dictMonadStore.MonadEffect0()).Monad0());\n              var $27 = updateStore(dictMonadStore);\n              return function ($28) {\n                  return $26($27($28));\n              };\n          })(),\n          emitSelected: (function () {\n              var $29 = Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)((dictMonadStore.MonadEffect0()).Monad0());\n              var $30 = emitSelected(dictMonadStore);\n              return function ($31) {\n                  return $29($30($31));\n              };\n          })(),\n          MonadEffect0: function () {\n              return Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadStore.MonadEffect0());\n          }\n      };\n  };\n  var bindStoreT = function (dictBind) {\n      return Control_Monad_Reader_Trans.bindReaderT(dictBind);\n  };\n  var applicativeStoreT = function (dictApplicative) {\n      return Control_Monad_Reader_Trans.applicativeReaderT(dictApplicative);\n  };\n  exports[\"emitSelected\"] = emitSelected;\n  exports[\"getStore\"] = getStore;\n  exports[\"updateStore\"] = updateStore;\n  exports[\"runStoreT\"] = runStoreT;\n  exports[\"functorStoreT\"] = functorStoreT;\n  exports[\"applicativeStoreT\"] = applicativeStoreT;\n  exports[\"bindStoreT\"] = bindStoreT;\n  exports[\"monadStoreT\"] = monadStoreT;\n  exports[\"monadEffectStoreT\"] = monadEffectStoreT;\n  exports[\"monadStoreStoreT\"] = monadStoreStoreT;\n  exports[\"monadStoreHalogenM\"] = monadStoreHalogenM;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  exports.window = function () {\n    return window;\n  };\n})(PS[\"Web.HTML\"] = PS[\"Web.HTML\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Web.HTML\"] = $PS[\"Web.HTML\"] || {};\n  var exports = $PS[\"Web.HTML\"];\n  var $foreign = $PS[\"Web.HTML\"];\n  exports[\"window\"] = $foreign.window;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Web.HTML.Event.HashChangeEvent.EventTypes\"] = $PS[\"Web.HTML.Event.HashChangeEvent.EventTypes\"] || {};\n  var exports = $PS[\"Web.HTML.Event.HashChangeEvent.EventTypes\"];\n  var hashchange = \"hashchange\";\n  exports[\"hashchange\"] = hashchange;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  exports.hash = function (location) {\n    return function () {\n      return location.hash;\n    };\n  };\n\n  exports.setHash = function (hash) {\n    return function (location) {\n      return function () {\n        location.hash = hash;\n      };\n    };\n  };\n})(PS[\"Web.HTML.Location\"] = PS[\"Web.HTML.Location\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Web.HTML.Location\"] = $PS[\"Web.HTML.Location\"] || {};\n  var exports = $PS[\"Web.HTML.Location\"];\n  var $foreign = $PS[\"Web.HTML.Location\"];\n  exports[\"hash\"] = $foreign.hash;\n  exports[\"setHash\"] = $foreign.setHash;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  exports.document = function (window) {\n    return function () {\n      return window.document;\n    };\n  };\n\n  exports.location = function (window) {\n    return function () {\n      return window.location;\n    };\n  };\n})(PS[\"Web.HTML.Window\"] = PS[\"Web.HTML.Window\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Web.HTML.Window\"] = $PS[\"Web.HTML.Window\"] || {};\n  var exports = $PS[\"Web.HTML.Window\"];\n  var $foreign = $PS[\"Web.HTML.Window\"];\n  var Unsafe_Coerce = $PS[\"Unsafe.Coerce\"];\n  var toEventTarget = Unsafe_Coerce.unsafeCoerce;\n  exports[\"toEventTarget\"] = toEventTarget;\n  exports[\"document\"] = $foreign.document;\n  exports[\"location\"] = $foreign.location;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Routing.Hash\"] = $PS[\"Routing.Hash\"] || {};\n  var exports = $PS[\"Routing.Hash\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Control_Apply = $PS[\"Control.Apply\"];\n  var Control_Bind = $PS[\"Control.Bind\"];\n  var Data_Foldable = $PS[\"Data.Foldable\"];\n  var Data_Function = $PS[\"Data.Function\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Data_String_CodeUnits = $PS[\"Data.String.CodeUnits\"];\n  var Effect = $PS[\"Effect\"];\n  var Effect_Ref = $PS[\"Effect.Ref\"];\n  var Web_Event_EventTarget = $PS[\"Web.Event.EventTarget\"];\n  var Web_HTML = $PS[\"Web.HTML\"];\n  var Web_HTML_Event_HashChangeEvent_EventTypes = $PS[\"Web.HTML.Event.HashChangeEvent.EventTypes\"];\n  var Web_HTML_Location = $PS[\"Web.HTML.Location\"];\n  var Web_HTML_Window = $PS[\"Web.HTML.Window\"];                \n  var setHash = function (h) {\n      return Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.location))(Web_HTML_Location.setHash(h));\n  };\n  var getHash = Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.location))((function () {\n      var $2 = Data_Functor.map(Effect.functorEffect)((function () {\n          var $4 = Data_Maybe.fromMaybe(\"\");\n          var $5 = Data_String_CodeUnits.stripPrefix(\"#\");\n          return function ($6) {\n              return $4($5($6));\n          };\n      })());\n      return function ($3) {\n          return $2(Web_HTML_Location.hash($3));\n      };\n  })());\n  var foldHashes = function (cb) {\n      return function (init) {\n          return function __do() {\n              var ref = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref[\"new\"])(Control_Bind.bindFlipped(Effect.bindEffect)(init)(getHash))();\n              var win = Data_Functor.map(Effect.functorEffect)(Web_HTML_Window.toEventTarget)(Web_HTML.window)();\n              var listener = Web_Event_EventTarget.eventListener(function (v) {\n                  return Control_Bind.bindFlipped(Effect.bindEffect)(Data_Function.flip(Effect_Ref.write)(ref))(Control_Bind.join(Effect.bindEffect)(Control_Apply.apply(Effect.applyEffect)(Data_Functor.map(Effect.functorEffect)(cb)(Effect_Ref.read(ref)))(getHash)));\n              })();\n              Web_Event_EventTarget.addEventListener(Web_HTML_Event_HashChangeEvent_EventTypes.hashchange)(listener)(false)(win)();\n              return Web_Event_EventTarget.removeEventListener(Web_HTML_Event_HashChangeEvent_EventTypes.hashchange)(listener)(false)(win);\n          };\n      };\n  };\n  var matchesWith = function (dictFoldable) {\n      return function (parser) {\n          return function (cb) {\n              var go = function (a) {\n                  var $7 = Data_Maybe.maybe(Control_Applicative.pure(Effect.applicativeEffect)(a))(function (b) {\n                      return Data_Functor.voidRight(Effect.functorEffect)(new Data_Maybe.Just(b))(cb(a)(b));\n                  });\n                  var $8 = Data_Foldable.indexl(dictFoldable)(0);\n                  return function ($9) {\n                      return $7($8(parser($9)));\n                  };\n              };\n              return foldHashes(go)(go(Data_Maybe.Nothing.value));\n          };\n      };\n  };\n  exports[\"getHash\"] = getHash;\n  exports[\"setHash\"] = setHash;\n  exports[\"matchesWith\"] = matchesWith;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"App.AppM\"] = $PS[\"App.AppM\"] || {};\n  var exports = $PS[\"App.AppM\"];\n  var App_Capability_Navigate = $PS[\"App.Capability.Navigate\"];\n  var App_Data_Route = $PS[\"App.Data.Route\"];\n  var App_Store = $PS[\"App.Store\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Control_Bind = $PS[\"Control.Bind\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Effect_Aff = $PS[\"Effect.Aff\"];\n  var Effect_Aff_Class = $PS[\"Effect.Aff.Class\"];\n  var Effect_Class = $PS[\"Effect.Class\"];\n  var Halogen_Component = $PS[\"Halogen.Component\"];\n  var Halogen_Store_Monad = $PS[\"Halogen.Store.Monad\"];\n  var Routing_Duplex = $PS[\"Routing.Duplex\"];\n  var Routing_Hash = $PS[\"Routing.Hash\"];\n  var runAppM = function (initialStore) {\n      var $5 = Halogen_Store_Monad.runStoreT(Effect_Aff.monadAff)(initialStore)(App_Store.reduce);\n      var $6 = Halogen_Component.hoist(Halogen_Store_Monad.functorStoreT(Effect_Aff.functorAff))(function (v) {\n          return v;\n      });\n      return function ($7) {\n          return $5($6($7));\n      };\n  };\n  var monadStoreAppM = Halogen_Store_Monad.monadStoreStoreT(Effect_Aff_Class.monadAffAff);\n  var monadEffectAppM = Halogen_Store_Monad.monadEffectStoreT(Effect_Aff.monadEffectAff);\n  var monadAppM = Halogen_Store_Monad.monadStoreT(Effect_Aff.monadAff);\n  var monadLogAppM = {\n      logMessage: function (msg) {\n          return Halogen_Store_Monad.updateStore(monadStoreAppM)(new App_Store.UpdateMessageLog(msg));\n      },\n      Monad0: function () {\n          return monadAppM;\n      }\n  };                                                                         \n  var bindAppM = Halogen_Store_Monad.bindStoreT(Effect_Aff.bindAff);\n  var monadNavigateAppM = {\n      navigate: (function () {\n          var $8 = Effect_Class.liftEffect(monadEffectAppM);\n          var $9 = Routing_Duplex.print(App_Data_Route.routeCodec);\n          return function ($10) {\n              return $8(Routing_Hash.setHash($9($10)));\n          };\n      })(),\n      logoutUser: Control_Bind.discard(Control_Bind.discardUnit)(bindAppM)(Halogen_Store_Monad.updateStore(monadStoreAppM)(App_Store.LogoutUser.value))(function () {\n          return App_Capability_Navigate.navigate(monadNavigateAppM)(App_Data_Route.Home.value);\n      }),\n      Monad0: function () {\n          return monadAppM;\n      }\n  };                                                                   \n  var applicativeAppM = Halogen_Store_Monad.applicativeStoreT(Effect_Aff.applicativeAff);\n  var monadUserAppM = {\n      loginUser: function (username) {\n          var profile = {\n              username: username\n          };\n          return Control_Bind.discard(Control_Bind.discardUnit)(bindAppM)(Halogen_Store_Monad.updateStore(monadStoreAppM)(new App_Store.LoginUser(profile)))(function () {\n              return Control_Applicative.pure(applicativeAppM)(new Data_Maybe.Just(profile));\n          });\n      },\n      Monad0: function () {\n          return monadAppM;\n      }\n  };\n  exports[\"runAppM\"] = runAppM;\n  exports[\"monadEffectAppM\"] = monadEffectAppM;\n  exports[\"monadStoreAppM\"] = monadStoreAppM;\n  exports[\"monadNavigateAppM\"] = monadNavigateAppM;\n  exports[\"monadUserAppM\"] = monadUserAppM;\n  exports[\"monadLogAppM\"] = monadLogAppM;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"App.Capability.Log\"] = $PS[\"App.Capability.Log\"] || {};\n  var exports = $PS[\"App.Capability.Log\"];\n  var Control_Monad_Trans_Class = $PS[\"Control.Monad.Trans.Class\"];\n  var Halogen_Query_HalogenM = $PS[\"Halogen.Query.HalogenM\"];                \n  var logMessage = function (dict) {\n      return dict.logMessage;\n  };\n  var monadLogHalogenM = function (dictMonadLog) {\n      return {\n          logMessage: (function () {\n              var $3 = Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)(dictMonadLog.Monad0());\n              var $4 = logMessage(dictMonadLog);\n              return function ($5) {\n                  return $3($4($5));\n              };\n          })(),\n          Monad0: function () {\n              return Halogen_Query_HalogenM.monadHalogenM;\n          }\n      };\n  };\n  exports[\"logMessage\"] = logMessage;\n  exports[\"monadLogHalogenM\"] = monadLogHalogenM;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"App.Capability.Resource.User\"] = $PS[\"App.Capability.Resource.User\"] || {};\n  var exports = $PS[\"App.Capability.Resource.User\"];\n  var Control_Monad_Trans_Class = $PS[\"Control.Monad.Trans.Class\"];\n  var Halogen_Query_HalogenM = $PS[\"Halogen.Query.HalogenM\"];                \n  var loginUser = function (dict) {\n      return dict.loginUser;\n  };\n  var monadUserHalogenM = function (dictMonadUser) {\n      return {\n          loginUser: (function () {\n              var $3 = Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)(dictMonadUser.Monad0());\n              var $4 = loginUser(dictMonadUser);\n              return function ($5) {\n                  return $3($4($5));\n              };\n          })(),\n          Monad0: function () {\n              return Halogen_Query_HalogenM.monadHalogenM;\n          }\n      };\n  };\n  exports[\"loginUser\"] = loginUser;\n  exports[\"monadUserHalogenM\"] = monadUserHalogenM;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.HTML.Elements\"] = $PS[\"Halogen.HTML.Elements\"] || {};\n  var exports = $PS[\"Halogen.HTML.Elements\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Halogen_HTML_Core = $PS[\"Halogen.HTML.Core\"];\n  var element = Halogen_HTML_Core.element(Data_Maybe.Nothing.value);\n  var h1 = element(\"h1\");\n  var h1_ = h1([  ]);\n  var h2 = element(\"h2\");    \n  var hr = function (props) {\n      return element(\"hr\")(props)([  ]);\n  };\n  var hr_ = hr([  ]);        \n  var li = element(\"li\");\n  var li_ = li([  ]);        \n  var p = element(\"p\");\n  var p_ = p([  ]);\n  var ul = element(\"ul\");\n  var ul_ = ul([  ]);\n  var div = element(\"div\");\n  var div_ = div([  ]);\n  var button = element(\"button\");\n  var a = element(\"a\");\n  exports[\"a\"] = a;\n  exports[\"button\"] = button;\n  exports[\"div\"] = div;\n  exports[\"div_\"] = div_;\n  exports[\"h1_\"] = h1_;\n  exports[\"h2\"] = h2;\n  exports[\"hr_\"] = hr_;\n  exports[\"li_\"] = li_;\n  exports[\"p_\"] = p_;\n  exports[\"ul_\"] = ul_;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.HTML.Properties\"] = $PS[\"Halogen.HTML.Properties\"] || {};\n  var exports = $PS[\"Halogen.HTML.Properties\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Halogen_HTML_Core = $PS[\"Halogen.HTML.Core\"];\n  var prop = function (dictIsProp) {\n      return Halogen_HTML_Core.prop(dictIsProp);\n  };\n  var value = prop(Halogen_HTML_Core.isPropString)(\"value\");\n  var href = prop(Halogen_HTML_Core.isPropString)(\"href\");\n  var attr = Halogen_HTML_Core.attr(Data_Maybe.Nothing.value);\n  var style = attr(\"style\");\n  exports[\"href\"] = href;\n  exports[\"style\"] = style;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"App.Component.HTML.Util\"] = $PS[\"App.Component.HTML.Util\"] || {};\n  var exports = $PS[\"App.Component.HTML.Util\"];\n  var App_Data_Route = $PS[\"App.Data.Route\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Data_Semigroup = $PS[\"Data.Semigroup\"];\n  var Data_Unit = $PS[\"Data.Unit\"];\n  var Halogen_HTML_Core = $PS[\"Halogen.HTML.Core\"];\n  var Halogen_HTML_Elements = $PS[\"Halogen.HTML.Elements\"];\n  var Halogen_HTML_Properties = $PS[\"Halogen.HTML.Properties\"];\n  var Routing_Duplex = $PS[\"Routing.Duplex\"];                \n  var whenElem = function (cond) {\n      return function (f) {\n          if (cond) {\n              return f(Data_Unit.unit);\n          };\n          return Halogen_HTML_Core.text(\"\");\n      };\n  };\n  var safeHref = (function () {\n      var $6 = Data_Semigroup.append(Data_Semigroup.semigroupString)(\"#\");\n      var $7 = Routing_Duplex.print(App_Data_Route.routeCodec);\n      return function ($8) {\n          return Halogen_HTML_Properties.href($6($7($8)));\n      };\n  })();\n  var navItem = function (route) {\n      return function (label) {\n          return Halogen_HTML_Elements.li_([ Halogen_HTML_Elements.a([ safeHref(route) ])([ Halogen_HTML_Core.text(label) ]) ]);\n      };\n  };\n  var maybeElem = function (v) {\n      return function (v1) {\n          if (v instanceof Data_Maybe.Just) {\n              return v1(v.value0);\n          };\n          return Halogen_HTML_Core.text(\"\");\n      };\n  };\n  exports[\"navItem\"] = navItem;\n  exports[\"whenElem\"] = whenElem;\n  exports[\"maybeElem\"] = maybeElem;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"App.Component.HTML.Navbar\"] = $PS[\"App.Component.HTML.Navbar\"] || {};\n  var exports = $PS[\"App.Component.HTML.Navbar\"];\n  var App_Component_HTML_Util = $PS[\"App.Component.HTML.Util\"];\n  var App_Data_Route = $PS[\"App.Data.Route\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Halogen_HTML_Core = $PS[\"Halogen.HTML.Core\"];\n  var Halogen_HTML_Elements = $PS[\"Halogen.HTML.Elements\"];\n  var Halogen_HTML_Properties = $PS[\"Halogen.HTML.Properties\"];                \n  var wrapperStyle = \"\\x0a  display: flex;\\x0a  flex-direction: column;\\x0a  justify-content: space-between;\\x0a  height: calc(100vh - 18px)\\x0a  \";\n  var consoleStyle = \"\\x0a  min-height: 275px;\\x0a  background: #282c34;\\x0a  color: #e06c75;\\x0a  font-family: 'Consolas';\\x0a  padding: 5px 20px 5px 20px;\\x0a  \";\n  var navbarPageWrapper = function (v) {\n      return function (innerHtml) {\n          var navbar = Halogen_HTML_Elements.ul_([ App_Component_HTML_Util.navItem(App_Data_Route.Home.value)(\"Home\"), App_Component_HTML_Util.whenElem(Data_Maybe.isNothing(v.currentUser))(function (v1) {\n              return App_Component_HTML_Util.navItem(App_Data_Route.Login.value)(\"Log in\");\n          }), App_Component_HTML_Util.whenElem(Data_Maybe.isJust(v.currentUser))(function (v1) {\n              return App_Component_HTML_Util.navItem(App_Data_Route.Secrets.value)(\"Secrets\");\n          }) ]);\n          var fakeConsole = function (messages) {\n              return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.style(consoleStyle) ])([ Halogen_HTML_Elements.h2([ Halogen_HTML_Properties.style(\"font-variant: small-caps;\") ])([ Halogen_HTML_Core.text(\"Fake Console: \") ]), Halogen_HTML_Elements.ul_(Data_Functor.map(Data_Functor.functorArray)(function (msg) {\n                  return Halogen_HTML_Elements.li_([ Halogen_HTML_Core.text(msg) ]);\n              })(messages)) ]);\n          };\n          return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.style(wrapperStyle) ])([ Halogen_HTML_Elements.div_([ navbar, innerHtml ]), Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.hr_, fakeConsole(v.messageLog) ]) ]);\n      };\n  };\n  exports[\"navbarPageWrapper\"] = navbarPageWrapper;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.HTML\"] = $PS[\"Halogen.HTML\"] || {};\n  var exports = $PS[\"Halogen.HTML\"];\n  var Data_Function = $PS[\"Data.Function\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Halogen_Component = $PS[\"Halogen.Component\"];\n  var Halogen_HTML_Core = $PS[\"Halogen.HTML.Core\"];        \n  var slot_ = function (dictCons) {\n      return function (dictIsSymbol) {\n          return function (dictOrd) {\n              return function (label) {\n                  return function (p) {\n                      return function (component) {\n                          return function (input) {\n                              return Halogen_HTML_Core.widget(new Halogen_Component.ComponentSlot(Halogen_Component.componentSlot()(dictIsSymbol)(dictOrd)(label)(p)(component)(input)(Data_Function[\"const\"](Data_Maybe.Nothing.value))));\n                          };\n                      };\n                  };\n              };\n          };\n      };\n  };\n  var slot = function (dictCons) {\n      return function (dictIsSymbol) {\n          return function (dictOrd) {\n              return function (label) {\n                  return function (p) {\n                      return function (component) {\n                          return function (input) {\n                              return function (outputQuery) {\n                                  return Halogen_HTML_Core.widget(new Halogen_Component.ComponentSlot(Halogen_Component.componentSlot()(dictIsSymbol)(dictOrd)(label)(p)(component)(input)(function ($6) {\n                                      return Data_Maybe.Just.create(outputQuery($6));\n                                  })));\n                              };\n                          };\n                      };\n                  };\n              };\n          };\n      };\n  };\n  exports[\"slot\"] = slot;\n  exports[\"slot_\"] = slot_;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.Store.Connect\"] = $PS[\"Halogen.Store.Connect\"] || {};\n  var exports = $PS[\"Halogen.Store.Connect\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Control_Bind = $PS[\"Control.Bind\"];\n  var Control_Monad_State_Class = $PS[\"Control.Monad.State.Class\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Data_Ord = $PS[\"Data.Ord\"];\n  var Data_Unit = $PS[\"Data.Unit\"];\n  var Halogen_Component = $PS[\"Halogen.Component\"];\n  var Halogen_HTML = $PS[\"Halogen.HTML\"];\n  var Halogen_HTML_Core = $PS[\"Halogen.HTML.Core\"];\n  var Halogen_Query_HalogenM = $PS[\"Halogen.Query.HalogenM\"];\n  var Halogen_Store_Monad = $PS[\"Halogen.Store.Monad\"];\n  var Halogen_Subscription = $PS[\"Halogen.Subscription\"];\n  var Type_Proxy = $PS[\"Type.Proxy\"];\n  var Unsafe_Reference = $PS[\"Unsafe.Reference\"];                \n  var Initialize = (function () {\n      function Initialize() {\n\n      };\n      Initialize.value = new Initialize();\n      return Initialize;\n  })();\n  var Receive = (function () {\n      function Receive(value0) {\n          this.value0 = value0;\n      };\n      Receive.create = function (value0) {\n          return new Receive(value0);\n      };\n      return Receive;\n  })();\n  var Update = (function () {\n      function Update(value0) {\n          this.value0 = value0;\n      };\n      Update.create = function (value0) {\n          return new Update(value0);\n      };\n      return Update;\n  })();\n  var Raise = (function () {\n      function Raise(value0) {\n          this.value0 = value0;\n      };\n      Raise.create = function (value0) {\n          return new Raise(value0);\n      };\n      return Raise;\n  })();\n  var subscribe = function (dictMonadStore) {\n      return function (selector) {\n          return function (action) {\n              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Store_Monad.emitSelected(Halogen_Store_Monad.monadStoreHalogenM(dictMonadStore))(selector))(function (emitter) {\n                  return Data_Functor[\"void\"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.subscribe(Data_Functor.map(Halogen_Subscription.functorEmitter)(action)(emitter)));\n              });\n          };\n      };\n  };\n  var connect = function (dictMonadEffect) {\n      return function (dictMonadStore) {\n          return function (v) {\n              return function (component) {\n                  var renderInner = function (input) {\n                      return function (context) {\n                          return Halogen_HTML.slot()({\n                              reflectSymbol: function () {\n                                  return \"inner\";\n                              }\n                          })(Data_Ord.ordUnit)(Type_Proxy[\"Proxy\"].value)(Data_Unit.unit)(component)({\n                              input: input,\n                              context: context\n                          })(Raise.create);\n                      };\n                  };\n                  var render = function (state) {\n                      if (state.context instanceof Data_Maybe.Just) {\n                          return renderInner(state.input)(state.context.value0);\n                      };\n                      return Halogen_HTML_Core.text(\"\");\n                  };\n                  var initialState = function (input) {\n                      return {\n                          context: Data_Maybe.Nothing.value,\n                          initialized: false,\n                          input: input\n                      };\n                  };\n                  var handleAction = function (v1) {\n                      if (v1 instanceof Initialize) {\n                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(subscribe(dictMonadStore)(v)(Update.create))(function () {\n                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(v.select)(Halogen_Store_Monad.getStore(Halogen_Store_Monad.monadStoreHalogenM(dictMonadStore))))(function (context) {\n                                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {\n                                      var $16 = {};\n                                      for (var $17 in v2) {\n                                          if ({}.hasOwnProperty.call(v2, $17)) {\n                                              $16[$17] = v2[$17];\n                                          };\n                                      };\n                                      $16.context = new Data_Maybe.Just(context);\n                                      return $16;\n                                  });\n                              });\n                          });\n                      };\n                      if (v1 instanceof Receive) {\n                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {\n                              return v2.input;\n                          }))(function (oldInput) {\n                              return Control_Applicative.unless(Halogen_Query_HalogenM.applicativeHalogenM)(Unsafe_Reference.unsafeRefEq(oldInput)(v1.value0))(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {\n                                  var $19 = {};\n                                  for (var $20 in v2) {\n                                      if ({}.hasOwnProperty.call(v2, $20)) {\n                                          $19[$20] = v2[$20];\n                                      };\n                                  };\n                                  $19.input = v1.value0;\n                                  return $19;\n                              }));\n                          });\n                      };\n                      if (v1 instanceof Update) {\n                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {\n                              return v2.context;\n                          }))(function (v2) {\n                              if (v2 instanceof Data_Maybe.Just && Unsafe_Reference.unsafeRefEq(v2.value0)(v1.value0)) {\n                                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);\n                              };\n                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {\n                                  var $25 = {};\n                                  for (var $26 in v3) {\n                                      if ({}.hasOwnProperty.call(v3, $26)) {\n                                          $25[$26] = v3[$26];\n                                      };\n                                  };\n                                  $25.context = new Data_Maybe.Just(v1.value0);\n                                  return $25;\n                              });\n                          });\n                      };\n                      if (v1 instanceof Raise) {\n                          return Halogen_Query_HalogenM.raise(v1.value0);\n                      };\n                      throw new Error(\"Failed pattern match at Halogen.Store.Connect (line 74, column 18 - line 91, column 21): \" + [ v1.constructor.name ]);\n                  };\n                  return Halogen_Component.mkComponent({\n                      initialState: initialState,\n                      render: render,\n                      \"eval\": Halogen_Component.mkEval({\n                          handleAction: handleAction,\n                          handleQuery: Halogen_Query_HalogenM.query()({\n                              reflectSymbol: function () {\n                                  return \"inner\";\n                              }\n                          })(Data_Ord.ordUnit)(Type_Proxy[\"Proxy\"].value)(Data_Unit.unit),\n                          initialize: new Data_Maybe.Just(Initialize.value),\n                          finalize: Data_Maybe.Nothing.value,\n                          receive: function ($30) {\n                              return Data_Maybe.Just.create(Receive.create($30));\n                          }\n                      })\n                  });\n              };\n          };\n      };\n  };\n  exports[\"connect\"] = connect;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.Store.Select\"] = $PS[\"Halogen.Store.Select\"] || {};\n  var exports = $PS[\"Halogen.Store.Select\"];\n  var Data_Eq = $PS[\"Data.Eq\"];                                  \n  var Selector = function (x) {\n      return x;\n  };\n  var selectEq = function (dictEq) {\n      return function ($3) {\n          return Selector((function (v) {\n              return {\n                  eq: Data_Eq.eq(dictEq),\n                  select: v\n              };\n          })($3));\n      };\n  };\n  exports[\"selectEq\"] = selectEq;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"App.Page.Home\"] = $PS[\"App.Page.Home\"] || {};\n  var exports = $PS[\"App.Page.Home\"];\n  var App_Data_Username = $PS[\"App.Data.Username\"];\n  var App_Store = $PS[\"App.Store\"];\n  var Data_Eq = $PS[\"Data.Eq\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Halogen_Component = $PS[\"Halogen.Component\"];\n  var Halogen_HTML_Core = $PS[\"Halogen.HTML.Core\"];\n  var Halogen_HTML_Elements = $PS[\"Halogen.HTML.Elements\"];\n  var Halogen_Query_HalogenM = $PS[\"Halogen.Query.HalogenM\"];\n  var Halogen_Store_Connect = $PS[\"Halogen.Store.Connect\"];\n  var Halogen_Store_Select = $PS[\"Halogen.Store.Select\"];                \n  var Receive = (function () {\n      function Receive(value0) {\n          this.value0 = value0;\n      };\n      Receive.create = function (value0) {\n          return new Receive(value0);\n      };\n      return Receive;\n  })();\n  var component = function (dictMonadEffect) {\n      return function (dictMonadStore) {\n          var render = function (v) {\n              var message = (function () {\n                  if (v.currentUser instanceof Data_Maybe.Nothing) {\n                      return \"Welcome, guest. Perhaps consider logging in?\";\n                  };\n                  if (v.currentUser instanceof Data_Maybe.Just) {\n                      return \"WELCOME HOME, \" + (App_Data_Username.toString(v.currentUser.value0.username) + \"!! Your secrets page is now available.\");\n                  };\n                  throw new Error(\"Failed pattern match at App.Page.Home (line 58, column 17 - line 62, column 109): \" + [ v.currentUser.constructor.name ]);\n              })();\n              return Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.h1_([ Halogen_HTML_Core.text(\"Home page\") ]), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text(message) ]) ]);\n          };\n          var initialState = function (v) {\n              return {\n                  currentUser: v.context\n              };\n          };\n          var handleAction = function (v) {\n              return App_Store.updateLocalState(Halogen_Query_HalogenM.monadStateHalogenM)(v.value0);\n          };\n          var $$eval = Halogen_Component.mkEval({\n              handleAction: handleAction,\n              handleQuery: Halogen_Component.defaultEval.handleQuery,\n              receive: function ($15) {\n                  return Data_Maybe.Just.create(Receive.create($15));\n              },\n              initialize: Halogen_Component.defaultEval.initialize,\n              finalize: Halogen_Component.defaultEval.finalize\n          });\n          return Halogen_Store_Connect.connect(dictMonadEffect)(dictMonadStore)(Halogen_Store_Select.selectEq(Data_Maybe.eqMaybe(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({\n              reflectSymbol: function () {\n                  return \"username\";\n              }\n          })(App_Data_Username.eqUsername))))(function (v) {\n              return v.currentUser;\n          }))(Halogen_Component.mkComponent({\n              initialState: initialState,\n              render: render,\n              \"eval\": $$eval\n          }));\n      };\n  };\n  exports[\"component\"] = component;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Web.UIEvent.MouseEvent.EventTypes\"] = $PS[\"Web.UIEvent.MouseEvent.EventTypes\"] || {};\n  var exports = $PS[\"Web.UIEvent.MouseEvent.EventTypes\"];\n  var click = \"click\";\n  exports[\"click\"] = click;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.HTML.Events\"] = $PS[\"Halogen.HTML.Events\"] || {};\n  var exports = $PS[\"Halogen.HTML.Events\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Halogen_HTML_Core = $PS[\"Halogen.HTML.Core\"];\n  var Halogen_Query_Input = $PS[\"Halogen.Query.Input\"];\n  var Unsafe_Coerce = $PS[\"Unsafe.Coerce\"];\n  var Web_UIEvent_MouseEvent_EventTypes = $PS[\"Web.UIEvent.MouseEvent.EventTypes\"];\n  var mouseHandler = Unsafe_Coerce.unsafeCoerce;\n  var handler = function (et) {\n      return function (f) {\n          return Halogen_HTML_Core.handler(et)(function (ev) {\n              return new Data_Maybe.Just(new Halogen_Query_Input.Action(f(ev)));\n          });\n      };\n  };                                                       \n  var onClick = (function () {\n      var $1 = handler(Web_UIEvent_MouseEvent_EventTypes.click);\n      return function ($2) {\n          return $1(mouseHandler($2));\n      };\n  })();\n  exports[\"onClick\"] = onClick;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  exports.preventDefault = function (e) {\n    return function () {\n      return e.preventDefault();\n    };\n  };\n})(PS[\"Web.Event.Event\"] = PS[\"Web.Event.Event\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Web.Event.Event\"] = $PS[\"Web.Event.Event\"] || {};\n  var exports = $PS[\"Web.Event.Event\"];\n  var $foreign = $PS[\"Web.Event.Event\"];\n  exports[\"preventDefault\"] = $foreign.preventDefault;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Web.UIEvent.MouseEvent\"] = $PS[\"Web.UIEvent.MouseEvent\"] || {};\n  var exports = $PS[\"Web.UIEvent.MouseEvent\"];\n  var Unsafe_Coerce = $PS[\"Unsafe.Coerce\"];  \n  var toEvent = Unsafe_Coerce.unsafeCoerce;\n  exports[\"toEvent\"] = toEvent;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"App.Page.Login\"] = $PS[\"App.Page.Login\"] || {};\n  var exports = $PS[\"App.Page.Login\"];\n  var App_Capability_Log = $PS[\"App.Capability.Log\"];\n  var App_Capability_Navigate = $PS[\"App.Capability.Navigate\"];\n  var App_Capability_Resource_User = $PS[\"App.Capability.Resource.User\"];\n  var App_Data_Route = $PS[\"App.Data.Route\"];\n  var App_Data_Username = $PS[\"App.Data.Username\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Control_Bind = $PS[\"Control.Bind\"];\n  var Control_Category = $PS[\"Control.Category\"];\n  var Control_Monad_State_Class = $PS[\"Control.Monad.State.Class\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Data_Unit = $PS[\"Data.Unit\"];\n  var Effect_Class = $PS[\"Effect.Class\"];\n  var Halogen_Component = $PS[\"Halogen.Component\"];\n  var Halogen_HTML_Core = $PS[\"Halogen.HTML.Core\"];\n  var Halogen_HTML_Elements = $PS[\"Halogen.HTML.Elements\"];\n  var Halogen_HTML_Events = $PS[\"Halogen.HTML.Events\"];\n  var Halogen_Query_HalogenM = $PS[\"Halogen.Query.HalogenM\"];\n  var Web_Event_Event = $PS[\"Web.Event.Event\"];\n  var Web_UIEvent_MouseEvent = $PS[\"Web.UIEvent.MouseEvent\"];                \n  var HandleLogin = (function () {\n      function HandleLogin(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      HandleLogin.create = function (value0) {\n          return function (value1) {\n              return new HandleLogin(value0, value1);\n          };\n      };\n      return HandleLogin;\n  })();\n  var component = function (dictMonadEffect) {\n      return function (dictMonadLog) {\n          return function (dictMonadNavigate) {\n              return function (dictMonadUser) {\n                  var render = function (v) {\n                      return Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.h1_([ Halogen_HTML_Core.text(\"Sign in\") ]), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text(\"Please only click the button below if you are actually 'bloodninja'\") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (mouseEvent) {\n                          return new HandleLogin(mouseEvent, \"bloodninja\");\n                      }) ])([ Halogen_HTML_Core.text(\"Sign in as user 'bloodninja'\") ]) ]);\n                  };\n                  var initialState = Control_Category.identity(Control_Category.categoryFn);\n                  var handleAction = function (v) {\n                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))(Web_Event_Event.preventDefault(Web_UIEvent_MouseEvent.toEvent(v.value0))))(function () {\n                          var v1 = App_Data_Username.parse(v.value1);\n                          if (v1 instanceof Data_Maybe.Nothing) {\n                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);\n                          };\n                          if (v1 instanceof Data_Maybe.Just) {\n                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(App_Capability_Resource_User.loginUser(App_Capability_Resource_User.monadUserHalogenM(dictMonadUser))(v1.value0))(function () {\n                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(App_Capability_Log.logMessage(App_Capability_Log.monadLogHalogenM(dictMonadLog))(\"Signing in as user '\" + (App_Data_Username.toString(v1.value0) + \"'\")))(function () {\n                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {\n                                          return v2.redirect;\n                                      }))(function (shouldRedirect) {\n                                          return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(shouldRedirect)(App_Capability_Navigate.navigate(App_Capability_Navigate.monadNavigateHalogenM(dictMonadNavigate))(App_Data_Route.Home.value));\n                                      });\n                                  });\n                              });\n                          };\n                          throw new Error(\"Failed pattern match at App.Page.Login (line 72, column 9 - line 79, column 37): \" + [ v1.constructor.name ]);\n                      });\n                  };\n                  var $$eval = Halogen_Component.mkEval({\n                      handleAction: handleAction,\n                      handleQuery: Halogen_Component.defaultEval.handleQuery,\n                      receive: Halogen_Component.defaultEval.receive,\n                      initialize: Halogen_Component.defaultEval.initialize,\n                      finalize: Halogen_Component.defaultEval.finalize\n                  });\n                  return Halogen_Component.mkComponent({\n                      initialState: initialState,\n                      render: render,\n                      \"eval\": $$eval\n                  });\n              };\n          };\n      };\n  };\n  exports[\"component\"] = component;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"App.Page.Secrets\"] = $PS[\"App.Page.Secrets\"] || {};\n  var exports = $PS[\"App.Page.Secrets\"];\n  var App_Capability_Log = $PS[\"App.Capability.Log\"];\n  var App_Capability_Navigate = $PS[\"App.Capability.Navigate\"];\n  var App_Component_HTML_Util = $PS[\"App.Component.HTML.Util\"];\n  var App_Data_Username = $PS[\"App.Data.Username\"];\n  var App_Store = $PS[\"App.Store\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Control_Bind = $PS[\"Control.Bind\"];\n  var Control_Monad_State_Class = $PS[\"Control.Monad.State.Class\"];\n  var Data_Eq = $PS[\"Data.Eq\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Data_Unit = $PS[\"Data.Unit\"];\n  var Effect_Class = $PS[\"Effect.Class\"];\n  var Halogen_Component = $PS[\"Halogen.Component\"];\n  var Halogen_HTML_Core = $PS[\"Halogen.HTML.Core\"];\n  var Halogen_HTML_Elements = $PS[\"Halogen.HTML.Elements\"];\n  var Halogen_HTML_Events = $PS[\"Halogen.HTML.Events\"];\n  var Halogen_Query_HalogenM = $PS[\"Halogen.Query.HalogenM\"];\n  var Halogen_Store_Connect = $PS[\"Halogen.Store.Connect\"];\n  var Halogen_Store_Select = $PS[\"Halogen.Store.Select\"];\n  var Web_Event_Event = $PS[\"Web.Event.Event\"];\n  var Web_UIEvent_MouseEvent = $PS[\"Web.UIEvent.MouseEvent\"];                \n  var Initialize = (function () {\n      function Initialize() {\n\n      };\n      Initialize.value = new Initialize();\n      return Initialize;\n  })();\n  var Receive = (function () {\n      function Receive(value0) {\n          this.value0 = value0;\n      };\n      Receive.create = function (value0) {\n          return new Receive(value0);\n      };\n      return Receive;\n  })();\n  var HandleLogout = (function () {\n      function HandleLogout(value0) {\n          this.value0 = value0;\n      };\n      HandleLogout.create = function (value0) {\n          return new HandleLogout(value0);\n      };\n      return HandleLogout;\n  })();\n  var component = function (dictMonadStore) {\n      return function (dictMonadLog) {\n          return function (dictMonadNavigate) {\n              return function (dictMonadUser) {\n                  var render = function (v) {\n                      return App_Component_HTML_Util.maybeElem(v.currentUser)(function (profile) {\n                          var name = App_Data_Username.toString(profile.username);\n                          return Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.h1_([ Halogen_HTML_Core.text(name + \"'s page of secrets\") ]), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text(\"Hello, \" + (name + \".\\x0a\")) ]), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text(\"Your Secret: `traverse`\") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (mouseEvent) {\n                              return new HandleLogout(mouseEvent);\n                          }) ])([ Halogen_HTML_Core.text(\"Sign out\") ]) ]);\n                      });\n                  };\n                  var initialState = function (v) {\n                      return {\n                          currentUser: v.context\n                      };\n                  };\n                  var handleAction = function (v) {\n                      if (v instanceof Initialize) {\n                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {\n                              return v1.currentUser;\n                          }))(function (v1) {\n                              if (v1 instanceof Data_Maybe.Nothing) {\n                                  return App_Capability_Navigate.logoutUser(App_Capability_Navigate.monadNavigateHalogenM(dictMonadNavigate));\n                              };\n                              if (v1 instanceof Data_Maybe.Just) {\n                                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);\n                              };\n                              throw new Error(\"Failed pattern match at App.Page.Secrets (line 84, column 34 - line 89, column 31): \" + [ v1.constructor.name ]);\n                          });\n                      };\n                      if (v instanceof Receive) {\n                          return App_Store.updateLocalState(Halogen_Query_HalogenM.monadStateHalogenM)(v.value0);\n                      };\n                      if (v instanceof HandleLogout) {\n                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadStore.MonadEffect0()))(Web_Event_Event.preventDefault(Web_UIEvent_MouseEvent.toEvent(v.value0))))(function () {\n                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(App_Capability_Log.logMessage(App_Capability_Log.monadLogHalogenM(dictMonadLog))(\"Signing out\"))(function () {\n                                  return App_Capability_Navigate.logoutUser(App_Capability_Navigate.monadNavigateHalogenM(dictMonadNavigate));\n                              });\n                          });\n                      };\n                      throw new Error(\"Failed pattern match at App.Page.Secrets (line 82, column 20 - line 97, column 28): \" + [ v.constructor.name ]);\n                  };\n                  var $$eval = Halogen_Component.mkEval({\n                      handleAction: handleAction,\n                      handleQuery: Halogen_Component.defaultEval.handleQuery,\n                      receive: function ($20) {\n                          return Data_Maybe.Just.create(Receive.create($20));\n                      },\n                      initialize: new Data_Maybe.Just(Initialize.value),\n                      finalize: Halogen_Component.defaultEval.finalize\n                  });\n                  return Halogen_Store_Connect.connect(dictMonadStore.MonadEffect0())(dictMonadStore)(Halogen_Store_Select.selectEq(Data_Maybe.eqMaybe(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({\n                      reflectSymbol: function () {\n                          return \"username\";\n                      }\n                  })(App_Data_Username.eqUsername))))(function (v) {\n                      return v.currentUser;\n                  }))(Halogen_Component.mkComponent({\n                      initialState: initialState,\n                      render: render,\n                      \"eval\": $$eval\n                  }));\n              };\n          };\n      };\n  };\n  exports[\"component\"] = component;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"App.Component.Router\"] = $PS[\"App.Component.Router\"] || {};\n  var exports = $PS[\"App.Component.Router\"];\n  var App_Capability_Log = $PS[\"App.Capability.Log\"];\n  var App_Capability_Navigate = $PS[\"App.Capability.Navigate\"];\n  var App_Component_HTML_Navbar = $PS[\"App.Component.HTML.Navbar\"];\n  var App_Data_Route = $PS[\"App.Data.Route\"];\n  var App_Data_Username = $PS[\"App.Data.Username\"];\n  var App_Page_Home = $PS[\"App.Page.Home\"];\n  var App_Page_Login = $PS[\"App.Page.Login\"];\n  var App_Page_Secrets = $PS[\"App.Page.Secrets\"];\n  var App_Store = $PS[\"App.Store\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Control_Bind = $PS[\"Control.Bind\"];\n  var Control_Monad_State_Class = $PS[\"Control.Monad.State.Class\"];\n  var Data_Either = $PS[\"Data.Either\"];\n  var Data_Eq = $PS[\"Data.Eq\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Data_Ord = $PS[\"Data.Ord\"];\n  var Data_Unit = $PS[\"Data.Unit\"];\n  var Effect_Class = $PS[\"Effect.Class\"];\n  var Halogen_Component = $PS[\"Halogen.Component\"];\n  var Halogen_HTML = $PS[\"Halogen.HTML\"];\n  var Halogen_HTML_Core = $PS[\"Halogen.HTML.Core\"];\n  var Halogen_HTML_Elements = $PS[\"Halogen.HTML.Elements\"];\n  var Halogen_Query_HalogenM = $PS[\"Halogen.Query.HalogenM\"];\n  var Halogen_Store_Connect = $PS[\"Halogen.Store.Connect\"];\n  var Halogen_Store_Monad = $PS[\"Halogen.Store.Monad\"];\n  var Halogen_Store_Select = $PS[\"Halogen.Store.Select\"];\n  var Halogen_Subscription = $PS[\"Halogen.Subscription\"];\n  var Routing_Duplex = $PS[\"Routing.Duplex\"];\n  var Routing_Hash = $PS[\"Routing.Hash\"];\n  var Type_Proxy = $PS[\"Type.Proxy\"];                \n  var Navigate = (function () {\n      function Navigate(value0, value1) {\n          this.value0 = value0;\n          this.value1 = value1;\n      };\n      Navigate.create = function (value0) {\n          return function (value1) {\n              return new Navigate(value0, value1);\n          };\n      };\n      return Navigate;\n  })();\n  var Initialize = (function () {\n      function Initialize() {\n\n      };\n      Initialize.value = new Initialize();\n      return Initialize;\n  })();\n  var Receive = (function () {\n      function Receive(value0) {\n          this.value0 = value0;\n      };\n      Receive.create = function (value0) {\n          return new Receive(value0);\n      };\n      return Receive;\n  })();\n  var UpdateMessageLog = (function () {\n      function UpdateMessageLog(value0) {\n          this.value0 = value0;\n      };\n      UpdateMessageLog.create = function (value0) {\n          return new UpdateMessageLog(value0);\n      };\n      return UpdateMessageLog;\n  })();\n  var component = function (dictMonadEffect) {\n      return function (dictMonadLog) {\n          return function (dictMonadNavigate) {\n              return function (dictMonadUser) {\n                  return function (dictMonadStore) {\n                      var render = function (v) {\n                          var authorize = function (mbProfile) {\n                              return function (html) {\n                                  if (mbProfile instanceof Data_Maybe.Nothing) {\n                                      return Halogen_HTML.slot_()({\n                                          reflectSymbol: function () {\n                                              return \"login\";\n                                          }\n                                      })(Data_Ord.ordUnit)(Type_Proxy[\"Proxy\"].value)(Data_Unit.unit)(App_Page_Login.component(dictMonadEffect)(dictMonadLog)(dictMonadNavigate)(dictMonadUser))({\n                                          redirect: false\n                                      });\n                                  };\n                                  if (mbProfile instanceof Data_Maybe.Just) {\n                                      return html;\n                                  };\n                                  throw new Error(\"Failed pattern match at App.Component.Router (line 154, column 36 - line 158, column 17): \" + [ mbProfile.constructor.name ]);\n                              };\n                          };\n                          return App_Component_HTML_Navbar.navbarPageWrapper(v)((function () {\n                              if (v.route instanceof Data_Maybe.Nothing) {\n                                  return Halogen_HTML_Elements.h1_([ Halogen_HTML_Core.text(\"Oh no! That page wasn't found\") ]);\n                              };\n                              if (v.route instanceof Data_Maybe.Just && v.route.value0 instanceof App_Data_Route.Home) {\n                                  return Halogen_HTML.slot_()({\n                                      reflectSymbol: function () {\n                                          return \"home\";\n                                      }\n                                  })(Data_Ord.ordUnit)(Type_Proxy[\"Proxy\"].value)(Data_Unit.unit)(App_Page_Home.component(dictMonadEffect)(dictMonadStore))(Data_Unit.unit);\n                              };\n                              if (v.route instanceof Data_Maybe.Just && v.route.value0 instanceof App_Data_Route.Login) {\n                                  return Halogen_HTML.slot_()({\n                                      reflectSymbol: function () {\n                                          return \"login\";\n                                      }\n                                  })(Data_Ord.ordUnit)(Type_Proxy[\"Proxy\"].value)(Data_Unit.unit)(App_Page_Login.component(dictMonadEffect)(dictMonadLog)(dictMonadNavigate)(dictMonadUser))({\n                                      redirect: true\n                                  });\n                              };\n                              if (v.route instanceof Data_Maybe.Just && v.route.value0 instanceof App_Data_Route.Secrets) {\n                                  return authorize(v.currentUser)(Halogen_HTML.slot_()({\n                                      reflectSymbol: function () {\n                                          return \"secrets\";\n                                      }\n                                  })(Data_Ord.ordUnit)(Type_Proxy[\"Proxy\"].value)(Data_Unit.unit)(App_Page_Secrets.component(dictMonadStore)(dictMonadLog)(dictMonadNavigate)(dictMonadUser))(Data_Unit.unit));\n                              };\n                              throw new Error(\"Failed pattern match at App.Component.Router (line 136, column 33 - line 147, column 72): \" + [ v.route.constructor.name ]);\n                          })());\n                      };\n                      var initialState = function (v) {\n                          return {\n                              route: Data_Maybe.Nothing.value,\n                              messageLog: [  ],\n                              currentUser: v.context\n                          };\n                      };\n                      var handleQuery = (function () {\n                          var displayRouteChange = function (v) {\n                              return function (v1) {\n                                  if (v instanceof Data_Maybe.Nothing) {\n                                      return \"Setting initial route to /#\" + Routing_Duplex.print(App_Data_Route.routeCodec)(v1);\n                                  };\n                                  if (v instanceof Data_Maybe.Just) {\n                                      return \"Changing route from /#\" + (Routing_Duplex.print(App_Data_Route.routeCodec)(v.value0) + (\" to /#\" + Routing_Duplex.print(App_Data_Route.routeCodec)(v1)));\n                                  };\n                                  throw new Error(\"Failed pattern match at App.Component.Router (line 126, column 30 - line 131, column 51): \" + [ v.constructor.name, v1.constructor.name ]);\n                              };\n                          };\n                          return function (v) {\n                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {\n                                  return v1.route;\n                              }))(function (maybeOldRoute) {\n                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(Data_Maybe.eqMaybe(App_Data_Route.eqRoute))(maybeOldRoute)(new Data_Maybe.Just(v.value0)))(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {\n                                      var $33 = {};\n                                      for (var $34 in v1) {\n                                          if ({}.hasOwnProperty.call(v1, $34)) {\n                                              $33[$34] = v1[$34];\n                                          };\n                                      };\n                                      $33.route = new Data_Maybe.Just(v.value0);\n                                      return $33;\n                                  }))(function () {\n                                      return App_Capability_Log.logMessage(App_Capability_Log.monadLogHalogenM(dictMonadLog))(displayRouteChange(maybeOldRoute)(v.value0));\n                                  })))(function () {\n                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(new Data_Maybe.Just(v.value1));\n                                  });\n                              });\n                          };\n                      })();\n                      var handleAction = function (v) {\n                          if (v instanceof Initialize) {\n                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Store_Monad.emitSelected(Halogen_Store_Monad.monadStoreHalogenM(dictMonadStore))(Halogen_Store_Select.selectEq(Data_Eq.eqArray(Data_Eq.eqString))(function (v1) {\n                                  return v1.recentMessageLog;\n                              })))(function (newLogEmitter) {\n                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor[\"void\"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.subscribe(Data_Functor.map(Halogen_Subscription.functorEmitter)(UpdateMessageLog.create)(newLogEmitter))))(function () {\n                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)((function () {\n                                          var $44 = Routing_Duplex.parse(App_Data_Route.routeCodec);\n                                          return function ($45) {\n                                              return Data_Either.hush($44($45));\n                                          };\n                                      })())(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))(Routing_Hash.getHash)))(function (initialRoute) {\n                                          return App_Capability_Navigate.navigate(App_Capability_Navigate.monadNavigateHalogenM(dictMonadNavigate))(Data_Maybe.fromMaybe(App_Data_Route.Home.value)(initialRoute));\n                                      });\n                                  });\n                              });\n                          };\n                          if (v instanceof Receive) {\n                              return App_Store.updateLocalState(Halogen_Query_HalogenM.monadStateHalogenM)(v.value0);\n                          };\n                          if (v instanceof UpdateMessageLog) {\n                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {\n                                  return v1.messageLog;\n                              }))(function (currentLog) {\n                                  return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(Data_Eq.eqArray(Data_Eq.eqString))(v.value0)(currentLog))(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {\n                                      var $40 = {};\n                                      for (var $41 in v1) {\n                                          if ({}.hasOwnProperty.call(v1, $41)) {\n                                              $40[$41] = v1[$41];\n                                          };\n                                      };\n                                      $40.messageLog = v.value0;\n                                      return $40;\n                                  }));\n                              });\n                          };\n                          throw new Error(\"Failed pattern match at App.Component.Router (line 85, column 20 - line 106, column 46): \" + [ v.constructor.name ]);\n                      };\n                      var $$eval = Halogen_Component.mkEval({\n                          handleAction: handleAction,\n                          handleQuery: handleQuery,\n                          receive: function ($46) {\n                              return Data_Maybe.Just.create(Receive.create($46));\n                          },\n                          initialize: new Data_Maybe.Just(Initialize.value),\n                          finalize: Halogen_Component.defaultEval.finalize\n                      });\n                      return Halogen_Store_Connect.connect(dictMonadEffect)(dictMonadStore)(Halogen_Store_Select.selectEq(Data_Maybe.eqMaybe(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({\n                          reflectSymbol: function () {\n                              return \"username\";\n                          }\n                      })(App_Data_Username.eqUsername))))(function (v) {\n                          return v.currentUser;\n                      }))(Halogen_Component.mkComponent({\n                          initialState: initialState,\n                          render: render,\n                          \"eval\": $$eval\n                      }));\n                  };\n              };\n          };\n      };\n  };\n  exports[\"Navigate\"] = Navigate;\n  exports[\"component\"] = component;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Control.Monad.Fork.Class\"] = $PS[\"Control.Monad.Fork.Class\"] || {};\n  var exports = $PS[\"Control.Monad.Fork.Class\"];\n  var Effect_Aff = $PS[\"Effect.Aff\"];\n  var monadForkAff = {\n      suspend: Effect_Aff.suspendAff,\n      fork: Effect_Aff.forkAff,\n      join: Effect_Aff.joinFiber,\n      Monad0: function () {\n          return Effect_Aff.monadAff;\n      },\n      Functor1: function () {\n          return Effect_Aff.functorFiber;\n      }\n  };\n  var fork = function (dict) {\n      return dict.fork;\n  };\n  exports[\"fork\"] = fork;\n  exports[\"monadForkAff\"] = monadForkAff;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Control.Parallel\"] = $PS[\"Control.Parallel\"] || {};\n  var exports = $PS[\"Control.Parallel\"];\n  var Control_Category = $PS[\"Control.Category\"];\n  var Control_Parallel_Class = $PS[\"Control.Parallel.Class\"];\n  var Data_Foldable = $PS[\"Data.Foldable\"];                      \n  var parTraverse_ = function (dictParallel) {\n      return function (dictFoldable) {\n          return function (f) {\n              var $17 = Control_Parallel_Class.sequential(dictParallel);\n              var $18 = Data_Foldable.traverse_(dictParallel.Applicative1())(dictFoldable)((function () {\n                  var $20 = Control_Parallel_Class.parallel(dictParallel);\n                  return function ($21) {\n                      return $20(f($21));\n                  };\n              })());\n              return function ($19) {\n                  return $17($18($19));\n              };\n          };\n      };\n  };\n  var parSequence_ = function (dictParallel) {\n      return function (dictFoldable) {\n          return parTraverse_(dictParallel)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));\n      };\n  };\n  exports[\"parSequence_\"] = parSequence_;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  exports.warn = function (s) {\n    return function () {\n      console.warn(s);\n    };\n  };\n})(PS[\"Effect.Console\"] = PS[\"Effect.Console\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Effect.Console\"] = $PS[\"Effect.Console\"] || {};\n  var exports = $PS[\"Effect.Console\"];\n  var $foreign = $PS[\"Effect.Console\"];\n  exports[\"warn\"] = $foreign.warn;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  exports.error = function (msg) {\n    return new Error(msg);\n  };\n\n  exports.throwException = function (e) {\n    return function () {\n      throw e;\n    };\n  };\n})(PS[\"Effect.Exception\"] = PS[\"Effect.Exception\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Effect.Exception\"] = $PS[\"Effect.Exception\"] || {};\n  var exports = $PS[\"Effect.Exception\"];\n  var $foreign = $PS[\"Effect.Exception\"];\n  var $$throw = function ($2) {\n      return $foreign.throwException($foreign.error($2));\n  };\n  exports[\"throw\"] = $$throw;\n  exports[\"error\"] = $foreign.error;\n  exports[\"throwException\"] = $foreign.throwException;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.Aff.Driver.State\"] = $PS[\"Halogen.Aff.Driver.State\"] || {};\n  var exports = $PS[\"Halogen.Aff.Driver.State\"];\n  var Data_Foldable = $PS[\"Data.Foldable\"];\n  var Data_List_Types = $PS[\"Data.List.Types\"];\n  var Data_Map_Internal = $PS[\"Data.Map.Internal\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Effect_Ref = $PS[\"Effect.Ref\"];\n  var Halogen_Data_Slot = $PS[\"Halogen.Data.Slot\"];\n  var Unsafe_Coerce = $PS[\"Unsafe.Coerce\"];\n  var unRenderStateX = Unsafe_Coerce.unsafeCoerce;\n  var unDriverStateX = Unsafe_Coerce.unsafeCoerce;\n  var renderStateX_ = function (dictApplicative) {\n      return function (f) {\n          return unDriverStateX(function (st) {\n              return Data_Foldable.traverse_(dictApplicative)(Data_Foldable.foldableMaybe)(f)(st.rendering);\n          });\n      };\n  };\n  var mkRenderStateX = Unsafe_Coerce.unsafeCoerce;\n  var renderStateX = function (dictFunctor) {\n      return function (f) {\n          return unDriverStateX(function (st) {\n              return mkRenderStateX(f(st.rendering));\n          });\n      };\n  };\n  var mkDriverStateXRef = Unsafe_Coerce.unsafeCoerce;\n  var mapDriverState = function (f) {\n      return function (v) {\n          return f(v);\n      };\n  };\n  var initDriverState = function (component) {\n      return function (input) {\n          return function (handler) {\n              return function (lchs) {\n                  return function __do() {\n                      var selfRef = Effect_Ref[\"new\"]({})();\n                      var childrenIn = Effect_Ref[\"new\"](Halogen_Data_Slot.empty)();\n                      var childrenOut = Effect_Ref[\"new\"](Halogen_Data_Slot.empty)();\n                      var handlerRef = Effect_Ref[\"new\"](handler)();\n                      var pendingQueries = Effect_Ref[\"new\"](new Data_Maybe.Just(Data_List_Types.Nil.value))();\n                      var pendingOuts = Effect_Ref[\"new\"](new Data_Maybe.Just(Data_List_Types.Nil.value))();\n                      var pendingHandlers = Effect_Ref[\"new\"](Data_Maybe.Nothing.value)();\n                      var fresh = Effect_Ref[\"new\"](1)();\n                      var subscriptions = Effect_Ref[\"new\"](new Data_Maybe.Just(Data_Map_Internal.empty))();\n                      var forks = Effect_Ref[\"new\"](Data_Map_Internal.empty)();\n                      var ds = {\n                          component: component,\n                          state: component.initialState(input),\n                          refs: Data_Map_Internal.empty,\n                          children: Halogen_Data_Slot.empty,\n                          childrenIn: childrenIn,\n                          childrenOut: childrenOut,\n                          selfRef: selfRef,\n                          handlerRef: handlerRef,\n                          pendingQueries: pendingQueries,\n                          pendingOuts: pendingOuts,\n                          pendingHandlers: pendingHandlers,\n                          rendering: Data_Maybe.Nothing.value,\n                          fresh: fresh,\n                          subscriptions: subscriptions,\n                          forks: forks,\n                          lifecycleHandlers: lchs\n                      };\n                      Effect_Ref.write(ds)(selfRef)();\n                      return mkDriverStateXRef(selfRef);\n                  };\n              };\n          };\n      };\n  };\n  exports[\"mapDriverState\"] = mapDriverState;\n  exports[\"unDriverStateX\"] = unDriverStateX;\n  exports[\"renderStateX\"] = renderStateX;\n  exports[\"renderStateX_\"] = renderStateX_;\n  exports[\"unRenderStateX\"] = unRenderStateX;\n  exports[\"initDriverState\"] = initDriverState;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.Aff.Driver.Eval\"] = $PS[\"Halogen.Aff.Driver.Eval\"] || {};\n  var exports = $PS[\"Halogen.Aff.Driver.Eval\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Control_Applicative_Free = $PS[\"Control.Applicative.Free\"];\n  var Control_Bind = $PS[\"Control.Bind\"];\n  var Control_Monad = $PS[\"Control.Monad\"];\n  var Control_Monad_Fork_Class = $PS[\"Control.Monad.Fork.Class\"];\n  var Control_Monad_Free = $PS[\"Control.Monad.Free\"];\n  var Control_Parallel = $PS[\"Control.Parallel\"];\n  var Control_Parallel_Class = $PS[\"Control.Parallel.Class\"];\n  var Data_Boolean = $PS[\"Data.Boolean\"];\n  var Data_Coyoneda = $PS[\"Data.Coyoneda\"];\n  var Data_Either = $PS[\"Data.Either\"];\n  var Data_Foldable = $PS[\"Data.Foldable\"];\n  var Data_Function = $PS[\"Data.Function\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Data_List_Types = $PS[\"Data.List.Types\"];\n  var Data_Map_Internal = $PS[\"Data.Map.Internal\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Data_Ord = $PS[\"Data.Ord\"];\n  var Data_Unit = $PS[\"Data.Unit\"];\n  var Effect = $PS[\"Effect\"];\n  var Effect_Aff = $PS[\"Effect.Aff\"];\n  var Effect_Class = $PS[\"Effect.Class\"];\n  var Effect_Exception = $PS[\"Effect.Exception\"];\n  var Effect_Ref = $PS[\"Effect.Ref\"];\n  var Halogen_Aff_Driver_State = $PS[\"Halogen.Aff.Driver.State\"];\n  var Halogen_Query_ChildQuery = $PS[\"Halogen.Query.ChildQuery\"];\n  var Halogen_Query_HalogenM = $PS[\"Halogen.Query.HalogenM\"];\n  var Halogen_Query_HalogenQ = $PS[\"Halogen.Query.HalogenQ\"];\n  var Halogen_Query_Input = $PS[\"Halogen.Query.Input\"];\n  var Halogen_Subscription = $PS[\"Halogen.Subscription\"];\n  var Unsafe_Reference = $PS[\"Unsafe.Reference\"];                \n  var unsubscribe = function (sid) {\n      return function (ref) {\n          return function __do() {\n              var v = Effect_Ref.read(ref)();\n              var subs = Effect_Ref.read(v.subscriptions)();\n              return Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Halogen_Subscription.unsubscribe)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Map_Internal.lookup(Halogen_Query_HalogenM.ordSubscriptionId)(sid))(subs))();\n          };\n      };\n  };\n  var queueOrRun = function (ref) {\n      return function (au) {\n          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {\n              if (v instanceof Data_Maybe.Nothing) {\n                  return au;\n              };\n              if (v instanceof Data_Maybe.Just) {\n                  return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write(new Data_Maybe.Just(new Data_List_Types.Cons(au, v.value0)))(ref));\n              };\n              throw new Error(\"Failed pattern match at Halogen.Aff.Driver.Eval (line 182, column 33 - line 184, column 57): \" + [ v.constructor.name ]);\n          });\n      };\n  };\n  var handleLifecycle = function (lchs) {\n      return function (f) {\n          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({\n              initializers: Data_List_Types.Nil.value,\n              finalizers: Data_List_Types.Nil.value\n          })(lchs)))(function () {\n              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(f))(function (result) {\n                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(lchs)))(function (v) {\n                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(v.finalizers))(function () {\n                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(v.initializers))(function () {\n                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(result);\n                          });\n                      });\n                  });\n              });\n          });\n      };\n  };\n  var handleAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function[\"const\"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));\n  var fresh = function (f) {\n      return function (ref) {\n          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {\n              return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref[\"modify'\"](function (i) {\n                  return {\n                      state: i + 1 | 0,\n                      value: f(i)\n                  };\n              })(v.fresh));\n          });\n      };\n  };\n  var evalQ = function (render) {\n      return function (ref) {\n          return function (q) {\n              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {\n                  return evalM(render)(ref)(v[\"component\"][\"eval\"](new Halogen_Query_HalogenQ.Query(Data_Functor.map(Data_Coyoneda.functorCoyoneda)(Data_Maybe.Just.create)(Data_Coyoneda.liftCoyoneda(q)), Data_Function[\"const\"](Data_Maybe.Nothing.value))));\n              });\n          };\n      };\n  };\n  var evalM = function (render) {\n      return function (initRef) {\n          return function (v) {\n              var evalChildQuery = function (ref) {\n                  return function (cqb) {\n                      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {\n                          return Halogen_Query_ChildQuery.unChildQueryBox(function (v2) {\n                              var evalChild = function (v3) {\n                                  return Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v3)))(function (dsx) {\n                                      return Halogen_Aff_Driver_State.unDriverStateX(function (ds) {\n                                          return evalQ(render)(ds.selfRef)(v2.value1);\n                                      })(dsx);\n                                  }));\n                              };\n                              return Data_Functor.map(Effect_Aff.functorAff)(v2.value2)(Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(v2.value0(Effect_Aff.applicativeParAff)(evalChild)(v1.children)));\n                          })(cqb);\n                      });\n                  };\n              };\n              var go = function (ref) {\n                  return function (v1) {\n                      if (v1 instanceof Halogen_Query_HalogenM.State) {\n                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {\n                              var v3 = v1.value0(v2.state);\n                              if (Unsafe_Reference.unsafeRefEq(v2.state)(v3.value1)) {\n                                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(v3.value0);\n                              };\n                              if (Data_Boolean.otherwise) {\n                                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({\n                                      component: v2.component,\n                                      state: v3.value1,\n                                      refs: v2.refs,\n                                      children: v2.children,\n                                      childrenIn: v2.childrenIn,\n                                      childrenOut: v2.childrenOut,\n                                      selfRef: v2.selfRef,\n                                      handlerRef: v2.handlerRef,\n                                      pendingQueries: v2.pendingQueries,\n                                      pendingOuts: v2.pendingOuts,\n                                      pendingHandlers: v2.pendingHandlers,\n                                      rendering: v2.rendering,\n                                      fresh: v2.fresh,\n                                      subscriptions: v2.subscriptions,\n                                      forks: v2.forks,\n                                      lifecycleHandlers: v2.lifecycleHandlers\n                                  })(ref)))(function () {\n                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(handleLifecycle(v2.lifecycleHandlers)(render(v2.lifecycleHandlers)(ref)))(function () {\n                                          return Control_Applicative.pure(Effect_Aff.applicativeAff)(v3.value0);\n                                      });\n                                  });\n                              };\n                              throw new Error(\"Failed pattern match at Halogen.Aff.Driver.Eval (line 86, column 7 - line 92, column 21): \" + [ v3.constructor.name ]);\n                          });\n                      };\n                      if (v1 instanceof Halogen_Query_HalogenM.Subscribe) {\n                          return Control_Bind.bind(Effect_Aff.bindAff)(fresh(Halogen_Query_HalogenM.SubscriptionId)(ref))(function (sid) {\n                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Halogen_Subscription.subscribe(v1.value0(sid))(function (act) {\n                                  return handleAff(evalF(render)(ref)(new Halogen_Query_Input.Action(act)));\n                              })))(function (finalize) {\n                                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {\n                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.insert(Halogen_Query_HalogenM.ordSubscriptionId)(sid)(finalize)))(v2.subscriptions)))(function () {\n                                          return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(sid));\n                                      });\n                                  });\n                              });\n                          });\n                      };\n                      if (v1 instanceof Halogen_Query_HalogenM.Unsubscribe) {\n                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(unsubscribe(v1.value0)(ref)))(function () {\n                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);\n                          });\n                      };\n                      if (v1 instanceof Halogen_Query_HalogenM.Lift) {\n                          return v1.value0;\n                      };\n                      if (v1 instanceof Halogen_Query_HalogenM.ChildQuery) {\n                          return evalChildQuery(ref)(v1.value0);\n                      };\n                      if (v1 instanceof Halogen_Query_HalogenM.Raise) {\n                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {\n                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v2.handlerRef)))(function (handler) {\n                                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(queueOrRun(v2.pendingOuts)(handler(v1.value0)))(function () {\n                                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);\n                                  });\n                              });\n                          });\n                      };\n                      if (v1 instanceof Halogen_Query_HalogenM.Par) {\n                          return Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(Control_Applicative_Free.retractFreeAp(Effect_Aff.applicativeParAff)(Control_Applicative_Free.hoistFreeAp((function () {\n                              var $78 = Control_Parallel_Class.parallel(Effect_Aff.parallelAff);\n                              var $79 = evalM(render)(ref);\n                              return function ($80) {\n                                  return $78($79($80));\n                              };\n                          })())(v1.value0)));\n                      };\n                      if (v1 instanceof Halogen_Query_HalogenM.Fork) {\n                          return Control_Bind.bind(Effect_Aff.bindAff)(fresh(Halogen_Query_HalogenM.ForkId)(ref))(function (fid) {\n                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {\n                                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref[\"new\"](false)))(function (doneRef) {\n                                      return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Effect_Aff[\"finally\"](Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {\n                                          Effect_Ref.modify_(Data_Map_Internal[\"delete\"](Halogen_Query_HalogenM.ordForkId)(fid))(v2.forks)();\n                                          return Effect_Ref.write(true)(doneRef)();\n                                      }))(evalM(render)(ref)(v1.value0))))(function (fiber) {\n                                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Monad.unlessM(Effect.monadEffect)(Effect_Ref.read(doneRef))(Effect_Ref.modify_(Data_Map_Internal.insert(Halogen_Query_HalogenM.ordForkId)(fid)(fiber))(v2.forks))))(function () {\n                                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(fid));\n                                          });\n                                      });\n                                  });\n                              });\n                          });\n                      };\n                      if (v1 instanceof Halogen_Query_HalogenM.Kill) {\n                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {\n                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v2.forks)))(function (forkMap) {\n                                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(Effect_Aff.killFiber(Effect_Exception.error(\"Cancelled\")))(Data_Map_Internal.lookup(Halogen_Query_HalogenM.ordForkId)(v1.value0)(forkMap)))(function () {\n                                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);\n                                  });\n                              });\n                          });\n                      };\n                      if (v1 instanceof Halogen_Query_HalogenM.GetRef) {\n                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {\n                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(Data_Map_Internal.lookup(Data_Ord.ordString)(v1.value0)(v2.refs)));\n                          });\n                      };\n                      throw new Error(\"Failed pattern match at Halogen.Aff.Driver.Eval (line 83, column 12 - line 133, column 33): \" + [ v1.constructor.name ]);\n                  };\n              };\n              return Control_Monad_Free.foldFree(Effect_Aff.monadRecAff)(go(initRef))(v);\n          };\n      };\n  };\n  var evalF = function (render) {\n      return function (ref) {\n          return function (v) {\n              if (v instanceof Halogen_Query_Input.RefUpdate) {\n                  return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Function.flip(Effect_Ref.modify_)(ref)(Halogen_Aff_Driver_State.mapDriverState(function (st) {\n                      return {\n                          component: st.component,\n                          state: st.state,\n                          refs: Data_Map_Internal.alter(Data_Ord.ordString)(Data_Function[\"const\"](v.value1))(v.value0)(st.refs),\n                          children: st.children,\n                          childrenIn: st.childrenIn,\n                          childrenOut: st.childrenOut,\n                          selfRef: st.selfRef,\n                          handlerRef: st.handlerRef,\n                          pendingQueries: st.pendingQueries,\n                          pendingOuts: st.pendingOuts,\n                          pendingHandlers: st.pendingHandlers,\n                          rendering: st.rendering,\n                          fresh: st.fresh,\n                          subscriptions: st.subscriptions,\n                          forks: st.forks,\n                          lifecycleHandlers: st.lifecycleHandlers\n                      };\n                  })));\n              };\n              if (v instanceof Halogen_Query_Input.Action) {\n                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {\n                      return evalM(render)(ref)(v1[\"component\"][\"eval\"](new Halogen_Query_HalogenQ.Action(v.value0, Data_Unit.unit)));\n                  });\n              };\n              throw new Error(\"Failed pattern match at Halogen.Aff.Driver.Eval (line 52, column 20 - line 58, column 62): \" + [ v.constructor.name ]);\n          };\n      };\n  };\n  exports[\"evalF\"] = evalF;\n  exports[\"evalQ\"] = evalQ;\n  exports[\"evalM\"] = evalM;\n  exports[\"handleLifecycle\"] = handleLifecycle;\n  exports[\"queueOrRun\"] = queueOrRun;\n  exports[\"handleAff\"] = handleAff;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.Aff.Driver\"] = $PS[\"Halogen.Aff.Driver\"] || {};\n  var exports = $PS[\"Halogen.Aff.Driver\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Control_Bind = $PS[\"Control.Bind\"];\n  var Control_Category = $PS[\"Control.Category\"];\n  var Control_Monad_Fork_Class = $PS[\"Control.Monad.Fork.Class\"];\n  var Control_Monad_Rec_Class = $PS[\"Control.Monad.Rec.Class\"];\n  var Control_Parallel = $PS[\"Control.Parallel\"];\n  var Data_Foldable = $PS[\"Data.Foldable\"];\n  var Data_Function = $PS[\"Data.Function\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Data_List = $PS[\"Data.List\"];\n  var Data_List_Types = $PS[\"Data.List.Types\"];\n  var Data_Map_Internal = $PS[\"Data.Map.Internal\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Data_Unit = $PS[\"Data.Unit\"];\n  var Effect = $PS[\"Effect\"];\n  var Effect_Aff = $PS[\"Effect.Aff\"];\n  var Effect_Class = $PS[\"Effect.Class\"];\n  var Effect_Console = $PS[\"Effect.Console\"];\n  var Effect_Exception = $PS[\"Effect.Exception\"];\n  var Effect_Ref = $PS[\"Effect.Ref\"];\n  var Halogen_Aff_Driver_Eval = $PS[\"Halogen.Aff.Driver.Eval\"];\n  var Halogen_Aff_Driver_State = $PS[\"Halogen.Aff.Driver.State\"];\n  var Halogen_Component = $PS[\"Halogen.Component\"];\n  var Halogen_Data_Slot = $PS[\"Halogen.Data.Slot\"];\n  var Halogen_Query_HalogenQ = $PS[\"Halogen.Query.HalogenQ\"];\n  var Halogen_Query_Input = $PS[\"Halogen.Query.Input\"];\n  var Halogen_Subscription = $PS[\"Halogen.Subscription\"];                \n  var newLifecycleHandlers = Effect_Ref[\"new\"]({\n      initializers: Data_List_Types.Nil.value,\n      finalizers: Data_List_Types.Nil.value\n  });\n  var handlePending = function (ref) {\n      return function __do() {\n          var queue = Effect_Ref.read(ref)();\n          Effect_Ref.write(Data_Maybe.Nothing.value)(ref)();\n          return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(queue)((function () {\n              var $28 = Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff));\n              return function ($29) {\n                  return Halogen_Aff_Driver_Eval.handleAff($28(Data_List.reverse($29)));\n              };\n          })())();\n      };\n  };\n  var cleanupSubscriptionsAndForks = function (v) {\n      return function __do() {\n          Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)(Halogen_Subscription.unsubscribe)))(Effect_Ref.read(v.subscriptions))();\n          Effect_Ref.write(Data_Maybe.Nothing.value)(v.subscriptions)();\n          Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)((function () {\n              var $30 = Effect_Aff.killFiber(Effect_Exception.error(\"finalized\"));\n              return function ($31) {\n                  return Halogen_Aff_Driver_Eval.handleAff($30($31));\n              };\n          })()))(Effect_Ref.read(v.forks))();\n          return Effect_Ref.write(Data_Map_Internal.empty)(v.forks)();\n      };\n  };\n  var runUI = function (renderSpec) {\n      return function (component) {\n          return function (i) {\n              var squashChildInitializers = function (lchs) {\n                  return function (preInits) {\n                      return Halogen_Aff_Driver_State.unDriverStateX(function (st) {\n                          var parentInitializer = Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st[\"component\"][\"eval\"](new Halogen_Query_HalogenQ.Initialize(Data_Unit.unit)));\n                          return Effect_Ref.modify_(function (handlers) {\n                              return {\n                                  initializers: new Data_List_Types.Cons(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(Data_List.reverse(handlers.initializers)))(function () {\n                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(parentInitializer)(function () {\n                                          return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {\n                                              handlePending(st.pendingQueries)();\n                                              return handlePending(st.pendingOuts)();\n                                          });\n                                      });\n                                  }), preInits),\n                                  finalizers: handlers.finalizers\n                              };\n                          })(lchs);\n                      });\n                  };\n              };\n              var runComponent = function (lchs) {\n                  return function (handler) {\n                      return function (j) {\n                          return Halogen_Component.unComponent(function (c) {\n                              return function __do() {\n                                  var lchs$prime = newLifecycleHandlers();\n                                  var $$var = Halogen_Aff_Driver_State.initDriverState(c)(j)(handler)(lchs$prime)();\n                                  var pre = Effect_Ref.read(lchs)();\n                                  Effect_Ref.write({\n                                      initializers: Data_List_Types.Nil.value,\n                                      finalizers: pre.finalizers\n                                  })(lchs)();\n                                  Control_Bind.bindFlipped(Effect.bindEffect)(Halogen_Aff_Driver_State.unDriverStateX((function () {\n                                      var $32 = render(lchs);\n                                      return function ($33) {\n                                          return $32((function (v) {\n                                              return v.selfRef;\n                                          })($33));\n                                      };\n                                  })()))(Effect_Ref.read($$var))();\n                                  Control_Bind.bindFlipped(Effect.bindEffect)(squashChildInitializers(lchs)(pre.initializers))(Effect_Ref.read($$var))();\n                                  return $$var;\n                              };\n                          });\n                      };\n                  };\n              };\n              var renderChild = function (lchs) {\n                  return function (handler) {\n                      return function (childrenInRef) {\n                          return function (childrenOutRef) {\n                              return Halogen_Component.unComponentSlot(function (slot) {\n                                  return function __do() {\n                                      var childrenIn = Data_Functor.map(Effect.functorEffect)(slot.pop)(Effect_Ref.read(childrenInRef))();\n                                      var $$var = (function () {\n                                          if (childrenIn instanceof Data_Maybe.Just) {\n                                              Effect_Ref.write(childrenIn.value0.value1)(childrenInRef)();\n                                              var dsx = Effect_Ref.read(childrenIn.value0.value0)();\n                                              Halogen_Aff_Driver_State.unDriverStateX(function (st) {\n                                                  return function __do() {\n                                                      Data_Function.flip(Effect_Ref.write)(st.handlerRef)((function () {\n                                                          var $34 = Data_Maybe.maybe(Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit))(handler);\n                                                          return function ($35) {\n                                                              return $34(slot.output($35));\n                                                          };\n                                                      })())();\n                                                      return Halogen_Aff_Driver_Eval.handleAff(Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st[\"component\"][\"eval\"](new Halogen_Query_HalogenQ.Receive(slot.input, Data_Unit.unit))))();\n                                                  };\n                                              })(dsx)();\n                                              return childrenIn.value0.value0;\n                                          };\n                                          if (childrenIn instanceof Data_Maybe.Nothing) {\n                                              return runComponent(lchs)((function () {\n                                                  var $36 = Data_Maybe.maybe(Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit))(handler);\n                                                  return function ($37) {\n                                                      return $36(slot.output($37));\n                                                  };\n                                              })())(slot.input)(slot.component)();\n                                          };\n                                          throw new Error(\"Failed pattern match at Halogen.Aff.Driver (line 210, column 14 - line 219, column 98): \" + [ childrenIn.constructor.name ]);\n                                      })();\n                                      var isDuplicate = Data_Functor.map(Effect.functorEffect)(function ($38) {\n                                          return Data_Maybe.isJust(slot.get($38));\n                                      })(Effect_Ref.read(childrenOutRef))();\n                                      Control_Applicative.when(Effect.applicativeEffect)(isDuplicate)(Effect_Console.warn(\"Halogen: Duplicate slot address was detected during rendering, unexpected results may occur\"))();\n                                      Effect_Ref.modify_(slot.set($$var))(childrenOutRef)();\n                                      return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read($$var))(Halogen_Aff_Driver_State.renderStateX(Effect.functorEffect)(function (v) {\n                                          if (v instanceof Data_Maybe.Nothing) {\n                                              return Effect_Exception[\"throw\"](\"Halogen internal error: child was not initialized in renderChild\");\n                                          };\n                                          if (v instanceof Data_Maybe.Just) {\n                                              return Control_Applicative.pure(Effect.applicativeEffect)(renderSpec.renderChild(v.value0));\n                                          };\n                                          throw new Error(\"Failed pattern match at Halogen.Aff.Driver (line 224, column 37 - line 226, column 50): \" + [ v.constructor.name ]);\n                                      }))();\n                                  };\n                              });\n                          };\n                      };\n                  };\n              };\n              var render = function (lchs) {\n                  return function ($$var) {\n                      return function __do() {\n                          var v = Effect_Ref.read($$var)();\n                          var shouldProcessHandlers = Data_Functor.map(Effect.functorEffect)(Data_Maybe.isNothing)(Effect_Ref.read(v.pendingHandlers))();\n                          Control_Applicative.when(Effect.applicativeEffect)(shouldProcessHandlers)(Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(v.pendingHandlers))();\n                          Effect_Ref.write(Halogen_Data_Slot.empty)(v.childrenOut)();\n                          Effect_Ref.write(v.children)(v.childrenIn)();\n                          var selfRef = Control_Category.identity(Control_Category.categoryFn)(v.selfRef);\n                          var pendingQueries = Control_Category.identity(Control_Category.categoryFn)(v.pendingQueries);\n                          var pendingHandlers = Control_Category.identity(Control_Category.categoryFn)(v.pendingHandlers);\n                          var handler = (function () {\n                              var $39 = Halogen_Aff_Driver_Eval.queueOrRun(pendingHandlers);\n                              var $40 = Data_Functor[\"void\"](Effect_Aff.functorAff);\n                              var $41 = Halogen_Aff_Driver_Eval.evalF(render)(selfRef);\n                              return function ($42) {\n                                  return $39($40($41($42)));\n                              };\n                          })();\n                          var childHandler = (function () {\n                              var $43 = Halogen_Aff_Driver_Eval.queueOrRun(pendingQueries);\n                              return function ($44) {\n                                  return $43(handler(Halogen_Query_Input.Action.create($44)));\n                              };\n                          })();\n                          var rendering = renderSpec.render(function ($45) {\n                              return Halogen_Aff_Driver_Eval.handleAff(handler($45));\n                          })(renderChild(lchs)(childHandler)(v.childrenIn)(v.childrenOut))(v.component.render(v.state))(v.rendering)();\n                          var children = Effect_Ref.read(v.childrenOut)();\n                          var childrenIn = Effect_Ref.read(v.childrenIn)();\n                          Halogen_Data_Slot.foreachSlot(Effect.applicativeEffect)(childrenIn)(function (v1) {\n                              return function __do() {\n                                  var childDS = Effect_Ref.read(v1)();\n                                  Halogen_Aff_Driver_State.renderStateX_(Effect.applicativeEffect)(renderSpec.removeChild)(childDS)();\n                                  return finalize(lchs)(childDS)();\n                              };\n                          })();\n                          Data_Function.flip(Effect_Ref.modify_)(v.selfRef)(Halogen_Aff_Driver_State.mapDriverState(function (ds$prime) {\n                              return {\n                                  component: ds$prime.component,\n                                  state: ds$prime.state,\n                                  refs: ds$prime.refs,\n                                  children: children,\n                                  childrenIn: ds$prime.childrenIn,\n                                  childrenOut: ds$prime.childrenOut,\n                                  selfRef: ds$prime.selfRef,\n                                  handlerRef: ds$prime.handlerRef,\n                                  pendingQueries: ds$prime.pendingQueries,\n                                  pendingOuts: ds$prime.pendingOuts,\n                                  pendingHandlers: ds$prime.pendingHandlers,\n                                  rendering: new Data_Maybe.Just(rendering),\n                                  fresh: ds$prime.fresh,\n                                  subscriptions: ds$prime.subscriptions,\n                                  forks: ds$prime.forks,\n                                  lifecycleHandlers: ds$prime.lifecycleHandlers\n                              };\n                          }))();\n                          return Control_Applicative.when(Effect.applicativeEffect)(shouldProcessHandlers)(Data_Function.flip(Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEffect))(Data_Unit.unit)(function (v1) {\n                              return function __do() {\n                                  var handlers = Effect_Ref.read(pendingHandlers)();\n                                  Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(pendingHandlers)();\n                                  Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)((function () {\n                                      var $46 = Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff));\n                                      return function ($47) {\n                                          return Halogen_Aff_Driver_Eval.handleAff($46(Data_List.reverse($47)));\n                                      };\n                                  })())(handlers)();\n                                  var mmore = Effect_Ref.read(pendingHandlers)();\n                                  var $21 = Data_Maybe.maybe(false)(Data_List[\"null\"])(mmore);\n                                  if ($21) {\n                                      return Data_Functor.voidLeft(Effect.functorEffect)(Effect_Ref.write(Data_Maybe.Nothing.value)(pendingHandlers))(new Control_Monad_Rec_Class.Done(Data_Unit.unit))();\n                                  };\n                                  return new Control_Monad_Rec_Class.Loop(Data_Unit.unit);\n                              };\n                          }))();\n                      };\n                  };\n              };\n              var finalize = function (lchs) {\n                  return Halogen_Aff_Driver_State.unDriverStateX(function (st) {\n                      return function __do() {\n                          cleanupSubscriptionsAndForks(st)();\n                          var f = Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st[\"component\"][\"eval\"](new Halogen_Query_HalogenQ.Finalize(Data_Unit.unit)));\n                          Effect_Ref.modify_(function (handlers) {\n                              return {\n                                  initializers: handlers.initializers,\n                                  finalizers: new Data_List_Types.Cons(f, handlers.finalizers)\n                              };\n                          })(lchs)();\n                          return Halogen_Data_Slot.foreachSlot(Effect.applicativeEffect)(st.children)(function (v) {\n                              return function __do() {\n                                  var dsx = Effect_Ref.read(v)();\n                                  return finalize(lchs)(dsx)();\n                              };\n                          })();\n                      };\n                  });\n              };\n              var evalDriver = function (disposed) {\n                  return function (ref) {\n                      return function (q) {\n                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(disposed)))(function (v) {\n                              if (v) {\n                                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Maybe.Nothing.value);\n                              };\n                              return Halogen_Aff_Driver_Eval.evalQ(render)(ref)(q);\n                          });\n                      };\n                  };\n              };\n              var dispose = function (disposed) {\n                  return function (lchs) {\n                      return function (dsx) {\n                          return Halogen_Aff_Driver_Eval.handleLifecycle(lchs)(function __do() {\n                              var v = Effect_Ref.read(disposed)();\n                              if (v) {\n                                  return Data_Unit.unit;\n                              };\n                              Effect_Ref.write(true)(disposed)();\n                              finalize(lchs)(dsx)();\n                              return Halogen_Aff_Driver_State.unDriverStateX(function (v1) {\n                                  return function __do() {\n                                      var v2 = Effect_Class.liftEffect(Effect_Class.monadEffectEffect)(Effect_Ref.read(v1.selfRef))();\n                                      return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v2.rendering)(renderSpec.dispose)();\n                                  };\n                              })(dsx)();\n                          });\n                      };\n                  };\n              };\n              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(newLifecycleHandlers))(function (lchs) {\n                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref[\"new\"](false)))(function (disposed) {\n                      return Halogen_Aff_Driver_Eval.handleLifecycle(lchs)(function __do() {\n                          var sio = Halogen_Subscription.create();\n                          var dsx = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref.read)(runComponent(lchs)((function () {\n                              var $48 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);\n                              var $49 = Halogen_Subscription.notify(sio.listener);\n                              return function ($50) {\n                                  return $48($49($50));\n                              };\n                          })())(i)(component))();\n                          return Halogen_Aff_Driver_State.unDriverStateX(function (st) {\n                              return Control_Applicative.pure(Effect.applicativeEffect)({\n                                  query: evalDriver(disposed)(st.selfRef),\n                                  messages: sio.emitter,\n                                  dispose: dispose(disposed)(lchs)(dsx)\n                              });\n                          })(dsx)();\n                      });\n                  });\n              });\n          };\n      };\n  };\n  exports[\"runUI\"] = runUI;\n})(PS);\n(function(exports) {\n  \"use strict\";                                               \n\n  exports._querySelector = function (selector) {\n    return function (node) {\n      return function () {\n        return node.querySelector(selector);\n      };\n    };\n  };\n})(PS[\"Web.DOM.ParentNode\"] = PS[\"Web.DOM.ParentNode\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Web.DOM.ParentNode\"] = $PS[\"Web.DOM.ParentNode\"] || {};\n  var exports = $PS[\"Web.DOM.ParentNode\"];\n  var $foreign = $PS[\"Web.DOM.ParentNode\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Data_Nullable = $PS[\"Data.Nullable\"];\n  var Effect = $PS[\"Effect\"];\n  var querySelector = function (qs) {\n      var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);\n      var $1 = $foreign[\"_querySelector\"](qs);\n      return function ($2) {\n          return $0($1($2));\n      };\n  };\n  exports[\"querySelector\"] = querySelector;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Web.HTML.Event.EventTypes\"] = $PS[\"Web.HTML.Event.EventTypes\"] || {};\n  var exports = $PS[\"Web.HTML.Event.EventTypes\"];\n  var domcontentloaded = \"DOMContentLoaded\";\n  exports[\"domcontentloaded\"] = domcontentloaded;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  exports._readyState = function (doc) {\n    return function () {\n      return doc.readyState;\n    };\n  };\n})(PS[\"Web.HTML.HTMLDocument\"] = PS[\"Web.HTML.HTMLDocument\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Web.HTML.HTMLDocument.ReadyState\"] = $PS[\"Web.HTML.HTMLDocument.ReadyState\"] || {};\n  var exports = $PS[\"Web.HTML.HTMLDocument.ReadyState\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];                      \n  var Loading = (function () {\n      function Loading() {\n\n      };\n      Loading.value = new Loading();\n      return Loading;\n  })();\n  var Interactive = (function () {\n      function Interactive() {\n\n      };\n      Interactive.value = new Interactive();\n      return Interactive;\n  })();\n  var Complete = (function () {\n      function Complete() {\n\n      };\n      Complete.value = new Complete();\n      return Complete;\n  })();\n  var parse = function (v) {\n      if (v === \"loading\") {\n          return new Data_Maybe.Just(Loading.value);\n      };\n      if (v === \"interactive\") {\n          return new Data_Maybe.Just(Interactive.value);\n      };\n      if (v === \"complete\") {\n          return new Data_Maybe.Just(Complete.value);\n      };\n      return Data_Maybe.Nothing.value;\n  };\n  exports[\"Loading\"] = Loading;\n  exports[\"parse\"] = parse;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Web.HTML.HTMLDocument\"] = $PS[\"Web.HTML.HTMLDocument\"] || {};\n  var exports = $PS[\"Web.HTML.HTMLDocument\"];\n  var $foreign = $PS[\"Web.HTML.HTMLDocument\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Effect = $PS[\"Effect\"];\n  var Unsafe_Coerce = $PS[\"Unsafe.Coerce\"];\n  var Web_HTML_HTMLDocument_ReadyState = $PS[\"Web.HTML.HTMLDocument.ReadyState\"];\n  var toParentNode = Unsafe_Coerce.unsafeCoerce; \n  var toDocument = Unsafe_Coerce.unsafeCoerce;\n  var readyState = (function () {\n      var $0 = Data_Functor.map(Effect.functorEffect)((function () {\n          var $2 = Data_Maybe.fromMaybe(Web_HTML_HTMLDocument_ReadyState.Loading.value);\n          return function ($3) {\n              return $2(Web_HTML_HTMLDocument_ReadyState.parse($3));\n          };\n      })());\n      return function ($1) {\n          return $0($foreign[\"_readyState\"]($1));\n      };\n  })();\n  exports[\"toDocument\"] = toDocument;\n  exports[\"toParentNode\"] = toParentNode;\n  exports[\"readyState\"] = readyState;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  exports._read = function (nothing, just, value) {\n    var tag = Object.prototype.toString.call(value);\n    if (tag.indexOf(\"[object HTML\") === 0 && tag.indexOf(\"Element]\") === tag.length - 8) {\n      return just(value);\n    } else {\n      return nothing;\n    }\n  };\n})(PS[\"Web.HTML.HTMLElement\"] = PS[\"Web.HTML.HTMLElement\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Web.HTML.HTMLElement\"] = $PS[\"Web.HTML.HTMLElement\"] || {};\n  var exports = $PS[\"Web.HTML.HTMLElement\"];\n  var $foreign = $PS[\"Web.HTML.HTMLElement\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Unsafe_Coerce = $PS[\"Unsafe.Coerce\"];                   \n  var toNode = Unsafe_Coerce.unsafeCoerce;\n  var fromElement = function (x) {\n      return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n  };\n  exports[\"fromElement\"] = fromElement;\n  exports[\"toNode\"] = toNode;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.Aff.Util\"] = $PS[\"Halogen.Aff.Util\"] || {};\n  var exports = $PS[\"Halogen.Aff.Util\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Control_Bind = $PS[\"Control.Bind\"];\n  var Control_Monad_Error_Class = $PS[\"Control.Monad.Error.Class\"];\n  var Data_Either = $PS[\"Data.Either\"];\n  var Data_Function = $PS[\"Data.Function\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Data_Unit = $PS[\"Data.Unit\"];\n  var Effect = $PS[\"Effect\"];\n  var Effect_Aff = $PS[\"Effect.Aff\"];\n  var Effect_Class = $PS[\"Effect.Class\"];\n  var Effect_Exception = $PS[\"Effect.Exception\"];\n  var Web_DOM_ParentNode = $PS[\"Web.DOM.ParentNode\"];\n  var Web_Event_EventTarget = $PS[\"Web.Event.EventTarget\"];\n  var Web_HTML = $PS[\"Web.HTML\"];\n  var Web_HTML_Event_EventTypes = $PS[\"Web.HTML.Event.EventTypes\"];\n  var Web_HTML_HTMLDocument = $PS[\"Web.HTML.HTMLDocument\"];\n  var Web_HTML_HTMLDocument_ReadyState = $PS[\"Web.HTML.HTMLDocument.ReadyState\"];\n  var Web_HTML_HTMLElement = $PS[\"Web.HTML.HTMLElement\"];\n  var Web_HTML_Window = $PS[\"Web.HTML.Window\"];                \n  var selectElement = function (query) {\n      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Bind.bindFlipped(Effect.bindEffect)(Control_Bind.composeKleisliFlipped(Effect.bindEffect)((function () {\n          var $2 = Web_DOM_ParentNode.querySelector(query);\n          return function ($3) {\n              return $2(Web_HTML_HTMLDocument.toParentNode($3));\n          };\n      })())(Web_HTML_Window.document))(Web_HTML.window)))(function (mel) {\n          return Control_Applicative.pure(Effect_Aff.applicativeAff)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromElement)(mel));\n      });\n  };\n  var runHalogenAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function[\"const\"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));\n  var awaitLoad = Effect_Aff.makeAff(function (callback) {\n      return function __do() {\n          var rs = Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_HTMLDocument.readyState)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))();\n          if (rs instanceof Web_HTML_HTMLDocument_ReadyState.Loading) {\n              var et = Data_Functor.map(Effect.functorEffect)(Web_HTML_Window.toEventTarget)(Web_HTML.window)();\n              var listener = Web_Event_EventTarget.eventListener(function (v) {\n                  return callback(new Data_Either.Right(Data_Unit.unit));\n              })();\n              Web_Event_EventTarget.addEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(listener)(false)(et)();\n              return Effect_Aff.effectCanceler(Web_Event_EventTarget.removeEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(listener)(false)(et));\n          };\n          callback(new Data_Either.Right(Data_Unit.unit))();\n          return Effect_Aff.nonCanceler;\n      };\n  });\n  var awaitBody = Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(awaitLoad)(function () {\n      return Control_Bind.bind(Effect_Aff.bindAff)(selectElement(\"body\"))(function (body) {\n          return Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error(\"Could not find body\")))(Control_Applicative.pure(Effect_Aff.applicativeAff))(body);\n      });\n  });\n  exports[\"awaitBody\"] = awaitBody;\n  exports[\"runHalogenAff\"] = runHalogenAff;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.Query\"] = $PS[\"Halogen.Query\"] || {};\n  var exports = $PS[\"Halogen.Query\"];\n  var Data_Unit = $PS[\"Data.Unit\"];\n  var mkTell = function (act) {\n      return act(Data_Unit.unit);\n  };\n  exports[\"mkTell\"] = mkTell;\n})(PS);\n(function(exports) {\n  \"use strict\";\n\n  var getEffProp = function (name) {\n    return function (node) {\n      return function () {\n        return node[name];\n      };\n    };\n  };                                                   \n\n  exports._parentNode = getEffProp(\"parentNode\");          \n\n  exports._nextSibling = getEffProp(\"nextSibling\");\n\n  exports.insertBefore = function (node1) {\n    return function (node2) {\n      return function (parent) {\n        return function () {\n          parent.insertBefore(node1, node2);\n        };\n      };\n    };\n  };\n\n  exports.appendChild = function (node) {\n    return function (parent) {\n      return function () {\n        parent.appendChild(node);\n      };\n    };\n  };\n\n  exports.removeChild = function (node) {\n    return function (parent) {\n      return function () {\n        parent.removeChild(node);\n      };\n    };\n  };\n})(PS[\"Web.DOM.Node\"] = PS[\"Web.DOM.Node\"] || {});\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Web.DOM.Node\"] = $PS[\"Web.DOM.Node\"] || {};\n  var exports = $PS[\"Web.DOM.Node\"];\n  var $foreign = $PS[\"Web.DOM.Node\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Data_Nullable = $PS[\"Data.Nullable\"];\n  var Effect = $PS[\"Effect\"];\n  var parentNode = (function () {\n      var $3 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);\n      return function ($4) {\n          return $3($foreign[\"_parentNode\"]($4));\n      };\n  })();\n  var nextSibling = (function () {\n      var $14 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);\n      return function ($15) {\n          return $14($foreign[\"_nextSibling\"]($15));\n      };\n  })();\n  exports[\"parentNode\"] = parentNode;\n  exports[\"nextSibling\"] = nextSibling;\n  exports[\"insertBefore\"] = $foreign.insertBefore;\n  exports[\"appendChild\"] = $foreign.appendChild;\n  exports[\"removeChild\"] = $foreign.removeChild;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Halogen.VDom.Driver\"] = $PS[\"Halogen.VDom.Driver\"] || {};\n  var exports = $PS[\"Halogen.VDom.Driver\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Control_Bind = $PS[\"Control.Bind\"];\n  var Control_Category = $PS[\"Control.Category\"];\n  var Data_Foldable = $PS[\"Data.Foldable\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Data_HeytingAlgebra = $PS[\"Data.HeytingAlgebra\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Data_Newtype = $PS[\"Data.Newtype\"];\n  var Data_Unit = $PS[\"Data.Unit\"];\n  var Effect = $PS[\"Effect\"];\n  var Effect_Aff = $PS[\"Effect.Aff\"];\n  var Effect_Class = $PS[\"Effect.Class\"];\n  var Effect_Ref = $PS[\"Effect.Ref\"];\n  var Halogen_Aff_Driver = $PS[\"Halogen.Aff.Driver\"];\n  var Halogen_Aff_Driver_State = $PS[\"Halogen.Aff.Driver.State\"];\n  var Halogen_Component = $PS[\"Halogen.Component\"];\n  var Halogen_VDom_DOM = $PS[\"Halogen.VDom.DOM\"];\n  var Halogen_VDom_DOM_Prop = $PS[\"Halogen.VDom.DOM.Prop\"];\n  var Halogen_VDom_Machine = $PS[\"Halogen.VDom.Machine\"];\n  var Halogen_VDom_Thunk = $PS[\"Halogen.VDom.Thunk\"];\n  var Unsafe_Reference = $PS[\"Unsafe.Reference\"];\n  var Web_DOM_Node = $PS[\"Web.DOM.Node\"];\n  var Web_HTML = $PS[\"Web.HTML\"];\n  var Web_HTML_HTMLDocument = $PS[\"Web.HTML.HTMLDocument\"];\n  var Web_HTML_HTMLElement = $PS[\"Web.HTML.HTMLElement\"];\n  var Web_HTML_Window = $PS[\"Web.HTML.Window\"];\n  var substInParent = function (v) {\n      return function (v1) {\n          return function (v2) {\n              if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Just) {\n                  return Data_Functor[\"void\"](Effect.functorEffect)(Web_DOM_Node.insertBefore(v)(v1.value0)(v2.value0));\n              };\n              if (v1 instanceof Data_Maybe.Nothing && v2 instanceof Data_Maybe.Just) {\n                  return Data_Functor[\"void\"](Effect.functorEffect)(Web_DOM_Node.appendChild(v)(v2.value0));\n              };\n              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);\n          };\n      };\n  };\n  var removeChild = function (v) {\n      return function __do() {\n          var npn = Web_DOM_Node.parentNode(v.node)();\n          return Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function (pn) {\n              return Web_DOM_Node.removeChild(v.node)(pn);\n          })(npn)();\n      };\n  };\n  var mkSpec = function (handler) {\n      return function (renderChildRef) {\n          return function (document) {\n              var getNode = Halogen_Aff_Driver_State.unRenderStateX(function (v) {\n                  return v.node;\n              });\n              var done = function (st) {\n                  if (st instanceof Data_Maybe.Just) {\n                      return Halogen_VDom_Machine.halt(st.value0);\n                  };\n                  return Data_Unit.unit;\n              };\n              var buildWidget = function (spec) {\n                  var buildThunk = Halogen_VDom_Thunk.buildThunk(Data_Newtype.unwrap())(spec);\n                  var renderComponentSlot = function (cs) {\n                      var renderChild = Effect_Ref.read(renderChildRef)();\n                      var rsx = renderChild(cs)();\n                      var node = getNode(rsx);\n                      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, Data_Maybe.Nothing.value, patch, done));\n                  };\n                  var render = function (slot) {\n                      if (slot instanceof Halogen_Component.ComponentSlot) {\n                          return renderComponentSlot(slot.value0);\n                      };\n                      if (slot instanceof Halogen_Component.ThunkSlot) {\n                          var step = buildThunk(slot.value0);\n                          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(step), new Data_Maybe.Just(step), patch, done));\n                      };\n                      throw new Error(\"Failed pattern match at Halogen.VDom.Driver (line 85, column 7 - line 90, column 75): \" + [ slot.constructor.name ]);\n                  };\n                  var patch = function (st, slot) {\n                      if (st instanceof Data_Maybe.Just) {\n                          if (slot instanceof Halogen_Component.ComponentSlot) {\n                              Halogen_VDom_Machine.halt(st.value0);\n                              return renderComponentSlot(slot.value0);\n                          };\n                          if (slot instanceof Halogen_Component.ThunkSlot) {\n                              var step$prime = Halogen_VDom_Machine.step(st.value0, slot.value0);\n                              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(step$prime), new Data_Maybe.Just(step$prime), patch, done));\n                          };\n                          throw new Error(\"Failed pattern match at Halogen.VDom.Driver (line 98, column 22 - line 104, column 79): \" + [ slot.constructor.name ]);\n                      };\n                      return render(slot);\n                  };\n                  return render;\n              };\n              var buildAttributes = Halogen_VDom_DOM_Prop.buildProp(handler);\n              return {\n                  buildWidget: buildWidget,\n                  buildAttributes: buildAttributes,\n                  document: document\n              };\n          };\n      };\n  };\n  var renderSpec = function (document) {\n      return function (container) {\n          var render = function (handler) {\n              return function (child) {\n                  return function (v) {\n                      return function (v1) {\n                          if (v1 instanceof Data_Maybe.Nothing) {\n                              return function __do() {\n                                  var renderChildRef = Effect_Ref[\"new\"](child)();\n                                  var spec = mkSpec(handler)(renderChildRef)(document);\n                                  var machine = Halogen_VDom_DOM.buildVDom(spec)(v);\n                                  var node = Halogen_VDom_Machine.extract(machine);\n                                  Data_Functor[\"void\"](Effect.functorEffect)(Web_DOM_Node.appendChild(node)(Web_HTML_HTMLElement.toNode(container)))();\n                                  return {\n                                      machine: machine,\n                                      node: node,\n                                      renderChildRef: renderChildRef\n                                  };\n                              };\n                          };\n                          if (v1 instanceof Data_Maybe.Just) {\n                              return function __do() {\n                                  Effect_Ref.write(child)(v1.value0.renderChildRef)();\n                                  var parent = Web_DOM_Node.parentNode(v1.value0.node)();\n                                  var nextSib = Web_DOM_Node.nextSibling(v1.value0.node)();\n                                  var machine$prime = Halogen_VDom_Machine.step(v1.value0.machine, v);\n                                  var newNode = Halogen_VDom_Machine.extract(machine$prime);\n                                  Control_Applicative.when(Effect.applicativeEffect)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean)))(Unsafe_Reference.unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(nextSib)(parent))();\n                                  return {\n                                      machine: machine$prime,\n                                      node: newNode,\n                                      renderChildRef: v1.value0.renderChildRef\n                                  };\n                              };\n                          };\n                          throw new Error(\"Failed pattern match at Halogen.VDom.Driver (line 159, column 5 - line 175, column 80): \" + [ v1.constructor.name ]);\n                      };\n                  };\n              };\n          };\n          return {\n              render: render,\n              renderChild: Control_Category.identity(Control_Category.categoryFn),\n              removeChild: removeChild,\n              dispose: removeChild\n          };\n      };\n  };\n  var runUI = function (component) {\n      return function (i) {\n          return function (element) {\n              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Functor.map(Effect.functorEffect)(Web_HTML_HTMLDocument.toDocument)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))))(function (document) {\n                  return Halogen_Aff_Driver.runUI(renderSpec(document)(element))(component)(i);\n              });\n          };\n      };\n  };\n  exports[\"runUI\"] = runUI;\n})(PS);\n(function($PS) {\n  // Generated by purs version 0.14.5\n  \"use strict\";\n  $PS[\"Main\"] = $PS[\"Main\"] || {};\n  var exports = $PS[\"Main\"];\n  var App_AppM = $PS[\"App.AppM\"];\n  var App_Component_Router = $PS[\"App.Component.Router\"];\n  var App_Data_Route = $PS[\"App.Data.Route\"];\n  var Control_Applicative = $PS[\"Control.Applicative\"];\n  var Control_Bind = $PS[\"Control.Bind\"];\n  var Data_Eq = $PS[\"Data.Eq\"];\n  var Data_Foldable = $PS[\"Data.Foldable\"];\n  var Data_Functor = $PS[\"Data.Functor\"];\n  var Data_Maybe = $PS[\"Data.Maybe\"];\n  var Data_Unit = $PS[\"Data.Unit\"];\n  var Effect = $PS[\"Effect\"];\n  var Effect_Aff = $PS[\"Effect.Aff\"];\n  var Effect_Class = $PS[\"Effect.Class\"];\n  var Halogen_Aff_Util = $PS[\"Halogen.Aff.Util\"];\n  var Halogen_Query = $PS[\"Halogen.Query\"];\n  var Halogen_VDom_Driver = $PS[\"Halogen.VDom.Driver\"];\n  var Routing_Duplex = $PS[\"Routing.Duplex\"];\n  var Routing_Hash = $PS[\"Routing.Hash\"];                \n  var main = Halogen_Aff_Util.runHalogenAff(Control_Bind.bind(Effect_Aff.bindAff)(Halogen_Aff_Util.awaitBody)(function (body) {\n      var initialStore = {\n          currentUser: Data_Maybe.Nothing.value,\n          recentMessageLog: [  ]\n      };\n      return Control_Bind.bind(Effect_Aff.bindAff)(App_AppM.runAppM(initialStore)(App_Component_Router.component(App_AppM.monadEffectAppM)(App_AppM.monadLogAppM)(App_AppM.monadNavigateAppM)(App_AppM.monadUserAppM)(App_AppM.monadStoreAppM)))(function (componentAff) {\n          return Control_Bind.bind(Effect_Aff.bindAff)(Halogen_VDom_Driver.runUI(componentAff)(Data_Unit.unit)(body))(function (halogenIO) {\n              return Data_Functor[\"void\"](Effect_Aff.functorAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Routing_Hash.matchesWith(Data_Foldable.foldableEither)(Routing_Duplex.parse(App_Data_Route.routeCodec))(function (mOld) {\n                  return function ($$new) {\n                      return Control_Applicative.when(Effect.applicativeEffect)(Data_Eq.notEq(Data_Maybe.eqMaybe(App_Data_Route.eqRoute))(mOld)(new Data_Maybe.Just($$new)))(Effect_Aff.launchAff_(halogenIO.query(Halogen_Query.mkTell(App_Component_Router.Navigate.create($$new)))));\n                  };\n              })));\n          });\n      });\n  }));\n  exports[\"main\"] = main;\n})(PS);\nPS[\"Main\"].main();\n\n//# sourceURL=webpack:///./bundles/purs/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./bundles/purs/index.js"]();
/******/ 	
/******/ })()
;